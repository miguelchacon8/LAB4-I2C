

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Feb 13 11:47:58 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2
    54                           	psect	intentry,global,class=CODE,delta=2
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    57                           	dabs	1,0x7E,2
    58     0000                     
    59                           ; Version 2.40
    60                           ; Generated 17/11/2021 GMT
    61                           ; 
    62                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution. Publication is not required when
    76                           ;        this file is used in an embedded application.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC16F887 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94     0000                     	;# 
    95     0001                     	;# 
    96     0002                     	;# 
    97     0003                     	;# 
    98     0004                     	;# 
    99     0005                     	;# 
   100     0006                     	;# 
   101     0007                     	;# 
   102     0008                     	;# 
   103     0009                     	;# 
   104     000A                     	;# 
   105     000B                     	;# 
   106     000C                     	;# 
   107     000D                     	;# 
   108     000E                     	;# 
   109     000E                     	;# 
   110     000F                     	;# 
   111     0010                     	;# 
   112     0011                     	;# 
   113     0012                     	;# 
   114     0013                     	;# 
   115     0014                     	;# 
   116     0015                     	;# 
   117     0015                     	;# 
   118     0016                     	;# 
   119     0017                     	;# 
   120     0018                     	;# 
   121     0019                     	;# 
   122     001A                     	;# 
   123     001B                     	;# 
   124     001B                     	;# 
   125     001C                     	;# 
   126     001D                     	;# 
   127     001E                     	;# 
   128     001F                     	;# 
   129     0081                     	;# 
   130     0085                     	;# 
   131     0086                     	;# 
   132     0087                     	;# 
   133     0088                     	;# 
   134     0089                     	;# 
   135     008C                     	;# 
   136     008D                     	;# 
   137     008E                     	;# 
   138     008F                     	;# 
   139     0090                     	;# 
   140     0091                     	;# 
   141     0092                     	;# 
   142     0093                     	;# 
   143     0093                     	;# 
   144     0093                     	;# 
   145     0094                     	;# 
   146     0095                     	;# 
   147     0096                     	;# 
   148     0097                     	;# 
   149     0098                     	;# 
   150     0099                     	;# 
   151     009A                     	;# 
   152     009B                     	;# 
   153     009C                     	;# 
   154     009D                     	;# 
   155     009E                     	;# 
   156     009F                     	;# 
   157     0105                     	;# 
   158     0107                     	;# 
   159     0108                     	;# 
   160     0109                     	;# 
   161     010C                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     0185                     	;# 
   167     0187                     	;# 
   168     0188                     	;# 
   169     0189                     	;# 
   170     018C                     	;# 
   171     018D                     	;# 
   172     0000                     	;# 
   173     0001                     	;# 
   174     0002                     	;# 
   175     0003                     	;# 
   176     0004                     	;# 
   177     0005                     	;# 
   178     0006                     	;# 
   179     0007                     	;# 
   180     0008                     	;# 
   181     0009                     	;# 
   182     000A                     	;# 
   183     000B                     	;# 
   184     000C                     	;# 
   185     000D                     	;# 
   186     000E                     	;# 
   187     000E                     	;# 
   188     000F                     	;# 
   189     0010                     	;# 
   190     0011                     	;# 
   191     0012                     	;# 
   192     0013                     	;# 
   193     0014                     	;# 
   194     0015                     	;# 
   195     0015                     	;# 
   196     0016                     	;# 
   197     0017                     	;# 
   198     0018                     	;# 
   199     0019                     	;# 
   200     001A                     	;# 
   201     001B                     	;# 
   202     001B                     	;# 
   203     001C                     	;# 
   204     001D                     	;# 
   205     001E                     	;# 
   206     001F                     	;# 
   207     0081                     	;# 
   208     0085                     	;# 
   209     0086                     	;# 
   210     0087                     	;# 
   211     0088                     	;# 
   212     0089                     	;# 
   213     008C                     	;# 
   214     008D                     	;# 
   215     008E                     	;# 
   216     008F                     	;# 
   217     0090                     	;# 
   218     0091                     	;# 
   219     0092                     	;# 
   220     0093                     	;# 
   221     0093                     	;# 
   222     0093                     	;# 
   223     0094                     	;# 
   224     0095                     	;# 
   225     0096                     	;# 
   226     0097                     	;# 
   227     0098                     	;# 
   228     0099                     	;# 
   229     009A                     	;# 
   230     009B                     	;# 
   231     009C                     	;# 
   232     009D                     	;# 
   233     009E                     	;# 
   234     009F                     	;# 
   235     0105                     	;# 
   236     0107                     	;# 
   237     0108                     	;# 
   238     0109                     	;# 
   239     010C                     	;# 
   240     010C                     	;# 
   241     010D                     	;# 
   242     010E                     	;# 
   243     010F                     	;# 
   244     0185                     	;# 
   245     0187                     	;# 
   246     0188                     	;# 
   247     0189                     	;# 
   248     018C                     	;# 
   249     018D                     	;# 
   250     0000                     	;# 
   251     0001                     	;# 
   252     0002                     	;# 
   253     0003                     	;# 
   254     0004                     	;# 
   255     0005                     	;# 
   256     0006                     	;# 
   257     0007                     	;# 
   258     0008                     	;# 
   259     0009                     	;# 
   260     000A                     	;# 
   261     000B                     	;# 
   262     000C                     	;# 
   263     000D                     	;# 
   264     000E                     	;# 
   265     000E                     	;# 
   266     000F                     	;# 
   267     0010                     	;# 
   268     0011                     	;# 
   269     0012                     	;# 
   270     0013                     	;# 
   271     0014                     	;# 
   272     0015                     	;# 
   273     0015                     	;# 
   274     0016                     	;# 
   275     0017                     	;# 
   276     0018                     	;# 
   277     0019                     	;# 
   278     001A                     	;# 
   279     001B                     	;# 
   280     001B                     	;# 
   281     001C                     	;# 
   282     001D                     	;# 
   283     001E                     	;# 
   284     001F                     	;# 
   285     0081                     	;# 
   286     0085                     	;# 
   287     0086                     	;# 
   288     0087                     	;# 
   289     0088                     	;# 
   290     0089                     	;# 
   291     008C                     	;# 
   292     008D                     	;# 
   293     008E                     	;# 
   294     008F                     	;# 
   295     0090                     	;# 
   296     0091                     	;# 
   297     0092                     	;# 
   298     0093                     	;# 
   299     0093                     	;# 
   300     0093                     	;# 
   301     0094                     	;# 
   302     0095                     	;# 
   303     0096                     	;# 
   304     0097                     	;# 
   305     0098                     	;# 
   306     0099                     	;# 
   307     009A                     	;# 
   308     009B                     	;# 
   309     009C                     	;# 
   310     009D                     	;# 
   311     009E                     	;# 
   312     009F                     	;# 
   313     0105                     	;# 
   314     0107                     	;# 
   315     0108                     	;# 
   316     0109                     	;# 
   317     010C                     	;# 
   318     010C                     	;# 
   319     010D                     	;# 
   320     010E                     	;# 
   321     010F                     	;# 
   322     0185                     	;# 
   323     0187                     	;# 
   324     0188                     	;# 
   325     0189                     	;# 
   326     018C                     	;# 
   327     018D                     	;# 
   328     0000                     	;# 
   329     0001                     	;# 
   330     0002                     	;# 
   331     0003                     	;# 
   332     0004                     	;# 
   333     0005                     	;# 
   334     0006                     	;# 
   335     0007                     	;# 
   336     0008                     	;# 
   337     0009                     	;# 
   338     000A                     	;# 
   339     000B                     	;# 
   340     000C                     	;# 
   341     000D                     	;# 
   342     000E                     	;# 
   343     000E                     	;# 
   344     000F                     	;# 
   345     0010                     	;# 
   346     0011                     	;# 
   347     0012                     	;# 
   348     0013                     	;# 
   349     0014                     	;# 
   350     0015                     	;# 
   351     0015                     	;# 
   352     0016                     	;# 
   353     0017                     	;# 
   354     0018                     	;# 
   355     0019                     	;# 
   356     001A                     	;# 
   357     001B                     	;# 
   358     001B                     	;# 
   359     001C                     	;# 
   360     001D                     	;# 
   361     001E                     	;# 
   362     001F                     	;# 
   363     0081                     	;# 
   364     0085                     	;# 
   365     0086                     	;# 
   366     0087                     	;# 
   367     0088                     	;# 
   368     0089                     	;# 
   369     008C                     	;# 
   370     008D                     	;# 
   371     008E                     	;# 
   372     008F                     	;# 
   373     0090                     	;# 
   374     0091                     	;# 
   375     0092                     	;# 
   376     0093                     	;# 
   377     0093                     	;# 
   378     0093                     	;# 
   379     0094                     	;# 
   380     0095                     	;# 
   381     0096                     	;# 
   382     0097                     	;# 
   383     0098                     	;# 
   384     0099                     	;# 
   385     009A                     	;# 
   386     009B                     	;# 
   387     009C                     	;# 
   388     009D                     	;# 
   389     009E                     	;# 
   390     009F                     	;# 
   391     0105                     	;# 
   392     0107                     	;# 
   393     0108                     	;# 
   394     0109                     	;# 
   395     010C                     	;# 
   396     010C                     	;# 
   397     010D                     	;# 
   398     010E                     	;# 
   399     010F                     	;# 
   400     0185                     	;# 
   401     0187                     	;# 
   402     0188                     	;# 
   403     0189                     	;# 
   404     018C                     	;# 
   405     018D                     	;# 
   406     0000                     	;# 
   407     0001                     	;# 
   408     0002                     	;# 
   409     0003                     	;# 
   410     0004                     	;# 
   411     0005                     	;# 
   412     0006                     	;# 
   413     0007                     	;# 
   414     0008                     	;# 
   415     0009                     	;# 
   416     000A                     	;# 
   417     000B                     	;# 
   418     000C                     	;# 
   419     000D                     	;# 
   420     000E                     	;# 
   421     000E                     	;# 
   422     000F                     	;# 
   423     0010                     	;# 
   424     0011                     	;# 
   425     0012                     	;# 
   426     0013                     	;# 
   427     0014                     	;# 
   428     0015                     	;# 
   429     0015                     	;# 
   430     0016                     	;# 
   431     0017                     	;# 
   432     0018                     	;# 
   433     0019                     	;# 
   434     001A                     	;# 
   435     001B                     	;# 
   436     001B                     	;# 
   437     001C                     	;# 
   438     001D                     	;# 
   439     001E                     	;# 
   440     001F                     	;# 
   441     0081                     	;# 
   442     0085                     	;# 
   443     0086                     	;# 
   444     0087                     	;# 
   445     0088                     	;# 
   446     0089                     	;# 
   447     008C                     	;# 
   448     008D                     	;# 
   449     008E                     	;# 
   450     008F                     	;# 
   451     0090                     	;# 
   452     0091                     	;# 
   453     0092                     	;# 
   454     0093                     	;# 
   455     0093                     	;# 
   456     0093                     	;# 
   457     0094                     	;# 
   458     0095                     	;# 
   459     0096                     	;# 
   460     0097                     	;# 
   461     0098                     	;# 
   462     0099                     	;# 
   463     009A                     	;# 
   464     009B                     	;# 
   465     009C                     	;# 
   466     009D                     	;# 
   467     009E                     	;# 
   468     009F                     	;# 
   469     0105                     	;# 
   470     0107                     	;# 
   471     0108                     	;# 
   472     0109                     	;# 
   473     010C                     	;# 
   474     010C                     	;# 
   475     010D                     	;# 
   476     010E                     	;# 
   477     010F                     	;# 
   478     0185                     	;# 
   479     0187                     	;# 
   480     0188                     	;# 
   481     0189                     	;# 
   482     018C                     	;# 
   483     018D                     	;# 
   484     0000                     	;# 
   485     0001                     	;# 
   486     0002                     	;# 
   487     0003                     	;# 
   488     0004                     	;# 
   489     0005                     	;# 
   490     0006                     	;# 
   491     0007                     	;# 
   492     0008                     	;# 
   493     0009                     	;# 
   494     000A                     	;# 
   495     000B                     	;# 
   496     000C                     	;# 
   497     000D                     	;# 
   498     000E                     	;# 
   499     000E                     	;# 
   500     000F                     	;# 
   501     0010                     	;# 
   502     0011                     	;# 
   503     0012                     	;# 
   504     0013                     	;# 
   505     0014                     	;# 
   506     0015                     	;# 
   507     0015                     	;# 
   508     0016                     	;# 
   509     0017                     	;# 
   510     0018                     	;# 
   511     0019                     	;# 
   512     001A                     	;# 
   513     001B                     	;# 
   514     001B                     	;# 
   515     001C                     	;# 
   516     001D                     	;# 
   517     001E                     	;# 
   518     001F                     	;# 
   519     0081                     	;# 
   520     0085                     	;# 
   521     0086                     	;# 
   522     0087                     	;# 
   523     0088                     	;# 
   524     0089                     	;# 
   525     008C                     	;# 
   526     008D                     	;# 
   527     008E                     	;# 
   528     008F                     	;# 
   529     0090                     	;# 
   530     0091                     	;# 
   531     0092                     	;# 
   532     0093                     	;# 
   533     0093                     	;# 
   534     0093                     	;# 
   535     0094                     	;# 
   536     0095                     	;# 
   537     0096                     	;# 
   538     0097                     	;# 
   539     0098                     	;# 
   540     0099                     	;# 
   541     009A                     	;# 
   542     009B                     	;# 
   543     009C                     	;# 
   544     009D                     	;# 
   545     009E                     	;# 
   546     009F                     	;# 
   547     0105                     	;# 
   548     0107                     	;# 
   549     0108                     	;# 
   550     0109                     	;# 
   551     010C                     	;# 
   552     010C                     	;# 
   553     010D                     	;# 
   554     010E                     	;# 
   555     010F                     	;# 
   556     0185                     	;# 
   557     0187                     	;# 
   558     0188                     	;# 
   559     0189                     	;# 
   560     018C                     	;# 
   561     018D                     	;# 
   562     0000                     	;# 
   563     0001                     	;# 
   564     0002                     	;# 
   565     0003                     	;# 
   566     0004                     	;# 
   567     0005                     	;# 
   568     0006                     	;# 
   569     0007                     	;# 
   570     0008                     	;# 
   571     0009                     	;# 
   572     000A                     	;# 
   573     000B                     	;# 
   574     000C                     	;# 
   575     000D                     	;# 
   576     000E                     	;# 
   577     000E                     	;# 
   578     000F                     	;# 
   579     0010                     	;# 
   580     0011                     	;# 
   581     0012                     	;# 
   582     0013                     	;# 
   583     0014                     	;# 
   584     0015                     	;# 
   585     0015                     	;# 
   586     0016                     	;# 
   587     0017                     	;# 
   588     0018                     	;# 
   589     0019                     	;# 
   590     001A                     	;# 
   591     001B                     	;# 
   592     001B                     	;# 
   593     001C                     	;# 
   594     001D                     	;# 
   595     001E                     	;# 
   596     001F                     	;# 
   597     0081                     	;# 
   598     0085                     	;# 
   599     0086                     	;# 
   600     0087                     	;# 
   601     0088                     	;# 
   602     0089                     	;# 
   603     008C                     	;# 
   604     008D                     	;# 
   605     008E                     	;# 
   606     008F                     	;# 
   607     0090                     	;# 
   608     0091                     	;# 
   609     0092                     	;# 
   610     0093                     	;# 
   611     0093                     	;# 
   612     0093                     	;# 
   613     0094                     	;# 
   614     0095                     	;# 
   615     0096                     	;# 
   616     0097                     	;# 
   617     0098                     	;# 
   618     0099                     	;# 
   619     009A                     	;# 
   620     009B                     	;# 
   621     009C                     	;# 
   622     009D                     	;# 
   623     009E                     	;# 
   624     009F                     	;# 
   625     0105                     	;# 
   626     0107                     	;# 
   627     0108                     	;# 
   628     0109                     	;# 
   629     010C                     	;# 
   630     010C                     	;# 
   631     010D                     	;# 
   632     010E                     	;# 
   633     010F                     	;# 
   634     0185                     	;# 
   635     0187                     	;# 
   636     0188                     	;# 
   637     0189                     	;# 
   638     018C                     	;# 
   639     018D                     	;# 
   640     0000                     	;# 
   641     0001                     	;# 
   642     0002                     	;# 
   643     0003                     	;# 
   644     0004                     	;# 
   645     0005                     	;# 
   646     0006                     	;# 
   647     0007                     	;# 
   648     0008                     	;# 
   649     0009                     	;# 
   650     000A                     	;# 
   651     000B                     	;# 
   652     000C                     	;# 
   653     000D                     	;# 
   654     000E                     	;# 
   655     000E                     	;# 
   656     000F                     	;# 
   657     0010                     	;# 
   658     0011                     	;# 
   659     0012                     	;# 
   660     0013                     	;# 
   661     0014                     	;# 
   662     0015                     	;# 
   663     0015                     	;# 
   664     0016                     	;# 
   665     0017                     	;# 
   666     0018                     	;# 
   667     0019                     	;# 
   668     001A                     	;# 
   669     001B                     	;# 
   670     001B                     	;# 
   671     001C                     	;# 
   672     001D                     	;# 
   673     001E                     	;# 
   674     001F                     	;# 
   675     0081                     	;# 
   676     0085                     	;# 
   677     0086                     	;# 
   678     0087                     	;# 
   679     0088                     	;# 
   680     0089                     	;# 
   681     008C                     	;# 
   682     008D                     	;# 
   683     008E                     	;# 
   684     008F                     	;# 
   685     0090                     	;# 
   686     0091                     	;# 
   687     0092                     	;# 
   688     0093                     	;# 
   689     0093                     	;# 
   690     0093                     	;# 
   691     0094                     	;# 
   692     0095                     	;# 
   693     0096                     	;# 
   694     0097                     	;# 
   695     0098                     	;# 
   696     0099                     	;# 
   697     009A                     	;# 
   698     009B                     	;# 
   699     009C                     	;# 
   700     009D                     	;# 
   701     009E                     	;# 
   702     009F                     	;# 
   703     0105                     	;# 
   704     0107                     	;# 
   705     0108                     	;# 
   706     0109                     	;# 
   707     010C                     	;# 
   708     010C                     	;# 
   709     010D                     	;# 
   710     010E                     	;# 
   711     010F                     	;# 
   712     0185                     	;# 
   713     0187                     	;# 
   714     0188                     	;# 
   715     0189                     	;# 
   716     018C                     	;# 
   717     018D                     	;# 
   718     0000                     	;# 
   719     0001                     	;# 
   720     0002                     	;# 
   721     0003                     	;# 
   722     0004                     	;# 
   723     0005                     	;# 
   724     0006                     	;# 
   725     0007                     	;# 
   726     0008                     	;# 
   727     0009                     	;# 
   728     000A                     	;# 
   729     000B                     	;# 
   730     000C                     	;# 
   731     000D                     	;# 
   732     000E                     	;# 
   733     000E                     	;# 
   734     000F                     	;# 
   735     0010                     	;# 
   736     0011                     	;# 
   737     0012                     	;# 
   738     0013                     	;# 
   739     0014                     	;# 
   740     0015                     	;# 
   741     0015                     	;# 
   742     0016                     	;# 
   743     0017                     	;# 
   744     0018                     	;# 
   745     0019                     	;# 
   746     001A                     	;# 
   747     001B                     	;# 
   748     001B                     	;# 
   749     001C                     	;# 
   750     001D                     	;# 
   751     001E                     	;# 
   752     001F                     	;# 
   753     0081                     	;# 
   754     0085                     	;# 
   755     0086                     	;# 
   756     0087                     	;# 
   757     0088                     	;# 
   758     0089                     	;# 
   759     008C                     	;# 
   760     008D                     	;# 
   761     008E                     	;# 
   762     008F                     	;# 
   763     0090                     	;# 
   764     0091                     	;# 
   765     0092                     	;# 
   766     0093                     	;# 
   767     0093                     	;# 
   768     0093                     	;# 
   769     0094                     	;# 
   770     0095                     	;# 
   771     0096                     	;# 
   772     0097                     	;# 
   773     0098                     	;# 
   774     0099                     	;# 
   775     009A                     	;# 
   776     009B                     	;# 
   777     009C                     	;# 
   778     009D                     	;# 
   779     009E                     	;# 
   780     009F                     	;# 
   781     0105                     	;# 
   782     0107                     	;# 
   783     0108                     	;# 
   784     0109                     	;# 
   785     010C                     	;# 
   786     010C                     	;# 
   787     010D                     	;# 
   788     010E                     	;# 
   789     010F                     	;# 
   790     0185                     	;# 
   791     0187                     	;# 
   792     0188                     	;# 
   793     0189                     	;# 
   794     018C                     	;# 
   795     018D                     	;# 
   796                           
   797                           	psect	strings
   798     0800                     __pstrings:
   799     0800                     stringtab:
   800     0800                     __stringtab:
   801                           
   802                           ;	String table - string pointers are 1 byte each
   803     0800  1BFF               	btfsc	btemp+1,7
   804     0801  280A               	ljmp	stringcode
   805     0802  1383               	bcf	3,7
   806     0803  187F               	btfsc	btemp+1,0
   807     0804  1783               	bsf	3,7
   808     0805  0800               	movf	0,w
   809     0806  0A84               	incf	4,f
   810     0807  1903               	skipnz
   811     0808  0AFF               	incf	btemp+1,f
   812     0809  0008               	return
   813     080A                     stringcode:
   814     080A                     stringdir:
   815     080A  3008               	movlw	high stringdir
   816     080B  008A               	movwf	10
   817     080C  0804               	movf	4,w
   818     080D  0A84               	incf	4,f
   819     080E  0782               	addwf	2,f
   820     080F                     __stringbase:
   821     080F  3400               	retlw	0
   822     0810                     __end_of__stringtab:
   823     0810                     _dpowers:
   824     0810  3401               	retlw	1
   825     0811  3400               	retlw	0
   826     0812  340A               	retlw	10
   827     0813  3400               	retlw	0
   828     0814  3464               	retlw	100
   829     0815  3400               	retlw	0
   830     0816  34E8               	retlw	232
   831     0817  3403               	retlw	3
   832     0818  3410               	retlw	16
   833     0819  3427               	retlw	39
   834     081A                     __end_of_dpowers:
   835     0013                     _SSPBUF	set	19
   836     0014                     _SSPCON	set	20
   837     0009                     _PORTE	set	9
   838     0008                     _PORTD	set	8
   839     0006                     _PORTB	set	6
   840     0005                     _PORTA	set	5
   841     000B                     _INTCONbits	set	11
   842     0006                     _PORTBbits	set	6
   843     001E                     _ADRESH	set	30
   844     001F                     _ADCON0bits	set	31
   845     0005                     _PORTAbits	set	5
   846     0008                     _PORTDbits	set	8
   847     0063                     _SSPIF	set	99
   848     005E                     _PEIE	set	94
   849     005F                     _GIE	set	95
   850     0058                     _RBIF	set	88
   851     0066                     _ADIF	set	102
   852     0091                     _SSPCON2bits	set	145
   853     0087                     _TRISCbits	set	135
   854     0094                     _SSPSTAT	set	148
   855     0093                     _SSPADD	set	147
   856     0091                     _SSPCON2	set	145
   857     0081                     _OPTION_REGbits	set	129
   858     0096                     _IOCBbits	set	150
   859     0095                     _WPUBbits	set	149
   860     0088                     _TRISD	set	136
   861     0085                     _TRISA	set	133
   862     0086                     _TRISB	set	134
   863     009F                     _ADCON1bits	set	159
   864     0085                     _TRISAbits	set	133
   865     008F                     _OSCCONbits	set	143
   866     0088                     _TRISDbits	set	136
   867     0463                     _SSPIE	set	1123
   868     043C                     _TRISC4	set	1084
   869     043B                     _TRISC3	set	1083
   870     0189                     _ANSELH	set	393
   871     0188                     _ANSEL	set	392
   872     0188                     _ANSELbits	set	392
   873     081A                     STR_1:
   874     081A  3420               	retlw	32	;' '
   875     081B  3454               	retlw	84	;'T'
   876     081C  3400               	retlw	0
   877     081D                     STR_2:
   878     081D  3425               	retlw	37	;'%'
   879     081E  3475               	retlw	117	;'u'
   880     081F  3400               	retlw	0
   881     0820                     STR_6:
   882     0820  342F               	retlw	47	;'/'
   883     0821  3400               	retlw	0
   884     0822                     STR_4:
   885     0822  343A               	retlw	58	;':'
   886     0823  3400               	retlw	0
   887     0824                     STR_3:
   888     0824  3443               	retlw	67	;'C'
   889     0825  3400               	retlw	0
   890     0820                     
   891                           	psect	cinit
   892     000F                     start_initialization:	
   893                           ; #config settings
   894                           
   895     000F                     __initialization:
   896                           
   897                           ; Clear objects allocated to COMMON
   898     000F  01F6               	clrf	__pbssCOMMON& (0+127)
   899     0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   900     0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   901     0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   902                           
   903                           ; Clear objects allocated to BANK0
   904     0013  1383               	bcf	3,7	;select IRP bank0
   905     0014  305E               	movlw	low __pbssBANK0
   906     0015  0084               	movwf	4
   907     0016  3070               	movlw	low (__pbssBANK0+18)
   908     0017  120A  158A  20B5  120A  118A  	fcall	clear_ram0
   909                           
   910                           ; Clear objects allocated to BANK1
   911     001C  30A0               	movlw	low __pbssBANK1
   912     001D  0084               	movwf	4
   913     001E  30C2               	movlw	low (__pbssBANK1+34)
   914     001F  120A  158A  20B5  120A  118A  	fcall	clear_ram0
   915     0024                     end_of_initialization:	
   916                           ;End of C runtime variable initialization code
   917                           
   918     0024                     __end_of__initialization:
   919     0024  0183               	clrf	3
   920     0025  120A  118A  2828   	ljmp	_main	;jump to C main() function
   921                           
   922                           	psect	bssCOMMON
   923     0076                     __pbssCOMMON:
   924     0076                     _udia:
   925     0076                     	ds	1
   926     0077                     _dhora:
   927     0077                     	ds	1
   928     0078                     _uhora:
   929     0078                     	ds	1
   930     0079                     _cambio:
   931     0079                     	ds	1
   932                           
   933                           	psect	bssBANK0
   934     005E                     __pbssBANK0:
   935     005E                     _ano:
   936     005E                     	ds	1
   937     005F                     _mes:
   938     005F                     	ds	1
   939     0060                     _dia:
   940     0060                     	ds	1
   941     0061                     _hora:
   942     0061                     	ds	1
   943     0062                     _min:
   944     0062                     	ds	1
   945     0063                     _sec:
   946     0063                     	ds	1
   947     0064                     _dmin:
   948     0064                     	ds	1
   949     0065                     _umin:
   950     0065                     	ds	1
   951     0066                     _dseg:
   952     0066                     	ds	1
   953     0067                     _useg:
   954     0067                     	ds	1
   955     0068                     _anos:
   956     0068                     	ds	1
   957     0069                     _meses:
   958     0069                     	ds	1
   959     006A                     _dias:
   960     006A                     	ds	1
   961     006B                     _horas:
   962     006B                     	ds	1
   963     006C                     _minutos:
   964     006C                     	ds	1
   965     006D                     _segundos:
   966     006D                     	ds	1
   967     006E                     _V1:
   968     006E                     	ds	1
   969     006F                     _modo:
   970     006F                     	ds	1
   971                           
   972                           	psect	bssBANK1
   973     00A0                     __pbssBANK1:
   974     00A0                     _d1:
   975     00A0                     	ds	2
   976     00A2                     _u1:
   977     00A2                     	ds	2
   978     00A4                     _VOLT1:
   979     00A4                     	ds	2
   980     00A6                     _valor2:
   981     00A6                     	ds	1
   982     00A7                     _valor:
   983     00A7                     	ds	1
   984     00A8                     _dano:
   985     00A8                     	ds	1
   986     00A9                     _uano:
   987     00A9                     	ds	1
   988     00AA                     _dmes:
   989     00AA                     	ds	1
   990     00AB                     _umes:
   991     00AB                     	ds	1
   992     00AC                     _ddia:
   993     00AC                     	ds	1
   994     00AD                     _lecADC:
   995     00AD                     	ds	1
   996     00AE                     _buffer:
   997     00AE                     	ds	20
   998                           
   999                           	psect	clrtext
  1000     08B5                     clear_ram0:	
  1001                           ;	Called with FSR containing the base address, and
  1002                           ;	W with the last address+1
  1003                           
  1004     08B5  0064               	clrwdt	;clear the watchdog before getting into this loop
  1005     08B6                     clrloop0:
  1006     08B6  0180               	clrf	0	;clear RAM location pointed to by FSR
  1007     08B7  0A84               	incf	4,f	;increment pointer
  1008     08B8  0604               	xorwf	4,w	;XOR with final address
  1009     08B9  1903               	btfsc	3,2	;have we reached the end yet?
  1010     08BA  3400               	retlw	0	;all done for this memory range, return
  1011     08BB  0604               	xorwf	4,w	;XOR again to restore value
  1012     08BC  28B6               	goto	clrloop0	;do the next byte
  1013                           
  1014                           	psect	cstackBANK1
  1015     00C2                     __pcstackBANK1:
  1016     00C2                     ??_main:
  1017                           
  1018                           ; 1 bytes @ 0x0
  1019     00C2                     	ds	4
  1020                           
  1021                           	psect	cstackCOMMON
  1022     0070                     __pcstackCOMMON:
  1023     0070                     ?_setup:
  1024     0070                     ?_I2C_Master_Start:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027     0070                     ?_I2C_Master_Stop:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030     0070                     ?_valorLCD:	
  1031                           ; 1 bytes @ 0x0
  1032                           
  1033     0070                     ?_leer_sec:	
  1034                           ; 1 bytes @ 0x0
  1035                           
  1036     0070                     ?_inttochar:	
  1037                           ; 1 bytes @ 0x0
  1038                           
  1039     0070                     ?_leer_min:	
  1040                           ; 1 bytes @ 0x0
  1041                           
  1042     0070                     ?_leer_hora:	
  1043                           ; 1 bytes @ 0x0
  1044                           
  1045     0070                     ?_leer_dia:	
  1046                           ; 1 bytes @ 0x0
  1047                           
  1048     0070                     ?_leer_mes:	
  1049                           ; 1 bytes @ 0x0
  1050                           
  1051     0070                     ?_leer_ano:	
  1052                           ; 1 bytes @ 0x0
  1053                           
  1054     0070                     ?_modoboton:	
  1055                           ; 1 bytes @ 0x0
  1056                           
  1057     0070                     ?_verificacion:	
  1058                           ; 1 bytes @ 0x0
  1059                           
  1060     0070                     ?_Lcd_Port:	
  1061                           ; 1 bytes @ 0x0
  1062                           
  1063     0070                     ?_Lcd_Cmd:	
  1064                           ; 1 bytes @ 0x0
  1065                           
  1066     0070                     ?_Lcd_Clear:	
  1067                           ; 1 bytes @ 0x0
  1068                           
  1069     0070                     ?_Lcd_Init:	
  1070                           ; 1 bytes @ 0x0
  1071                           
  1072     0070                     ?_Lcd_Write_Char:	
  1073                           ; 1 bytes @ 0x0
  1074                           
  1075     0070                     ?_setupINTOSC:	
  1076                           ; 1 bytes @ 0x0
  1077                           
  1078     0070                     ?_ISR:	
  1079                           ; 1 bytes @ 0x0
  1080                           
  1081     0070                     ??_ISR:	
  1082                           ; 1 bytes @ 0x0
  1083                           
  1084     0070                     ?_main:	
  1085                           ; 1 bytes @ 0x0
  1086                           
  1087     0070                     ?_I2C_Master_Wait:	
  1088                           ; 1 bytes @ 0x0
  1089                           
  1090     0070                     ?_I2C_Master_RepeatedStart:	
  1091                           ; 1 bytes @ 0x0
  1092                           
  1093     0070                     ?_conv:	
  1094                           ; 1 bytes @ 0x0
  1095                           
  1096     0070                     ?_convh:	
  1097                           ; 1 bytes @ 0x0
  1098                           
  1099                           
  1100                           ; 1 bytes @ 0x0
  1101     0070                     	ds	4
  1102     0074                     ??_I2C_Master_Start:
  1103     0074                     ?_I2C_Master_Write:	
  1104                           ; 1 bytes @ 0x4
  1105                           
  1106     0074                     ??_I2C_Master_Stop:	
  1107                           ; 1 bytes @ 0x4
  1108                           
  1109     0074                     ??_inttochar:	
  1110                           ; 1 bytes @ 0x4
  1111                           
  1112     0074                     ??_verificacion:	
  1113                           ; 1 bytes @ 0x4
  1114                           
  1115     0074                     ??_Lcd_Port:	
  1116                           ; 1 bytes @ 0x4
  1117                           
  1118     0074                     ??_setupINTOSC:	
  1119                           ; 1 bytes @ 0x4
  1120                           
  1121     0074                     ??_I2C_Master_Wait:	
  1122                           ; 1 bytes @ 0x4
  1123                           
  1124     0074                     ??_I2C_Master_RepeatedStart:	
  1125                           ; 1 bytes @ 0x4
  1126                           
  1127     0074                     ??___lmul:	
  1128                           ; 1 bytes @ 0x4
  1129                           
  1130     0074                     ?___bmul:	
  1131                           ; 1 bytes @ 0x4
  1132                           
  1133     0074                     ??___lldiv:	
  1134                           ; 1 bytes @ 0x4
  1135                           
  1136     0074                     ??___awdiv:	
  1137                           ; 1 bytes @ 0x4
  1138                           
  1139     0074                     ??___awmod:	
  1140                           ; 1 bytes @ 0x4
  1141                           
  1142     0074                     ??___lwdiv:	
  1143                           ; 1 bytes @ 0x4
  1144                           
  1145     0074                     ?_I2C_Master_Read:	
  1146                           ; 1 bytes @ 0x4
  1147                           
  1148     0074                     Lcd_Port@a:	
  1149                           ; 2 bytes @ 0x4
  1150                           
  1151     0074                     setupINTOSC@IRCF:	
  1152                           ; 1 bytes @ 0x4
  1153                           
  1154     0074                     inttochar@num:	
  1155                           ; 1 bytes @ 0x4
  1156                           
  1157     0074                     ___bmul@multiplicand:	
  1158                           ; 1 bytes @ 0x4
  1159                           
  1160     0074                     I2C_Master_Write@d:	
  1161                           ; 1 bytes @ 0x4
  1162                           
  1163     0074                     I2C_Master_Read@a:	
  1164                           ; 2 bytes @ 0x4
  1165                           
  1166                           
  1167                           ; 2 bytes @ 0x4
  1168     0074                     	ds	1
  1169     0075                     ??_setup:
  1170     0075                     ??_Lcd_Write_Char:	
  1171                           ; 1 bytes @ 0x5
  1172                           
  1173     0075                     ??___bmul:	
  1174                           ; 1 bytes @ 0x5
  1175                           
  1176     0075                     ??___aldiv:	
  1177                           ; 1 bytes @ 0x5
  1178                           
  1179     0075                     ??___lwmod:	
  1180                           ; 1 bytes @ 0x5
  1181                           
  1182     0075                     Lcd_Cmd@a:	
  1183                           ; 1 bytes @ 0x5
  1184                           
  1185                           
  1186                           ; 1 bytes @ 0x5
  1187     0075                     	ds	1
  1188     0076                     ??_I2C_Master_Write:
  1189     0076                     ??_leer_sec:	
  1190                           ; 1 bytes @ 0x6
  1191                           
  1192     0076                     ??_leer_min:	
  1193                           ; 1 bytes @ 0x6
  1194                           
  1195     0076                     ??_leer_hora:	
  1196                           ; 1 bytes @ 0x6
  1197                           
  1198     0076                     ??_leer_dia:	
  1199                           ; 1 bytes @ 0x6
  1200                           
  1201     0076                     ??_leer_mes:	
  1202                           ; 1 bytes @ 0x6
  1203                           
  1204     0076                     ??_leer_ano:	
  1205                           ; 1 bytes @ 0x6
  1206                           
  1207     0076                     ??_Lcd_Clear:	
  1208                           ; 1 bytes @ 0x6
  1209                           
  1210                           
  1211                           	psect	cstackBANK0
  1212     0020                     __pcstackBANK0:	
  1213                           ; 1 bytes @ 0x6
  1214                           
  1215     0020                     ??_I2C_Master_Read:
  1216     0020                     ??_modoboton:	
  1217                           ; 1 bytes @ 0x0
  1218                           
  1219     0020                     ??_Lcd_Cmd:	
  1220                           ; 1 bytes @ 0x0
  1221                           
  1222     0020                     ?___awdiv:	
  1223                           ; 1 bytes @ 0x0
  1224                           
  1225     0020                     ?___awmod:	
  1226                           ; 2 bytes @ 0x0
  1227                           
  1228     0020                     ?___lwdiv:	
  1229                           ; 2 bytes @ 0x0
  1230                           
  1231     0020                     ?___lmul:	
  1232                           ; 2 bytes @ 0x0
  1233                           
  1234     0020                     ?___lldiv:	
  1235                           ; 4 bytes @ 0x0
  1236                           
  1237     0020                     Lcd_Write_Char@temp:	
  1238                           ; 4 bytes @ 0x0
  1239                           
  1240     0020                     ___bmul@product:	
  1241                           ; 1 bytes @ 0x0
  1242                           
  1243     0020                     ___awdiv@divisor:	
  1244                           ; 1 bytes @ 0x0
  1245                           
  1246     0020                     ___awmod@divisor:	
  1247                           ; 2 bytes @ 0x0
  1248                           
  1249     0020                     ___lwdiv@divisor:	
  1250                           ; 2 bytes @ 0x0
  1251                           
  1252     0020                     ___lmul@multiplier:	
  1253                           ; 2 bytes @ 0x0
  1254                           
  1255     0020                     ___lldiv@divisor:	
  1256                           ; 4 bytes @ 0x0
  1257                           
  1258                           
  1259                           ; 4 bytes @ 0x0
  1260     0020                     	ds	1
  1261     0021                     Lcd_Write_Char@y:
  1262     0021                     ___bmul@multiplier:	
  1263                           ; 1 bytes @ 0x1
  1264                           
  1265                           
  1266                           ; 1 bytes @ 0x1
  1267     0021                     	ds	1
  1268     0022                     ?_Lcd_Set_Cursor:
  1269     0022                     ??_Lcd_Init:	
  1270                           ; 1 bytes @ 0x2
  1271                           
  1272     0022                     ??_conv:	
  1273                           ; 1 bytes @ 0x2
  1274                           
  1275     0022                     ??_convh:	
  1276                           ; 1 bytes @ 0x2
  1277                           
  1278     0022                     Lcd_Set_Cursor@b:	
  1279                           ; 1 bytes @ 0x2
  1280                           
  1281     0022                     Lcd_Write_Char@a:	
  1282                           ; 1 bytes @ 0x2
  1283                           
  1284     0022                     I2C_Master_Read@temp:	
  1285                           ; 1 bytes @ 0x2
  1286                           
  1287     0022                     ___awdiv@dividend:	
  1288                           ; 2 bytes @ 0x2
  1289                           
  1290     0022                     ___awmod@dividend:	
  1291                           ; 2 bytes @ 0x2
  1292                           
  1293     0022                     ___lwdiv@dividend:	
  1294                           ; 2 bytes @ 0x2
  1295                           
  1296                           
  1297                           ; 2 bytes @ 0x2
  1298     0022                     	ds	1
  1299     0023                     ??_Lcd_Set_Cursor:
  1300     0023                     ?_Lcd_Write_String:	
  1301                           ; 1 bytes @ 0x3
  1302                           
  1303     0023                     conv@un:	
  1304                           ; 1 bytes @ 0x3
  1305                           
  1306     0023                     convh@unhora:	
  1307                           ; 1 bytes @ 0x3
  1308                           
  1309     0023                     Lcd_Write_String@a:	
  1310                           ; 1 bytes @ 0x3
  1311                           
  1312                           
  1313                           ; 2 bytes @ 0x3
  1314     0023                     	ds	1
  1315     0024                     Lcd_Set_Cursor@a:
  1316     0024                     conv@dec:	
  1317                           ; 1 bytes @ 0x4
  1318                           
  1319     0024                     convh@dechora:	
  1320                           ; 1 bytes @ 0x4
  1321                           
  1322     0024                     ___awdiv@counter:	
  1323                           ; 1 bytes @ 0x4
  1324                           
  1325     0024                     ___awmod@counter:	
  1326                           ; 1 bytes @ 0x4
  1327                           
  1328     0024                     ___lwdiv@counter:	
  1329                           ; 1 bytes @ 0x4
  1330                           
  1331     0024                     ___lmul@multiplicand:	
  1332                           ; 1 bytes @ 0x4
  1333                           
  1334     0024                     ___lldiv@dividend:	
  1335                           ; 4 bytes @ 0x4
  1336                           
  1337                           
  1338                           ; 4 bytes @ 0x4
  1339     0024                     	ds	1
  1340     0025                     ??_Lcd_Write_String:
  1341     0025                     Lcd_Set_Cursor@z:	
  1342                           ; 1 bytes @ 0x5
  1343                           
  1344     0025                     conv@convertido:	
  1345                           ; 1 bytes @ 0x5
  1346                           
  1347     0025                     convh@convertidohora:	
  1348                           ; 1 bytes @ 0x5
  1349                           
  1350     0025                     ___awdiv@sign:	
  1351                           ; 1 bytes @ 0x5
  1352                           
  1353     0025                     ___awmod@sign:	
  1354                           ; 1 bytes @ 0x5
  1355                           
  1356     0025                     ___lwdiv@quotient:	
  1357                           ; 1 bytes @ 0x5
  1358                           
  1359                           
  1360                           ; 2 bytes @ 0x5
  1361     0025                     	ds	1
  1362     0026                     Lcd_Set_Cursor@y:
  1363     0026                     conv@valor:	
  1364                           ; 1 bytes @ 0x6
  1365                           
  1366     0026                     convh@valor2:	
  1367                           ; 1 bytes @ 0x6
  1368                           
  1369     0026                     ___awdiv@quotient:	
  1370                           ; 1 bytes @ 0x6
  1371                           
  1372                           
  1373                           ; 2 bytes @ 0x6
  1374     0026                     	ds	1
  1375     0027                     ?___lwmod:
  1376     0027                     Lcd_Set_Cursor@temp:	
  1377                           ; 2 bytes @ 0x7
  1378                           
  1379     0027                     ___lwmod@divisor:	
  1380                           ; 1 bytes @ 0x7
  1381                           
  1382                           
  1383                           ; 2 bytes @ 0x7
  1384     0027                     	ds	1
  1385     0028                     Lcd_Write_String@i:
  1386     0028                     ___lmul@product:	
  1387                           ; 2 bytes @ 0x8
  1388                           
  1389     0028                     ___lldiv@quotient:	
  1390                           ; 4 bytes @ 0x8
  1391                           
  1392                           
  1393                           ; 4 bytes @ 0x8
  1394     0028                     	ds	1
  1395     0029                     ___lwmod@dividend:
  1396                           
  1397                           ; 2 bytes @ 0x9
  1398     0029                     	ds	2
  1399     002B                     ___lwmod@counter:
  1400                           
  1401                           ; 1 bytes @ 0xB
  1402     002B                     	ds	1
  1403     002C                     ?_descomponer:
  1404     002C                     ?_sprintf:	
  1405                           ; 1 bytes @ 0xC
  1406                           
  1407     002C                     ?___aldiv:	
  1408                           ; 2 bytes @ 0xC
  1409                           
  1410     002C                     sprintf@f:	
  1411                           ; 4 bytes @ 0xC
  1412                           
  1413     002C                     ___lldiv@counter:	
  1414                           ; 1 bytes @ 0xC
  1415                           
  1416     002C                     descomponer@pos:	
  1417                           ; 1 bytes @ 0xC
  1418                           
  1419     002C                     ___aldiv@divisor:	
  1420                           ; 2 bytes @ 0xC
  1421                           
  1422                           
  1423                           ; 4 bytes @ 0xC
  1424     002C                     	ds	1
  1425     002D                     ?_I2C_Master_Init:
  1426     002D                     I2C_Master_Init@c:	
  1427                           ; 1 bytes @ 0xD
  1428                           
  1429                           
  1430                           ; 4 bytes @ 0xD
  1431     002D                     	ds	1
  1432     002E                     descomponer@num:
  1433                           
  1434                           ; 2 bytes @ 0xE
  1435     002E                     	ds	1
  1436     002F                     ??_sprintf:
  1437                           
  1438                           ; 1 bytes @ 0xF
  1439     002F                     	ds	1
  1440     0030                     ??_descomponer:
  1441     0030                     ___aldiv@dividend:	
  1442                           ; 1 bytes @ 0x10
  1443                           
  1444                           
  1445                           ; 4 bytes @ 0x10
  1446     0030                     	ds	1
  1447     0031                     ??_I2C_Master_Init:
  1448                           
  1449                           ; 1 bytes @ 0x11
  1450     0031                     	ds	1
  1451     0032                     descomponer@cent:
  1452     0032                     sprintf@flag:	
  1453                           ; 1 bytes @ 0x12
  1454                           
  1455                           
  1456                           ; 1 bytes @ 0x12
  1457     0032                     	ds	1
  1458     0033                     descomponer@uni:
  1459     0033                     sprintf@ap:	
  1460                           ; 1 bytes @ 0x13
  1461                           
  1462                           
  1463                           ; 1 bytes @ 0x13
  1464     0033                     	ds	1
  1465     0034                     descomponer@dec:
  1466     0034                     ___aldiv@counter:	
  1467                           ; 1 bytes @ 0x14
  1468                           
  1469     0034                     sprintf@val:	
  1470                           ; 1 bytes @ 0x14
  1471                           
  1472                           
  1473                           ; 2 bytes @ 0x14
  1474     0034                     	ds	1
  1475     0035                     ___aldiv@sign:
  1476                           
  1477                           ; 1 bytes @ 0x15
  1478     0035                     	ds	1
  1479     0036                     sprintf@prec:
  1480     0036                     ___aldiv@quotient:	
  1481                           ; 1 bytes @ 0x16
  1482                           
  1483                           
  1484                           ; 4 bytes @ 0x16
  1485     0036                     	ds	1
  1486     0037                     sprintf@sp:
  1487                           
  1488                           ; 1 bytes @ 0x17
  1489     0037                     	ds	1
  1490     0038                     sprintf@c:
  1491                           
  1492                           ; 1 bytes @ 0x18
  1493     0038                     	ds	1
  1494     0039                     ??_valorLCD:
  1495                           
  1496                           ; 1 bytes @ 0x19
  1497     0039                     	ds	1
  1498     003A                     ?_map:
  1499     003A                     map@x:	
  1500                           ; 4 bytes @ 0x1A
  1501                           
  1502                           
  1503                           ; 4 bytes @ 0x1A
  1504     003A                     	ds	4
  1505     003E                     map@eMin:
  1506                           
  1507                           ; 4 bytes @ 0x1E
  1508     003E                     	ds	4
  1509     0042                     map@eMax:
  1510                           
  1511                           ; 4 bytes @ 0x22
  1512     0042                     	ds	4
  1513     0046                     map@sMin:
  1514                           
  1515                           ; 4 bytes @ 0x26
  1516     0046                     	ds	4
  1517     004A                     map@sMax:
  1518                           
  1519                           ; 4 bytes @ 0x2A
  1520     004A                     	ds	4
  1521     004E                     ??_map:
  1522                           
  1523                           ; 1 bytes @ 0x2E
  1524     004E                     	ds	16
  1525                           
  1526                           	psect	maintext
  1527     0028                     __pmaintext:	
  1528 ;;
  1529 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1530 ;;
  1531 ;; *************** function _main *****************
  1532 ;; Defined at:
  1533 ;;		line 128 in file "main.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;		None
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;		None
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      void 
  1540 ;; Registers used:
  1541 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : B00/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1547 ;;      Params:         0       0       0       0       0
  1548 ;;      Locals:         0       0       0       0       0
  1549 ;;      Temps:          0       0       4       0       0
  1550 ;;      Totals:         0       0       4       0       0
  1551 ;;Total ram usage:        4 bytes
  1552 ;; Hardware stack levels required when called: 5
  1553 ;; This function calls:
  1554 ;;		_I2C_Master_Read
  1555 ;;		_I2C_Master_Start
  1556 ;;		_I2C_Master_Stop
  1557 ;;		_I2C_Master_Write
  1558 ;;		_Lcd_Clear
  1559 ;;		_Lcd_Init
  1560 ;;		_Lcd_Set_Cursor
  1561 ;;		_Lcd_Write_String
  1562 ;;		_descomponer
  1563 ;;		_inttochar
  1564 ;;		_leer_ano
  1565 ;;		_leer_dia
  1566 ;;		_leer_hora
  1567 ;;		_leer_mes
  1568 ;;		_leer_min
  1569 ;;		_leer_sec
  1570 ;;		_map
  1571 ;;		_modoboton
  1572 ;;		_setup
  1573 ;;		_setupINTOSC
  1574 ;;		_valorLCD
  1575 ;; This function is called by:
  1576 ;;		Startup code after reset
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580     0028                     _main:	
  1581                           ;psect for function _main
  1582                           
  1583     0028                     l3680:	
  1584                           ;incstack = 0
  1585                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1586                           
  1587                           
  1588                           ;main.c: 129:     setupINTOSC(7);
  1589     0028  3007               	movlw	7
  1590     0029  120A  158A  25FE  120A  118A  	fcall	_setupINTOSC
  1591                           
  1592                           ;main.c: 130:     setup();
  1593     002E  120A  158A  218F  120A  118A  	fcall	_setup
  1594                           
  1595                           ;main.c: 131:     Lcd_Init();
  1596     0033  120A  158A  2791  120A  118A  	fcall	_Lcd_Init
  1597     0038                     l3682:
  1598                           
  1599                           ;main.c: 132:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1600     0038  3041               	movlw	65
  1601     0039  1683               	bsf	3,5	;RP0=1, select bank1
  1602     003A  1303               	bcf	3,6	;RP1=0, select bank1
  1603     003B  00C2               	movwf	??_main^(0+128)
  1604     003C                     u3457:
  1605     003C  0BC2               	decfsz	??_main^(0+128),f
  1606     003D  283C               	goto	u3457
  1607     003E  283F               	nop2
  1608     003F                     l3684:
  1609                           
  1610                           ;main.c: 133:     Lcd_Clear();
  1611     003F  120A  158A  20E2  120A  118A  	fcall	_Lcd_Clear
  1612     0044                     l3686:
  1613                           
  1614                           ;main.c: 134:     Lcd_Set_Cursor(1,1);
  1615     0044  1283               	bcf	3,5	;RP0=0, select bank0
  1616     0045  1303               	bcf	3,6	;RP1=0, select bank0
  1617     0046  01A2               	clrf	Lcd_Set_Cursor@b
  1618     0047  0AA2               	incf	Lcd_Set_Cursor@b,f
  1619     0048  3001               	movlw	1
  1620     0049  120A  118A  273F  120A  118A  	fcall	_Lcd_Set_Cursor
  1621     004E                     l3688:
  1622                           
  1623                           ;main.c: 135:     Lcd_Write_String(" T");
  1624     004E  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1625     004F  1283               	bcf	3,5	;RP0=0, select bank0
  1626     0050  1303               	bcf	3,6	;RP1=0, select bank0
  1627     0051  00A3               	movwf	Lcd_Write_String@a
  1628     0052  3080               	movlw	128
  1629     0053  00A4               	movwf	Lcd_Write_String@a+1
  1630     0054  120A  158A  246D  120A  118A  	fcall	_Lcd_Write_String
  1631     0059                     l3690:
  1632                           
  1633                           ;main.c: 140:         I2C_Master_Start();
  1634     0059  120A  158A  20C6  120A  118A  	fcall	_I2C_Master_Start
  1635     005E                     l3692:
  1636                           
  1637                           ;main.c: 141:         I2C_Master_Write(0x51);
  1638     005E  3051               	movlw	81
  1639     005F  00F4               	movwf	I2C_Master_Write@d
  1640     0060  3000               	movlw	0
  1641     0061  00F5               	movwf	I2C_Master_Write@d+1
  1642     0062  120A  158A  20D8  120A  118A  	fcall	_I2C_Master_Write
  1643     0067                     l3694:
  1644                           
  1645                           ;main.c: 142:         V1 = I2C_Master_Read(0);
  1646     0067  3000               	movlw	0
  1647     0068  00F4               	movwf	I2C_Master_Read@a
  1648     0069  00F5               	movwf	I2C_Master_Read@a+1
  1649     006A  120A  158A  21BB  120A  118A  	fcall	_I2C_Master_Read
  1650     006F  0874               	movf	?_I2C_Master_Read,w
  1651     0070  1283               	bcf	3,5	;RP0=0, select bank0
  1652     0071  1303               	bcf	3,6	;RP1=0, select bank0
  1653     0072  00EE               	movwf	_V1
  1654     0073                     l3696:
  1655                           
  1656                           ;main.c: 143:         I2C_Master_Stop();
  1657     0073  120A  158A  20CF  120A  118A  	fcall	_I2C_Master_Stop
  1658     0078                     l3698:
  1659                           
  1660                           ;main.c: 144:         _delay((unsigned long)((20)*(8000000/4000.0)));
  1661     0078  3034               	movlw	52
  1662     0079  1683               	bsf	3,5	;RP0=1, select bank1
  1663     007A  1303               	bcf	3,6	;RP1=0, select bank1
  1664     007B  00C3               	movwf	(??_main^(0+128)+1)
  1665     007C  30F1               	movlw	241
  1666     007D  00C2               	movwf	??_main^(0+128)
  1667     007E                     u3467:
  1668     007E  0BC2               	decfsz	??_main^(0+128),f
  1669     007F  287E               	goto	u3467
  1670     0080  0BC3               	decfsz	(??_main^(0+128)+1),f
  1671     0081  287E               	goto	u3467
  1672     0082                     l3700:
  1673                           
  1674                           ;main.c: 147:         VOLT1 = map(V1, 0, 255, 10, 30);
  1675     0082  1283               	bcf	3,5	;RP0=0, select bank0
  1676     0083  1303               	bcf	3,6	;RP1=0, select bank0
  1677     0084  086E               	movf	_V1,w
  1678     0085  1683               	bsf	3,5	;RP0=1, select bank1
  1679     0086  1303               	bcf	3,6	;RP1=0, select bank1
  1680     0087  00C2               	movwf	??_main^(0+128)
  1681     0088  01C3               	clrf	(??_main^(0+128)+1)
  1682     0089  01C4               	clrf	(??_main^(0+128)+2)
  1683     008A  01C5               	clrf	(??_main^(0+128)+3)
  1684     008B  0845               	movf	(??_main+3)^(0+128),w
  1685     008C  1283               	bcf	3,5	;RP0=0, select bank0
  1686     008D  1303               	bcf	3,6	;RP1=0, select bank0
  1687     008E  00BD               	movwf	map@x+3
  1688     008F  1683               	bsf	3,5	;RP0=1, select bank1
  1689     0090  1303               	bcf	3,6	;RP1=0, select bank1
  1690     0091  0844               	movf	(??_main+2)^(0+128),w
  1691     0092  1283               	bcf	3,5	;RP0=0, select bank0
  1692     0093  1303               	bcf	3,6	;RP1=0, select bank0
  1693     0094  00BC               	movwf	map@x+2
  1694     0095  1683               	bsf	3,5	;RP0=1, select bank1
  1695     0096  1303               	bcf	3,6	;RP1=0, select bank1
  1696     0097  0843               	movf	(??_main+1)^(0+128),w
  1697     0098  1283               	bcf	3,5	;RP0=0, select bank0
  1698     0099  1303               	bcf	3,6	;RP1=0, select bank0
  1699     009A  00BB               	movwf	map@x+1
  1700     009B  1683               	bsf	3,5	;RP0=1, select bank1
  1701     009C  1303               	bcf	3,6	;RP1=0, select bank1
  1702     009D  0842               	movf	??_main^(0+128),w
  1703     009E  1283               	bcf	3,5	;RP0=0, select bank0
  1704     009F  1303               	bcf	3,6	;RP1=0, select bank0
  1705     00A0  00BA               	movwf	map@x
  1706     00A1  3000               	movlw	0
  1707     00A2  00C1               	movwf	map@eMin+3
  1708     00A3  3000               	movlw	0
  1709     00A4  00C0               	movwf	map@eMin+2
  1710     00A5  3000               	movlw	0
  1711     00A6  00BF               	movwf	map@eMin+1
  1712     00A7  3000               	movlw	0
  1713     00A8  00BE               	movwf	map@eMin
  1714     00A9  3000               	movlw	0
  1715     00AA  00C5               	movwf	map@eMax+3
  1716     00AB  3000               	movlw	0
  1717     00AC  00C4               	movwf	map@eMax+2
  1718     00AD  3000               	movlw	0
  1719     00AE  00C3               	movwf	map@eMax+1
  1720     00AF  30FF               	movlw	255
  1721     00B0  00C2               	movwf	map@eMax
  1722     00B1  3000               	movlw	0
  1723     00B2  00C9               	movwf	map@sMin+3
  1724     00B3  3000               	movlw	0
  1725     00B4  00C8               	movwf	map@sMin+2
  1726     00B5  3000               	movlw	0
  1727     00B6  00C7               	movwf	map@sMin+1
  1728     00B7  300A               	movlw	10
  1729     00B8  00C6               	movwf	map@sMin
  1730     00B9  3000               	movlw	0
  1731     00BA  00CD               	movwf	map@sMax+3
  1732     00BB  3000               	movlw	0
  1733     00BC  00CC               	movwf	map@sMax+2
  1734     00BD  3000               	movlw	0
  1735     00BE  00CB               	movwf	map@sMax+1
  1736     00BF  301E               	movlw	30
  1737     00C0  00CA               	movwf	map@sMax
  1738     00C1  120A  118A  25FA  120A  118A  	fcall	_map
  1739     00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1740     00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1741     00C8  083B               	movf	?_map+1,w
  1742     00C9  1683               	bsf	3,5	;RP0=1, select bank1
  1743     00CA  1303               	bcf	3,6	;RP1=0, select bank1
  1744     00CB  00A5               	movwf	(_VOLT1+1)^(0+128)
  1745     00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1746     00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1747     00CE  083A               	movf	?_map,w
  1748     00CF  1683               	bsf	3,5	;RP0=1, select bank1
  1749     00D0  1303               	bcf	3,6	;RP1=0, select bank1
  1750     00D1  00A4               	movwf	_VOLT1^(0+128)
  1751                           
  1752                           ;main.c: 148:         valorLCD();
  1753     00D2  120A  118A  2297  120A  118A  	fcall	_valorLCD
  1754     00D7                     l3702:
  1755                           
  1756                           ;main.c: 151:         segundos = leer_sec();
  1757     00D7  120A  158A  2296  120A  118A  	fcall	_leer_sec
  1758     00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1759     00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1760     00DE  00ED               	movwf	_segundos
  1761     00DF                     l3704:
  1762                           
  1763                           ;main.c: 152:         useg = inttochar(descomponer(0, segundos));
  1764     00DF  3000               	movlw	0
  1765     00E0  00AC               	movwf	descomponer@pos
  1766     00E1  00AD               	movwf	descomponer@pos+1
  1767     00E2  086D               	movf	_segundos,w
  1768     00E3  1683               	bsf	3,5	;RP0=1, select bank1
  1769     00E4  1303               	bcf	3,6	;RP1=0, select bank1
  1770     00E5  00C2               	movwf	??_main^(0+128)
  1771     00E6  01C3               	clrf	(??_main^(0+128)+1)
  1772     00E7  0842               	movf	??_main^(0+128),w
  1773     00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1774     00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1775     00EA  00AE               	movwf	descomponer@num
  1776     00EB  1683               	bsf	3,5	;RP0=1, select bank1
  1777     00EC  1303               	bcf	3,6	;RP1=0, select bank1
  1778     00ED  0843               	movf	(??_main+1)^(0+128),w
  1779     00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1780     00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1781     00F0  00AF               	movwf	descomponer@num+1
  1782     00F1  120A  158A  265D  120A  118A  	fcall	_descomponer
  1783     00F6  120A  158A  24FB  120A  118A  	fcall	_inttochar
  1784     00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1785     00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1786     00FD  00E7               	movwf	_useg
  1787     00FE                     l3706:
  1788                           
  1789                           ;main.c: 153:         dseg = inttochar(descomponer(1, segundos));
  1790     00FE  3001               	movlw	1
  1791     00FF  00AC               	movwf	descomponer@pos
  1792     0100  3000               	movlw	0
  1793     0101  00AD               	movwf	descomponer@pos+1
  1794     0102  086D               	movf	_segundos,w
  1795     0103  1683               	bsf	3,5	;RP0=1, select bank1
  1796     0104  1303               	bcf	3,6	;RP1=0, select bank1
  1797     0105  00C2               	movwf	??_main^(0+128)
  1798     0106  01C3               	clrf	(??_main^(0+128)+1)
  1799     0107  0842               	movf	??_main^(0+128),w
  1800     0108  1283               	bcf	3,5	;RP0=0, select bank0
  1801     0109  1303               	bcf	3,6	;RP1=0, select bank0
  1802     010A  00AE               	movwf	descomponer@num
  1803     010B  1683               	bsf	3,5	;RP0=1, select bank1
  1804     010C  1303               	bcf	3,6	;RP1=0, select bank1
  1805     010D  0843               	movf	(??_main+1)^(0+128),w
  1806     010E  1283               	bcf	3,5	;RP0=0, select bank0
  1807     010F  1303               	bcf	3,6	;RP1=0, select bank0
  1808     0110  00AF               	movwf	descomponer@num+1
  1809     0111  120A  158A  265D  120A  118A  	fcall	_descomponer
  1810     0116  120A  158A  24FB  120A  118A  	fcall	_inttochar
  1811     011B  1283               	bcf	3,5	;RP0=0, select bank0
  1812     011C  1303               	bcf	3,6	;RP1=0, select bank0
  1813     011D  00E6               	movwf	_dseg
  1814     011E                     l3708:
  1815                           
  1816                           ;main.c: 155:         minutos = leer_min();
  1817     011E  120A  158A  23E4  120A  118A  	fcall	_leer_min
  1818     0123  1283               	bcf	3,5	;RP0=0, select bank0
  1819     0124  1303               	bcf	3,6	;RP1=0, select bank0
  1820     0125  00EC               	movwf	_minutos
  1821     0126                     l3710:
  1822                           
  1823                           ;main.c: 156:         umin = inttochar(descomponer(0, minutos));
  1824     0126  3000               	movlw	0
  1825     0127  00AC               	movwf	descomponer@pos
  1826     0128  00AD               	movwf	descomponer@pos+1
  1827     0129  086C               	movf	_minutos,w
  1828     012A  1683               	bsf	3,5	;RP0=1, select bank1
  1829     012B  1303               	bcf	3,6	;RP1=0, select bank1
  1830     012C  00C2               	movwf	??_main^(0+128)
  1831     012D  01C3               	clrf	(??_main^(0+128)+1)
  1832     012E  0842               	movf	??_main^(0+128),w
  1833     012F  1283               	bcf	3,5	;RP0=0, select bank0
  1834     0130  1303               	bcf	3,6	;RP1=0, select bank0
  1835     0131  00AE               	movwf	descomponer@num
  1836     0132  1683               	bsf	3,5	;RP0=1, select bank1
  1837     0133  1303               	bcf	3,6	;RP1=0, select bank1
  1838     0134  0843               	movf	(??_main+1)^(0+128),w
  1839     0135  1283               	bcf	3,5	;RP0=0, select bank0
  1840     0136  1303               	bcf	3,6	;RP1=0, select bank0
  1841     0137  00AF               	movwf	descomponer@num+1
  1842     0138  120A  158A  265D  120A  118A  	fcall	_descomponer
  1843     013D  120A  158A  24FB  120A  118A  	fcall	_inttochar
  1844     0142  1283               	bcf	3,5	;RP0=0, select bank0
  1845     0143  1303               	bcf	3,6	;RP1=0, select bank0
  1846     0144  00E5               	movwf	_umin
  1847     0145                     l3712:
  1848                           
  1849                           ;main.c: 157:         dmin = inttochar(descomponer(1, minutos));
  1850     0145  3001               	movlw	1
  1851     0146  00AC               	movwf	descomponer@pos
  1852     0147  3000               	movlw	0
  1853     0148  00AD               	movwf	descomponer@pos+1
  1854     0149  086C               	movf	_minutos,w
  1855     014A  1683               	bsf	3,5	;RP0=1, select bank1
  1856     014B  1303               	bcf	3,6	;RP1=0, select bank1
  1857     014C  00C2               	movwf	??_main^(0+128)
  1858     014D  01C3               	clrf	(??_main^(0+128)+1)
  1859     014E  0842               	movf	??_main^(0+128),w
  1860     014F  1283               	bcf	3,5	;RP0=0, select bank0
  1861     0150  1303               	bcf	3,6	;RP1=0, select bank0
  1862     0151  00AE               	movwf	descomponer@num
  1863     0152  1683               	bsf	3,5	;RP0=1, select bank1
  1864     0153  1303               	bcf	3,6	;RP1=0, select bank1
  1865     0154  0843               	movf	(??_main+1)^(0+128),w
  1866     0155  1283               	bcf	3,5	;RP0=0, select bank0
  1867     0156  1303               	bcf	3,6	;RP1=0, select bank0
  1868     0157  00AF               	movwf	descomponer@num+1
  1869     0158  120A  158A  265D  120A  118A  	fcall	_descomponer
  1870     015D  120A  158A  24FB  120A  118A  	fcall	_inttochar
  1871     0162  1283               	bcf	3,5	;RP0=0, select bank0
  1872     0163  1303               	bcf	3,6	;RP1=0, select bank0
  1873     0164  00E4               	movwf	_dmin
  1874     0165                     l3714:
  1875                           
  1876                           ;main.c: 159:         horas = leer_hora();
  1877     0165  120A  158A  235E  120A  118A  	fcall	_leer_hora
  1878     016A  1283               	bcf	3,5	;RP0=0, select bank0
  1879     016B  1303               	bcf	3,6	;RP1=0, select bank0
  1880     016C  00EB               	movwf	_horas
  1881     016D                     l3716:
  1882                           
  1883                           ;main.c: 160:         uhora = inttochar(descomponer(0, horas));
  1884     016D  3000               	movlw	0
  1885     016E  00AC               	movwf	descomponer@pos
  1886     016F  00AD               	movwf	descomponer@pos+1
  1887     0170  086B               	movf	_horas,w
  1888     0171  1683               	bsf	3,5	;RP0=1, select bank1
  1889     0172  1303               	bcf	3,6	;RP1=0, select bank1
  1890     0173  00C2               	movwf	??_main^(0+128)
  1891     0174  01C3               	clrf	(??_main^(0+128)+1)
  1892     0175  0842               	movf	??_main^(0+128),w
  1893     0176  1283               	bcf	3,5	;RP0=0, select bank0
  1894     0177  1303               	bcf	3,6	;RP1=0, select bank0
  1895     0178  00AE               	movwf	descomponer@num
  1896     0179  1683               	bsf	3,5	;RP0=1, select bank1
  1897     017A  1303               	bcf	3,6	;RP1=0, select bank1
  1898     017B  0843               	movf	(??_main+1)^(0+128),w
  1899     017C  1283               	bcf	3,5	;RP0=0, select bank0
  1900     017D  1303               	bcf	3,6	;RP1=0, select bank0
  1901     017E  00AF               	movwf	descomponer@num+1
  1902     017F  120A  158A  265D  120A  118A  	fcall	_descomponer
  1903     0184  120A  158A  24FB  120A  118A  	fcall	_inttochar
  1904     0189  00F8               	movwf	_uhora
  1905     018A                     l3718:
  1906                           
  1907                           ;main.c: 161:         dhora = inttochar(descomponer(1, horas));
  1908     018A  3001               	movlw	1
  1909     018B  1283               	bcf	3,5	;RP0=0, select bank0
  1910     018C  1303               	bcf	3,6	;RP1=0, select bank0
  1911     018D  00AC               	movwf	descomponer@pos
  1912     018E  3000               	movlw	0
  1913     018F  00AD               	movwf	descomponer@pos+1
  1914     0190  086B               	movf	_horas,w
  1915     0191  1683               	bsf	3,5	;RP0=1, select bank1
  1916     0192  1303               	bcf	3,6	;RP1=0, select bank1
  1917     0193  00C2               	movwf	??_main^(0+128)
  1918     0194  01C3               	clrf	(??_main^(0+128)+1)
  1919     0195  0842               	movf	??_main^(0+128),w
  1920     0196  1283               	bcf	3,5	;RP0=0, select bank0
  1921     0197  1303               	bcf	3,6	;RP1=0, select bank0
  1922     0198  00AE               	movwf	descomponer@num
  1923     0199  1683               	bsf	3,5	;RP0=1, select bank1
  1924     019A  1303               	bcf	3,6	;RP1=0, select bank1
  1925     019B  0843               	movf	(??_main+1)^(0+128),w
  1926     019C  1283               	bcf	3,5	;RP0=0, select bank0
  1927     019D  1303               	bcf	3,6	;RP1=0, select bank0
  1928     019E  00AF               	movwf	descomponer@num+1
  1929     019F  120A  158A  265D  120A  118A  	fcall	_descomponer
  1930     01A4  120A  158A  24FB  120A  118A  	fcall	_inttochar
  1931     01A9  00F7               	movwf	_dhora
  1932     01AA                     l3720:
  1933                           
  1934                           ;main.c: 163:         dias = leer_dia();
  1935     01AA  120A  158A  231B  120A  118A  	fcall	_leer_dia
  1936     01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1937     01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1938     01B1  00EA               	movwf	_dias
  1939     01B2                     l3722:
  1940                           
  1941                           ;main.c: 164:         udia = inttochar(descomponer(0, dias));
  1942     01B2  3000               	movlw	0
  1943     01B3  00AC               	movwf	descomponer@pos
  1944     01B4  00AD               	movwf	descomponer@pos+1
  1945     01B5  086A               	movf	_dias,w
  1946     01B6  1683               	bsf	3,5	;RP0=1, select bank1
  1947     01B7  1303               	bcf	3,6	;RP1=0, select bank1
  1948     01B8  00C2               	movwf	??_main^(0+128)
  1949     01B9  01C3               	clrf	(??_main^(0+128)+1)
  1950     01BA  0842               	movf	??_main^(0+128),w
  1951     01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1952     01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1953     01BD  00AE               	movwf	descomponer@num
  1954     01BE  1683               	bsf	3,5	;RP0=1, select bank1
  1955     01BF  1303               	bcf	3,6	;RP1=0, select bank1
  1956     01C0  0843               	movf	(??_main+1)^(0+128),w
  1957     01C1  1283               	bcf	3,5	;RP0=0, select bank0
  1958     01C2  1303               	bcf	3,6	;RP1=0, select bank0
  1959     01C3  00AF               	movwf	descomponer@num+1
  1960     01C4  120A  158A  265D  120A  118A  	fcall	_descomponer
  1961     01C9  120A  158A  24FB  120A  118A  	fcall	_inttochar
  1962     01CE  00F6               	movwf	_udia
  1963     01CF                     l3724:
  1964                           
  1965                           ;main.c: 165:         ddia = inttochar(descomponer(1, dias));
  1966     01CF  3001               	movlw	1
  1967     01D0  1283               	bcf	3,5	;RP0=0, select bank0
  1968     01D1  1303               	bcf	3,6	;RP1=0, select bank0
  1969     01D2  00AC               	movwf	descomponer@pos
  1970     01D3  3000               	movlw	0
  1971     01D4  00AD               	movwf	descomponer@pos+1
  1972     01D5  086A               	movf	_dias,w
  1973     01D6  1683               	bsf	3,5	;RP0=1, select bank1
  1974     01D7  1303               	bcf	3,6	;RP1=0, select bank1
  1975     01D8  00C2               	movwf	??_main^(0+128)
  1976     01D9  01C3               	clrf	(??_main^(0+128)+1)
  1977     01DA  0842               	movf	??_main^(0+128),w
  1978     01DB  1283               	bcf	3,5	;RP0=0, select bank0
  1979     01DC  1303               	bcf	3,6	;RP1=0, select bank0
  1980     01DD  00AE               	movwf	descomponer@num
  1981     01DE  1683               	bsf	3,5	;RP0=1, select bank1
  1982     01DF  1303               	bcf	3,6	;RP1=0, select bank1
  1983     01E0  0843               	movf	(??_main+1)^(0+128),w
  1984     01E1  1283               	bcf	3,5	;RP0=0, select bank0
  1985     01E2  1303               	bcf	3,6	;RP1=0, select bank0
  1986     01E3  00AF               	movwf	descomponer@num+1
  1987     01E4  120A  158A  265D  120A  118A  	fcall	_descomponer
  1988     01E9  120A  158A  24FB  120A  118A  	fcall	_inttochar
  1989     01EE  1683               	bsf	3,5	;RP0=1, select bank1
  1990     01EF  1303               	bcf	3,6	;RP1=0, select bank1
  1991     01F0  00AC               	movwf	_ddia^(0+128)
  1992     01F1                     l3726:
  1993                           
  1994                           ;main.c: 167:         meses = leer_mes();
  1995     01F1  120A  158A  23A1  120A  118A  	fcall	_leer_mes
  1996     01F6  1283               	bcf	3,5	;RP0=0, select bank0
  1997     01F7  1303               	bcf	3,6	;RP1=0, select bank0
  1998     01F8  00E9               	movwf	_meses
  1999     01F9                     l3728:
  2000                           
  2001                           ;main.c: 168:         umes = inttochar(descomponer(0, meses));
  2002     01F9  3000               	movlw	0
  2003     01FA  00AC               	movwf	descomponer@pos
  2004     01FB  00AD               	movwf	descomponer@pos+1
  2005     01FC  0869               	movf	_meses,w
  2006     01FD  1683               	bsf	3,5	;RP0=1, select bank1
  2007     01FE  1303               	bcf	3,6	;RP1=0, select bank1
  2008     01FF  00C2               	movwf	??_main^(0+128)
  2009     0200  01C3               	clrf	(??_main^(0+128)+1)
  2010     0201  0842               	movf	??_main^(0+128),w
  2011     0202  1283               	bcf	3,5	;RP0=0, select bank0
  2012     0203  1303               	bcf	3,6	;RP1=0, select bank0
  2013     0204  00AE               	movwf	descomponer@num
  2014     0205  1683               	bsf	3,5	;RP0=1, select bank1
  2015     0206  1303               	bcf	3,6	;RP1=0, select bank1
  2016     0207  0843               	movf	(??_main+1)^(0+128),w
  2017     0208  1283               	bcf	3,5	;RP0=0, select bank0
  2018     0209  1303               	bcf	3,6	;RP1=0, select bank0
  2019     020A  00AF               	movwf	descomponer@num+1
  2020     020B  120A  158A  265D  120A  118A  	fcall	_descomponer
  2021     0210  120A  158A  24FB  120A  118A  	fcall	_inttochar
  2022     0215  1683               	bsf	3,5	;RP0=1, select bank1
  2023     0216  1303               	bcf	3,6	;RP1=0, select bank1
  2024     0217  00AB               	movwf	_umes^(0+128)
  2025     0218                     l3730:
  2026                           
  2027                           ;main.c: 169:         dmes = inttochar(descomponer(1, meses));
  2028     0218  3001               	movlw	1
  2029     0219  1283               	bcf	3,5	;RP0=0, select bank0
  2030     021A  1303               	bcf	3,6	;RP1=0, select bank0
  2031     021B  00AC               	movwf	descomponer@pos
  2032     021C  3000               	movlw	0
  2033     021D  00AD               	movwf	descomponer@pos+1
  2034     021E  0869               	movf	_meses,w
  2035     021F  1683               	bsf	3,5	;RP0=1, select bank1
  2036     0220  1303               	bcf	3,6	;RP1=0, select bank1
  2037     0221  00C2               	movwf	??_main^(0+128)
  2038     0222  01C3               	clrf	(??_main^(0+128)+1)
  2039     0223  0842               	movf	??_main^(0+128),w
  2040     0224  1283               	bcf	3,5	;RP0=0, select bank0
  2041     0225  1303               	bcf	3,6	;RP1=0, select bank0
  2042     0226  00AE               	movwf	descomponer@num
  2043     0227  1683               	bsf	3,5	;RP0=1, select bank1
  2044     0228  1303               	bcf	3,6	;RP1=0, select bank1
  2045     0229  0843               	movf	(??_main+1)^(0+128),w
  2046     022A  1283               	bcf	3,5	;RP0=0, select bank0
  2047     022B  1303               	bcf	3,6	;RP1=0, select bank0
  2048     022C  00AF               	movwf	descomponer@num+1
  2049     022D  120A  158A  265D  120A  118A  	fcall	_descomponer
  2050     0232  120A  158A  24FB  120A  118A  	fcall	_inttochar
  2051     0237  1683               	bsf	3,5	;RP0=1, select bank1
  2052     0238  1303               	bcf	3,6	;RP1=0, select bank1
  2053     0239  00AA               	movwf	_dmes^(0+128)
  2054     023A                     l3732:
  2055                           
  2056                           ;main.c: 171:         anos = leer_ano();
  2057     023A  120A  158A  22D8  120A  118A  	fcall	_leer_ano
  2058     023F  1283               	bcf	3,5	;RP0=0, select bank0
  2059     0240  1303               	bcf	3,6	;RP1=0, select bank0
  2060     0241  00E8               	movwf	_anos
  2061     0242                     l3734:
  2062                           
  2063                           ;main.c: 172:         uano = inttochar(descomponer(0, anos));
  2064     0242  3000               	movlw	0
  2065     0243  00AC               	movwf	descomponer@pos
  2066     0244  00AD               	movwf	descomponer@pos+1
  2067     0245  0868               	movf	_anos,w
  2068     0246  1683               	bsf	3,5	;RP0=1, select bank1
  2069     0247  1303               	bcf	3,6	;RP1=0, select bank1
  2070     0248  00C2               	movwf	??_main^(0+128)
  2071     0249  01C3               	clrf	(??_main^(0+128)+1)
  2072     024A  0842               	movf	??_main^(0+128),w
  2073     024B  1283               	bcf	3,5	;RP0=0, select bank0
  2074     024C  1303               	bcf	3,6	;RP1=0, select bank0
  2075     024D  00AE               	movwf	descomponer@num
  2076     024E  1683               	bsf	3,5	;RP0=1, select bank1
  2077     024F  1303               	bcf	3,6	;RP1=0, select bank1
  2078     0250  0843               	movf	(??_main+1)^(0+128),w
  2079     0251  1283               	bcf	3,5	;RP0=0, select bank0
  2080     0252  1303               	bcf	3,6	;RP1=0, select bank0
  2081     0253  00AF               	movwf	descomponer@num+1
  2082     0254  120A  158A  265D  120A  118A  	fcall	_descomponer
  2083     0259  120A  158A  24FB  120A  118A  	fcall	_inttochar
  2084     025E  1683               	bsf	3,5	;RP0=1, select bank1
  2085     025F  1303               	bcf	3,6	;RP1=0, select bank1
  2086     0260  00A9               	movwf	_uano^(0+128)
  2087     0261                     l3736:
  2088                           
  2089                           ;main.c: 173:         dano = inttochar(descomponer(1, anos));
  2090     0261  3001               	movlw	1
  2091     0262  1283               	bcf	3,5	;RP0=0, select bank0
  2092     0263  1303               	bcf	3,6	;RP1=0, select bank0
  2093     0264  00AC               	movwf	descomponer@pos
  2094     0265  3000               	movlw	0
  2095     0266  00AD               	movwf	descomponer@pos+1
  2096     0267  0868               	movf	_anos,w
  2097     0268  1683               	bsf	3,5	;RP0=1, select bank1
  2098     0269  1303               	bcf	3,6	;RP1=0, select bank1
  2099     026A  00C2               	movwf	??_main^(0+128)
  2100     026B  01C3               	clrf	(??_main^(0+128)+1)
  2101     026C  0842               	movf	??_main^(0+128),w
  2102     026D  1283               	bcf	3,5	;RP0=0, select bank0
  2103     026E  1303               	bcf	3,6	;RP1=0, select bank0
  2104     026F  00AE               	movwf	descomponer@num
  2105     0270  1683               	bsf	3,5	;RP0=1, select bank1
  2106     0271  1303               	bcf	3,6	;RP1=0, select bank1
  2107     0272  0843               	movf	(??_main+1)^(0+128),w
  2108     0273  1283               	bcf	3,5	;RP0=0, select bank0
  2109     0274  1303               	bcf	3,6	;RP1=0, select bank0
  2110     0275  00AF               	movwf	descomponer@num+1
  2111     0276  120A  158A  265D  120A  118A  	fcall	_descomponer
  2112     027B  120A  158A  24FB  120A  118A  	fcall	_inttochar
  2113     0280  1683               	bsf	3,5	;RP0=1, select bank1
  2114     0281  1303               	bcf	3,6	;RP1=0, select bank1
  2115     0282  00A8               	movwf	_dano^(0+128)
  2116     0283                     l3738:
  2117                           
  2118                           ;main.c: 176:         modoboton();
  2119     0283  120A  118A  2424  120A  118A  	fcall	_modoboton
  2120     0288                     l3740:
  2121                           
  2122                           ;main.c: 178:         _delay((unsigned long)((2)*(8000000/4000.0)));
  2123     0288  3006               	movlw	6
  2124     0289  1683               	bsf	3,5	;RP0=1, select bank1
  2125     028A  1303               	bcf	3,6	;RP1=0, select bank1
  2126     028B  00C3               	movwf	(??_main^(0+128)+1)
  2127     028C  302F               	movlw	47
  2128     028D  00C2               	movwf	??_main^(0+128)
  2129     028E                     u3477:
  2130     028E  0BC2               	decfsz	??_main^(0+128),f
  2131     028F  2A8E               	goto	u3477
  2132     0290  0BC3               	decfsz	(??_main^(0+128)+1),f
  2133     0291  2A8E               	goto	u3477
  2134     0292  2A93               	nop2
  2135     0293  2859               	goto	l3690
  2136     0294  120A  118A  280C   	ljmp	start
  2137     0297                     __end_of_main:
  2138                           
  2139                           	psect	text1
  2140     0297                     __ptext1:	
  2141 ;; *************** function _valorLCD *****************
  2142 ;; Defined at:
  2143 ;;		line 215 in file "main.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;		None
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;		None
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  1    wreg      void 
  2150 ;; Registers used:
  2151 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2157 ;;      Params:         0       0       0       0       0
  2158 ;;      Locals:         0       0       0       0       0
  2159 ;;      Temps:          0       2       0       0       0
  2160 ;;      Totals:         0       2       0       0       0
  2161 ;;Total ram usage:        2 bytes
  2162 ;; Hardware stack levels used: 1
  2163 ;; Hardware stack levels required when called: 4
  2164 ;; This function calls:
  2165 ;;		_Lcd_Set_Cursor
  2166 ;;		_Lcd_Write_Char
  2167 ;;		_Lcd_Write_String
  2168 ;;		_sprintf
  2169 ;; This function is called by:
  2170 ;;		_main
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174     0297                     _valorLCD:	
  2175                           ;psect for function _valorLCD
  2176                           
  2177     0297                     l3464:	
  2178                           ;incstack = 0
  2179                           ; Regs used in _valorLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2180                           
  2181                           
  2182                           ;main.c: 217:     Lcd_Set_Cursor(2,1);
  2183     0297  1283               	bcf	3,5	;RP0=0, select bank0
  2184     0298  1303               	bcf	3,6	;RP1=0, select bank0
  2185     0299  01A2               	clrf	Lcd_Set_Cursor@b
  2186     029A  0AA2               	incf	Lcd_Set_Cursor@b,f
  2187     029B  3002               	movlw	2
  2188     029C  120A  118A  273F  120A  118A  	fcall	_Lcd_Set_Cursor
  2189     02A1                     l3466:
  2190                           
  2191                           ;main.c: 218:     sprintf(buffer, "%u", VOLT1);
  2192     02A1  300E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2193     02A2  1283               	bcf	3,5	;RP0=0, select bank0
  2194     02A3  1303               	bcf	3,6	;RP1=0, select bank0
  2195     02A4  00AC               	movwf	sprintf@f
  2196     02A5  1683               	bsf	3,5	;RP0=1, select bank1
  2197     02A6  1303               	bcf	3,6	;RP1=0, select bank1
  2198     02A7  0825               	movf	(_VOLT1+1)^(0+128),w
  2199     02A8  1283               	bcf	3,5	;RP0=0, select bank0
  2200     02A9  1303               	bcf	3,6	;RP1=0, select bank0
  2201     02AA  00AE               	movwf	?_sprintf+2
  2202     02AB  1683               	bsf	3,5	;RP0=1, select bank1
  2203     02AC  1303               	bcf	3,6	;RP1=0, select bank1
  2204     02AD  0824               	movf	_VOLT1^(0+128),w
  2205     02AE  1283               	bcf	3,5	;RP0=0, select bank0
  2206     02AF  1303               	bcf	3,6	;RP1=0, select bank0
  2207     02B0  00AD               	movwf	?_sprintf+1
  2208     02B1  30AE               	movlw	(low (_buffer| 0))& (0+255)
  2209     02B2  120A  118A  2537  120A  118A  	fcall	_sprintf
  2210     02B7                     l3468:
  2211                           
  2212                           ;main.c: 219:     Lcd_Write_String(buffer);
  2213     02B7  30AE               	movlw	(low (_buffer| 0))& (0+255)
  2214     02B8  1283               	bcf	3,5	;RP0=0, select bank0
  2215     02B9  1303               	bcf	3,6	;RP1=0, select bank0
  2216     02BA  00A3               	movwf	Lcd_Write_String@a
  2217     02BB  3000               	movlw	0
  2218     02BC  00A4               	movwf	Lcd_Write_String@a+1
  2219     02BD  120A  158A  246D  120A  118A  	fcall	_Lcd_Write_String
  2220                           
  2221                           ;main.c: 220:     Lcd_Set_Cursor(2,3);
  2222     02C2  3003               	movlw	3
  2223     02C3  1283               	bcf	3,5	;RP0=0, select bank0
  2224     02C4  1303               	bcf	3,6	;RP1=0, select bank0
  2225     02C5  00A2               	movwf	Lcd_Set_Cursor@b
  2226     02C6  3002               	movlw	2
  2227     02C7  120A  118A  273F  120A  118A  	fcall	_Lcd_Set_Cursor
  2228     02CC                     l3470:
  2229                           
  2230                           ;main.c: 221:     Lcd_Write_String("C");
  2231     02CC  3015               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2232     02CD  1283               	bcf	3,5	;RP0=0, select bank0
  2233     02CE  1303               	bcf	3,6	;RP1=0, select bank0
  2234     02CF  00A3               	movwf	Lcd_Write_String@a
  2235     02D0  3080               	movlw	128
  2236     02D1  00A4               	movwf	Lcd_Write_String@a+1
  2237     02D2  120A  158A  246D  120A  118A  	fcall	_Lcd_Write_String
  2238     02D7                     l3472:
  2239                           
  2240                           ;main.c: 224:     Lcd_Set_Cursor(1,15);
  2241     02D7  300F               	movlw	15
  2242     02D8  1283               	bcf	3,5	;RP0=0, select bank0
  2243     02D9  1303               	bcf	3,6	;RP1=0, select bank0
  2244     02DA  00A2               	movwf	Lcd_Set_Cursor@b
  2245     02DB  3001               	movlw	1
  2246     02DC  120A  118A  273F  120A  118A  	fcall	_Lcd_Set_Cursor
  2247     02E1                     l3474:
  2248                           
  2249                           ;main.c: 225:     Lcd_Write_Char(useg);
  2250     02E1  1283               	bcf	3,5	;RP0=0, select bank0
  2251     02E2  1303               	bcf	3,6	;RP1=0, select bank0
  2252     02E3  0867               	movf	_useg,w
  2253     02E4  120A  158A  21EB  120A  118A  	fcall	_Lcd_Write_Char
  2254     02E9                     l3476:
  2255                           
  2256                           ;main.c: 226:     Lcd_Set_Cursor(1,14);
  2257     02E9  300E               	movlw	14
  2258     02EA  1283               	bcf	3,5	;RP0=0, select bank0
  2259     02EB  1303               	bcf	3,6	;RP1=0, select bank0
  2260     02EC  00A2               	movwf	Lcd_Set_Cursor@b
  2261     02ED  3001               	movlw	1
  2262     02EE  120A  118A  273F  120A  118A  	fcall	_Lcd_Set_Cursor
  2263     02F3                     l3478:
  2264                           
  2265                           ;main.c: 227:     Lcd_Write_Char(dseg);
  2266     02F3  1283               	bcf	3,5	;RP0=0, select bank0
  2267     02F4  1303               	bcf	3,6	;RP1=0, select bank0
  2268     02F5  0866               	movf	_dseg,w
  2269     02F6  120A  158A  21EB  120A  118A  	fcall	_Lcd_Write_Char
  2270     02FB                     l3480:
  2271                           
  2272                           ;main.c: 228:     Lcd_Set_Cursor(1,13);
  2273     02FB  300D               	movlw	13
  2274     02FC  1283               	bcf	3,5	;RP0=0, select bank0
  2275     02FD  1303               	bcf	3,6	;RP1=0, select bank0
  2276     02FE  00A2               	movwf	Lcd_Set_Cursor@b
  2277     02FF  3001               	movlw	1
  2278     0300  120A  118A  273F  120A  118A  	fcall	_Lcd_Set_Cursor
  2279                           
  2280                           ;main.c: 229:     Lcd_Write_String(":");
  2281     0305  3013               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2282     0306  1283               	bcf	3,5	;RP0=0, select bank0
  2283     0307  1303               	bcf	3,6	;RP1=0, select bank0
  2284     0308  00A3               	movwf	Lcd_Write_String@a
  2285     0309  3080               	movlw	128
  2286     030A  00A4               	movwf	Lcd_Write_String@a+1
  2287     030B  120A  158A  246D  120A  118A  	fcall	_Lcd_Write_String
  2288     0310                     l3482:
  2289                           
  2290                           ;main.c: 231:     Lcd_Set_Cursor(1,12);
  2291     0310  300C               	movlw	12
  2292     0311  1283               	bcf	3,5	;RP0=0, select bank0
  2293     0312  1303               	bcf	3,6	;RP1=0, select bank0
  2294     0313  00A2               	movwf	Lcd_Set_Cursor@b
  2295     0314  3001               	movlw	1
  2296     0315  120A  118A  273F  120A  118A  	fcall	_Lcd_Set_Cursor
  2297     031A                     l3484:
  2298                           
  2299                           ;main.c: 232:     Lcd_Write_Char(umin);
  2300     031A  1283               	bcf	3,5	;RP0=0, select bank0
  2301     031B  1303               	bcf	3,6	;RP1=0, select bank0
  2302     031C  0865               	movf	_umin,w
  2303     031D  120A  158A  21EB  120A  118A  	fcall	_Lcd_Write_Char
  2304     0322                     l3486:
  2305                           
  2306                           ;main.c: 233:     Lcd_Set_Cursor(1,11);
  2307     0322  300B               	movlw	11
  2308     0323  1283               	bcf	3,5	;RP0=0, select bank0
  2309     0324  1303               	bcf	3,6	;RP1=0, select bank0
  2310     0325  00A2               	movwf	Lcd_Set_Cursor@b
  2311     0326  3001               	movlw	1
  2312     0327  120A  118A  273F  120A  118A  	fcall	_Lcd_Set_Cursor
  2313     032C                     l3488:
  2314                           
  2315                           ;main.c: 234:     Lcd_Write_Char(dmin);
  2316     032C  1283               	bcf	3,5	;RP0=0, select bank0
  2317     032D  1303               	bcf	3,6	;RP1=0, select bank0
  2318     032E  0864               	movf	_dmin,w
  2319     032F  120A  158A  21EB  120A  118A  	fcall	_Lcd_Write_Char
  2320     0334                     l3490:
  2321                           
  2322                           ;main.c: 235:     Lcd_Set_Cursor(1,10);
  2323     0334  300A               	movlw	10
  2324     0335  1283               	bcf	3,5	;RP0=0, select bank0
  2325     0336  1303               	bcf	3,6	;RP1=0, select bank0
  2326     0337  00A2               	movwf	Lcd_Set_Cursor@b
  2327     0338  3001               	movlw	1
  2328     0339  120A  118A  273F  120A  118A  	fcall	_Lcd_Set_Cursor
  2329     033E                     l3492:
  2330                           
  2331                           ;main.c: 236:     Lcd_Write_String(":");
  2332     033E  3013               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2333     033F  1283               	bcf	3,5	;RP0=0, select bank0
  2334     0340  1303               	bcf	3,6	;RP1=0, select bank0
  2335     0341  00A3               	movwf	Lcd_Write_String@a
  2336     0342  3080               	movlw	128
  2337     0343  00A4               	movwf	Lcd_Write_String@a+1
  2338     0344  120A  158A  246D  120A  118A  	fcall	_Lcd_Write_String
  2339                           
  2340                           ;main.c: 239:     Lcd_Set_Cursor(1,9);
  2341     0349  3009               	movlw	9
  2342     034A  1283               	bcf	3,5	;RP0=0, select bank0
  2343     034B  1303               	bcf	3,6	;RP1=0, select bank0
  2344     034C  00A2               	movwf	Lcd_Set_Cursor@b
  2345     034D  3001               	movlw	1
  2346     034E  120A  118A  273F  120A  118A  	fcall	_Lcd_Set_Cursor
  2347                           
  2348                           ;main.c: 240:     Lcd_Write_Char(uhora);
  2349     0353  0878               	movf	_uhora,w
  2350     0354  120A  158A  21EB  120A  118A  	fcall	_Lcd_Write_Char
  2351                           
  2352                           ;main.c: 241:     Lcd_Set_Cursor(1,8);
  2353     0359  3008               	movlw	8
  2354     035A  1283               	bcf	3,5	;RP0=0, select bank0
  2355     035B  1303               	bcf	3,6	;RP1=0, select bank0
  2356     035C  00A2               	movwf	Lcd_Set_Cursor@b
  2357     035D  3001               	movlw	1
  2358     035E  120A  118A  273F  120A  118A  	fcall	_Lcd_Set_Cursor
  2359                           
  2360                           ;main.c: 242:     Lcd_Write_Char(dhora);
  2361     0363  0877               	movf	_dhora,w
  2362     0364  120A  158A  21EB  120A  118A  	fcall	_Lcd_Write_Char
  2363                           
  2364                           ;main.c: 245:     Lcd_Set_Cursor(2,10);
  2365     0369  300A               	movlw	10
  2366     036A  1283               	bcf	3,5	;RP0=0, select bank0
  2367     036B  1303               	bcf	3,6	;RP1=0, select bank0
  2368     036C  00A2               	movwf	Lcd_Set_Cursor@b
  2369     036D  3002               	movlw	2
  2370     036E  120A  118A  273F  120A  118A  	fcall	_Lcd_Set_Cursor
  2371     0373                     l3494:
  2372                           
  2373                           ;main.c: 246:     Lcd_Write_String("/");
  2374     0373  3011               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2375     0374  1283               	bcf	3,5	;RP0=0, select bank0
  2376     0375  1303               	bcf	3,6	;RP1=0, select bank0
  2377     0376  00A3               	movwf	Lcd_Write_String@a
  2378     0377  3080               	movlw	128
  2379     0378  00A4               	movwf	Lcd_Write_String@a+1
  2380     0379  120A  158A  246D  120A  118A  	fcall	_Lcd_Write_String
  2381     037E                     l3496:
  2382                           
  2383                           ;main.c: 247:     Lcd_Set_Cursor(2,9);
  2384     037E  3009               	movlw	9
  2385     037F  1283               	bcf	3,5	;RP0=0, select bank0
  2386     0380  1303               	bcf	3,6	;RP1=0, select bank0
  2387     0381  00A2               	movwf	Lcd_Set_Cursor@b
  2388     0382  3002               	movlw	2
  2389     0383  120A  118A  273F  120A  118A  	fcall	_Lcd_Set_Cursor
  2390     0388                     l3498:
  2391                           
  2392                           ;main.c: 248:     Lcd_Write_Char(udia);
  2393     0388  0876               	movf	_udia,w
  2394     0389  120A  158A  21EB  120A  118A  	fcall	_Lcd_Write_Char
  2395     038E                     l3500:
  2396                           
  2397                           ;main.c: 249:     Lcd_Set_Cursor(2,8);
  2398     038E  3008               	movlw	8
  2399     038F  1283               	bcf	3,5	;RP0=0, select bank0
  2400     0390  1303               	bcf	3,6	;RP1=0, select bank0
  2401     0391  00A2               	movwf	Lcd_Set_Cursor@b
  2402     0392  3002               	movlw	2
  2403     0393  120A  118A  273F  120A  118A  	fcall	_Lcd_Set_Cursor
  2404     0398                     l3502:
  2405                           
  2406                           ;main.c: 250:     Lcd_Write_Char(ddia);
  2407     0398  1683               	bsf	3,5	;RP0=1, select bank1
  2408     0399  1303               	bcf	3,6	;RP1=0, select bank1
  2409     039A  082C               	movf	_ddia^(0+128),w
  2410     039B  120A  158A  21EB  120A  118A  	fcall	_Lcd_Write_Char
  2411     03A0                     l3504:
  2412                           
  2413                           ;main.c: 253:     Lcd_Set_Cursor(2,13);
  2414     03A0  300D               	movlw	13
  2415     03A1  1283               	bcf	3,5	;RP0=0, select bank0
  2416     03A2  1303               	bcf	3,6	;RP1=0, select bank0
  2417     03A3  00A2               	movwf	Lcd_Set_Cursor@b
  2418     03A4  3002               	movlw	2
  2419     03A5  120A  118A  273F  120A  118A  	fcall	_Lcd_Set_Cursor
  2420                           
  2421                           ;main.c: 254:     Lcd_Write_String("/");
  2422     03AA  3011               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2423     03AB  1283               	bcf	3,5	;RP0=0, select bank0
  2424     03AC  1303               	bcf	3,6	;RP1=0, select bank0
  2425     03AD  00A3               	movwf	Lcd_Write_String@a
  2426     03AE  3080               	movlw	128
  2427     03AF  00A4               	movwf	Lcd_Write_String@a+1
  2428     03B0  120A  158A  246D  120A  118A  	fcall	_Lcd_Write_String
  2429     03B5                     l3506:
  2430                           
  2431                           ;main.c: 255:     Lcd_Set_Cursor(2,12);
  2432     03B5  300C               	movlw	12
  2433     03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2434     03B7  1303               	bcf	3,6	;RP1=0, select bank0
  2435     03B8  00A2               	movwf	Lcd_Set_Cursor@b
  2436     03B9  3002               	movlw	2
  2437     03BA  120A  118A  273F  120A  118A  	fcall	_Lcd_Set_Cursor
  2438     03BF                     l3508:
  2439                           
  2440                           ;main.c: 256:     Lcd_Write_Char(umes);
  2441     03BF  1683               	bsf	3,5	;RP0=1, select bank1
  2442     03C0  1303               	bcf	3,6	;RP1=0, select bank1
  2443     03C1  082B               	movf	_umes^(0+128),w
  2444     03C2  120A  158A  21EB  120A  118A  	fcall	_Lcd_Write_Char
  2445     03C7                     l3510:
  2446                           
  2447                           ;main.c: 257:     Lcd_Set_Cursor(2,11);
  2448     03C7  300B               	movlw	11
  2449     03C8  1283               	bcf	3,5	;RP0=0, select bank0
  2450     03C9  1303               	bcf	3,6	;RP1=0, select bank0
  2451     03CA  00A2               	movwf	Lcd_Set_Cursor@b
  2452     03CB  3002               	movlw	2
  2453     03CC  120A  118A  273F  120A  118A  	fcall	_Lcd_Set_Cursor
  2454     03D1                     l3512:
  2455                           
  2456                           ;main.c: 258:     Lcd_Write_Char(dmes);
  2457     03D1  1683               	bsf	3,5	;RP0=1, select bank1
  2458     03D2  1303               	bcf	3,6	;RP1=0, select bank1
  2459     03D3  082A               	movf	_dmes^(0+128),w
  2460     03D4  120A  158A  21EB  120A  118A  	fcall	_Lcd_Write_Char
  2461     03D9                     l3514:
  2462                           
  2463                           ;main.c: 261:     Lcd_Set_Cursor(2,15);
  2464     03D9  300F               	movlw	15
  2465     03DA  1283               	bcf	3,5	;RP0=0, select bank0
  2466     03DB  1303               	bcf	3,6	;RP1=0, select bank0
  2467     03DC  00A2               	movwf	Lcd_Set_Cursor@b
  2468     03DD  3002               	movlw	2
  2469     03DE  120A  118A  273F  120A  118A  	fcall	_Lcd_Set_Cursor
  2470     03E3                     l3516:
  2471                           
  2472                           ;main.c: 262:     Lcd_Write_Char(uano);
  2473     03E3  1683               	bsf	3,5	;RP0=1, select bank1
  2474     03E4  1303               	bcf	3,6	;RP1=0, select bank1
  2475     03E5  0829               	movf	_uano^(0+128),w
  2476     03E6  120A  158A  21EB  120A  118A  	fcall	_Lcd_Write_Char
  2477     03EB                     l3518:
  2478                           
  2479                           ;main.c: 263:     Lcd_Set_Cursor(2,14);
  2480     03EB  300E               	movlw	14
  2481     03EC  1283               	bcf	3,5	;RP0=0, select bank0
  2482     03ED  1303               	bcf	3,6	;RP1=0, select bank0
  2483     03EE  00A2               	movwf	Lcd_Set_Cursor@b
  2484     03EF  3002               	movlw	2
  2485     03F0  120A  118A  273F  120A  118A  	fcall	_Lcd_Set_Cursor
  2486     03F5                     l3520:
  2487                           
  2488                           ;main.c: 264:     Lcd_Write_Char(dano);
  2489     03F5  1683               	bsf	3,5	;RP0=1, select bank1
  2490     03F6  1303               	bcf	3,6	;RP1=0, select bank1
  2491     03F7  0828               	movf	_dano^(0+128),w
  2492     03F8  120A  158A  21EB  120A  118A  	fcall	_Lcd_Write_Char
  2493     03FD                     l3522:
  2494                           
  2495                           ;main.c: 267:     Lcd_Set_Cursor(1,5);
  2496     03FD  3005               	movlw	5
  2497     03FE  1283               	bcf	3,5	;RP0=0, select bank0
  2498     03FF  1303               	bcf	3,6	;RP1=0, select bank0
  2499     0400  00A2               	movwf	Lcd_Set_Cursor@b
  2500     0401  3001               	movlw	1
  2501     0402  120A  118A  273F  120A  118A  	fcall	_Lcd_Set_Cursor
  2502     0407                     l3524:
  2503                           
  2504                           ;main.c: 268:     sprintf(buffer, "%u", modo);
  2505     0407  300E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2506     0408  1283               	bcf	3,5	;RP0=0, select bank0
  2507     0409  1303               	bcf	3,6	;RP1=0, select bank0
  2508     040A  00AC               	movwf	sprintf@f
  2509     040B  086F               	movf	_modo,w
  2510     040C  00B9               	movwf	??_valorLCD
  2511     040D  01BA               	clrf	??_valorLCD+1
  2512     040E  0839               	movf	??_valorLCD,w
  2513     040F  00AD               	movwf	?_sprintf+1
  2514     0410  083A               	movf	??_valorLCD+1,w
  2515     0411  00AE               	movwf	?_sprintf+2
  2516     0412  30AE               	movlw	(low (_buffer| 0))& (0+255)
  2517     0413  120A  118A  2537  120A  118A  	fcall	_sprintf
  2518     0418                     l3526:
  2519                           
  2520                           ;main.c: 269:     Lcd_Write_String(buffer);
  2521     0418  30AE               	movlw	(low (_buffer| 0))& (0+255)
  2522     0419  1283               	bcf	3,5	;RP0=0, select bank0
  2523     041A  1303               	bcf	3,6	;RP1=0, select bank0
  2524     041B  00A3               	movwf	Lcd_Write_String@a
  2525     041C  3000               	movlw	0
  2526     041D  00A4               	movwf	Lcd_Write_String@a+1
  2527     041E  120A  158A  246D  120A  118A  	fcall	_Lcd_Write_String
  2528     0423                     l274:
  2529     0423  0008               	return
  2530     0424                     __end_of_valorLCD:
  2531                           
  2532                           	psect	text2
  2533     0537                     __ptext2:	
  2534 ;; *************** function _sprintf *****************
  2535 ;; Defined at:
  2536 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;  sp              1    wreg     PTR unsigned char 
  2539 ;;		 -> buffer(20), 
  2540 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  2541 ;;		 -> STR_8(3), STR_2(3), 
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;  sp              1   23[BANK0 ] PTR unsigned char 
  2544 ;;		 -> buffer(20), 
  2545 ;;  tmpval          4    0        struct .
  2546 ;;  val             2   20[BANK0 ] unsigned int 
  2547 ;;  cp              2    0        PTR const unsigned char 
  2548 ;;  len             2    0        unsigned int 
  2549 ;;  c               1   24[BANK0 ] unsigned char 
  2550 ;;  prec            1   22[BANK0 ] char 
  2551 ;;  ap              1   19[BANK0 ] PTR void [1]
  2552 ;;		 -> ?_sprintf(2), 
  2553 ;;  flag            1   18[BANK0 ] unsigned char 
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  2   12[BANK0 ] int 
  2556 ;; Registers used:
  2557 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2563 ;;      Params:         0       3       0       0       0
  2564 ;;      Locals:         0       7       0       0       0
  2565 ;;      Temps:          0       3       0       0       0
  2566 ;;      Totals:         0      13       0       0       0
  2567 ;;Total ram usage:       13 bytes
  2568 ;; Hardware stack levels used: 1
  2569 ;; Hardware stack levels required when called: 2
  2570 ;; This function calls:
  2571 ;;		___lwdiv
  2572 ;;		___lwmod
  2573 ;; This function is called by:
  2574 ;;		_valorLCD
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578     0537                     _sprintf:	
  2579                           ;psect for function _sprintf
  2580                           
  2581                           
  2582                           ;incstack = 0
  2583                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2584                           ;sprintf@sp stored from wreg
  2585     0537  1283               	bcf	3,5	;RP0=0, select bank0
  2586     0538  1303               	bcf	3,6	;RP1=0, select bank0
  2587     0539  00B7               	movwf	sprintf@sp
  2588     053A                     l3238:
  2589                           
  2590                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2591     053A  302D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2592     053B  00B3               	movwf	sprintf@ap
  2593                           
  2594                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2595     053C  2DE5               	goto	l3280
  2596     053D                     l3240:
  2597                           
  2598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2599     053D  3025               	movlw	37
  2600     053E  0638               	xorwf	sprintf@c,w
  2601     053F  1903               	btfsc	3,2
  2602     0540  2D42               	goto	u3021
  2603     0541  2D43               	goto	u3020
  2604     0542                     u3021:
  2605     0542  2D4D               	goto	l3246
  2606     0543                     u3020:
  2607     0543                     l3242:
  2608                           
  2609                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2610     0543  0837               	movf	sprintf@sp,w
  2611     0544  0084               	movwf	4
  2612     0545  0838               	movf	sprintf@c,w
  2613     0546  1383               	bcf	3,7	;select IRP bank0
  2614     0547  0080               	movwf	0
  2615     0548                     l3244:
  2616     0548  3001               	movlw	1
  2617     0549  00AF               	movwf	??_sprintf
  2618     054A  082F               	movf	??_sprintf,w
  2619     054B  07B7               	addwf	sprintf@sp,f
  2620                           
  2621                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  2622     054C  2DE5               	goto	l3280
  2623     054D                     l3246:
  2624                           
  2625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2626     054D  01B2               	clrf	sprintf@flag
  2627                           
  2628                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2629     054E  2D54               	goto	l3252
  2630     054F                     l3248:
  2631                           
  2632                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  2633     054F  30C0               	movlw	192
  2634     0550  00AF               	movwf	??_sprintf
  2635     0551  082F               	movf	??_sprintf,w
  2636     0552  04B2               	iorwf	sprintf@flag,f
  2637                           
  2638                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  2639     0553  2D6E               	goto	l3254
  2640     0554                     l3252:
  2641     0554  3001               	movlw	1
  2642     0555  07AC               	addwf	sprintf@f,f
  2643     0556  30FF               	movlw	-1
  2644     0557  072C               	addwf	sprintf@f,w
  2645     0558  0084               	movwf	4
  2646     0559  120A  158A  200A  120A  118A  	fcall	stringdir
  2647     055E  00B8               	movwf	sprintf@c
  2648     055F  00AF               	movwf	??_sprintf
  2649     0560  01B0               	clrf	??_sprintf+1
  2650                           
  2651                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2652                           ; Switch size 1, requested type "simple"
  2653                           ; Number of cases is 1, Range of values is 0 to 0
  2654                           ; switch strategies available:
  2655                           ; Name         Instructions Cycles
  2656                           ; simple_byte            4     3 (average)
  2657                           ; direct_byte           11     8 (fixed)
  2658                           ; jumptable            260     6 (fixed)
  2659                           ;	Chosen strategy is simple_byte
  2660     0561  0830               	movf	??_sprintf+1,w
  2661     0562  3A00               	xorlw	0	; case 0
  2662     0563  1903               	skipnz
  2663     0564  2D66               	goto	l3762
  2664     0565  2DE5               	goto	l3280
  2665     0566                     l3762:
  2666                           
  2667                           ; Switch size 1, requested type "simple"
  2668                           ; Number of cases is 2, Range of values is 0 to 117
  2669                           ; switch strategies available:
  2670                           ; Name         Instructions Cycles
  2671                           ; simple_byte            7     4 (average)
  2672                           ; jumptable            260     6 (fixed)
  2673                           ;	Chosen strategy is simple_byte
  2674     0566  082F               	movf	??_sprintf,w
  2675     0567  3A00               	xorlw	0	; case 0
  2676     0568  1903               	skipnz
  2677     0569  2DF5               	goto	l3282
  2678     056A  3A75               	xorlw	117	; case 117
  2679     056B  1903               	skipnz
  2680     056C  2D4F               	goto	l3248
  2681     056D  2DE5               	goto	l3280
  2682     056E                     l3254:
  2683                           
  2684                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2685     056E  0833               	movf	sprintf@ap,w
  2686     056F  0084               	movwf	4
  2687     0570  1383               	bcf	3,7	;select IRP bank0
  2688     0571  0800               	movf	0,w
  2689     0572  00B4               	movwf	sprintf@val
  2690     0573  0A84               	incf	4,f
  2691     0574  0800               	movf	0,w
  2692     0575  00B5               	movwf	sprintf@val+1
  2693     0576                     l3256:
  2694     0576  3002               	movlw	2
  2695     0577  00AF               	movwf	??_sprintf
  2696     0578  082F               	movf	??_sprintf,w
  2697     0579  07B3               	addwf	sprintf@ap,f
  2698     057A                     l3258:
  2699                           
  2700                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2701     057A  01B8               	clrf	sprintf@c
  2702     057B  0AB8               	incf	sprintf@c,f
  2703     057C                     l3264:
  2704                           
  2705                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2706     057C  0838               	movf	sprintf@c,w
  2707     057D  00AF               	movwf	??_sprintf
  2708     057E  072F               	addwf	??_sprintf,w
  2709     057F  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2710     0580  0084               	movwf	4
  2711     0581  120A  158A  200A  120A  118A  	fcall	stringdir
  2712     0586  00B0               	movwf	??_sprintf+1
  2713     0587  120A  158A  200A  120A  118A  	fcall	stringdir
  2714     058C  00B1               	movwf	??_sprintf+2
  2715     058D  0831               	movf	??_sprintf+2,w
  2716     058E  0235               	subwf	sprintf@val+1,w
  2717     058F  1D03               	skipz
  2718     0590  2D93               	goto	u3035
  2719     0591  0830               	movf	??_sprintf+1,w
  2720     0592  0234               	subwf	sprintf@val,w
  2721     0593                     u3035:
  2722     0593  1803               	skipnc
  2723     0594  2D96               	goto	u3031
  2724     0595  2D97               	goto	u3030
  2725     0596                     u3031:
  2726     0596  2D98               	goto	l3268
  2727     0597                     u3030:
  2728     0597  2DA2               	goto	l3270
  2729     0598                     l3268:
  2730     0598  3001               	movlw	1
  2731     0599  00AF               	movwf	??_sprintf
  2732     059A  082F               	movf	??_sprintf,w
  2733     059B  07B8               	addwf	sprintf@c,f
  2734     059C  3005               	movlw	5
  2735     059D  0638               	xorwf	sprintf@c,w
  2736     059E  1D03               	btfss	3,2
  2737     059F  2DA1               	goto	u3041
  2738     05A0  2DA2               	goto	u3040
  2739     05A1                     u3041:
  2740     05A1  2D7C               	goto	l3264
  2741     05A2                     u3040:
  2742     05A2                     l3270:
  2743                           
  2744                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2745     05A2  0838               	movf	sprintf@c,w
  2746     05A3  00B6               	movwf	sprintf@prec
  2747                           
  2748                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2749     05A4  2DDC               	goto	l3278
  2750     05A5                     l3272:
  2751                           
  2752                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2753     05A5  300A               	movlw	10
  2754     05A6  00A7               	movwf	___lwmod@divisor
  2755     05A7  3000               	movlw	0
  2756     05A8  00A8               	movwf	___lwmod@divisor+1
  2757     05A9  0836               	movf	sprintf@prec,w
  2758     05AA  00AF               	movwf	??_sprintf
  2759     05AB  072F               	addwf	??_sprintf,w
  2760     05AC  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2761     05AD  0084               	movwf	4
  2762     05AE  120A  158A  200A  120A  118A  	fcall	stringdir
  2763     05B3  00A0               	movwf	___lwdiv@divisor
  2764     05B4  120A  158A  200A  120A  118A  	fcall	stringdir
  2765     05B9  00A1               	movwf	___lwdiv@divisor+1
  2766     05BA  0835               	movf	sprintf@val+1,w
  2767     05BB  00A3               	movwf	___lwdiv@dividend+1
  2768     05BC  0834               	movf	sprintf@val,w
  2769     05BD  00A2               	movwf	___lwdiv@dividend
  2770     05BE  120A  158A  2427  120A  118A  	fcall	___lwdiv
  2771     05C3  1283               	bcf	3,5	;RP0=0, select bank0
  2772     05C4  1303               	bcf	3,6	;RP1=0, select bank0
  2773     05C5  0821               	movf	?___lwdiv+1,w
  2774     05C6  00AA               	movwf	___lwmod@dividend+1
  2775     05C7  0820               	movf	?___lwdiv,w
  2776     05C8  00A9               	movwf	___lwmod@dividend
  2777     05C9  120A  158A  225A  120A  118A  	fcall	___lwmod
  2778     05CE  1283               	bcf	3,5	;RP0=0, select bank0
  2779     05CF  1303               	bcf	3,6	;RP1=0, select bank0
  2780     05D0  0827               	movf	?___lwmod,w
  2781     05D1  3E30               	addlw	48
  2782     05D2  00B8               	movwf	sprintf@c
  2783     05D3                     l3274:
  2784                           
  2785                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2786     05D3  0837               	movf	sprintf@sp,w
  2787     05D4  0084               	movwf	4
  2788     05D5  0838               	movf	sprintf@c,w
  2789     05D6  1383               	bcf	3,7	;select IRP bank0
  2790     05D7  0080               	movwf	0
  2791     05D8                     l3276:
  2792     05D8  3001               	movlw	1
  2793     05D9  00AF               	movwf	??_sprintf
  2794     05DA  082F               	movf	??_sprintf,w
  2795     05DB  07B7               	addwf	sprintf@sp,f
  2796     05DC                     l3278:
  2797                           
  2798                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2799     05DC  30FF               	movlw	255
  2800     05DD  00AF               	movwf	??_sprintf
  2801     05DE  082F               	movf	??_sprintf,w
  2802     05DF  07B6               	addwf	sprintf@prec,f
  2803     05E0  0A36               	incf	sprintf@prec,w
  2804     05E1  1D03               	btfss	3,2
  2805     05E2  2DE4               	goto	u3051
  2806     05E3  2DE5               	goto	u3050
  2807     05E4                     u3051:
  2808     05E4  2DA5               	goto	l3272
  2809     05E5                     u3050:
  2810     05E5                     l3280:
  2811                           
  2812                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2813     05E5  3001               	movlw	1
  2814     05E6  07AC               	addwf	sprintf@f,f
  2815     05E7  30FF               	movlw	-1
  2816     05E8  072C               	addwf	sprintf@f,w
  2817     05E9  0084               	movwf	4
  2818     05EA  120A  158A  200A  120A  118A  	fcall	stringdir
  2819     05EF  00B8               	movwf	sprintf@c
  2820     05F0  0838               	movf	sprintf@c,w
  2821     05F1  1D03               	btfss	3,2
  2822     05F2  2DF4               	goto	u3061
  2823     05F3  2DF5               	goto	u3060
  2824     05F4                     u3061:
  2825     05F4  2D3D               	goto	l3240
  2826     05F5                     u3060:
  2827     05F5                     l3282:
  2828                           
  2829                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2830     05F5  0837               	movf	sprintf@sp,w
  2831     05F6  0084               	movwf	4
  2832     05F7  1383               	bcf	3,7	;select IRP bank0
  2833     05F8  0180               	clrf	0
  2834     05F9                     l562:
  2835     05F9  0008               	return
  2836     05FA                     __end_of_sprintf:
  2837                           
  2838                           	psect	text3
  2839     0C6D                     __ptext3:	
  2840 ;; *************** function _Lcd_Write_String *****************
  2841 ;; Defined at:
  2842 ;;		line 104 in file "lcd.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;  a               2    3[BANK0 ] PTR const unsigned char 
  2845 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  2846 ;;		 -> STR_3(2), buffer(20), STR_1(3), 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  i               2    8[BANK0 ] int 
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      void 
  2851 ;; Registers used:
  2852 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2858 ;;      Params:         0       2       0       0       0
  2859 ;;      Locals:         0       2       0       0       0
  2860 ;;      Temps:          0       3       0       0       0
  2861 ;;      Totals:         0       7       0       0       0
  2862 ;;Total ram usage:        7 bytes
  2863 ;; Hardware stack levels used: 1
  2864 ;; Hardware stack levels required when called: 3
  2865 ;; This function calls:
  2866 ;;		_Lcd_Write_Char
  2867 ;; This function is called by:
  2868 ;;		_main
  2869 ;;		_valorLCD
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873     0C6D                     _Lcd_Write_String:	
  2874                           ;psect for function _Lcd_Write_String
  2875                           
  2876     0C6D                     l3190:	
  2877                           ;incstack = 0
  2878                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2879                           
  2880                           
  2881                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
  2882     0C6D  1283               	bcf	3,5	;RP0=0, select bank0
  2883     0C6E  1303               	bcf	3,6	;RP1=0, select bank0
  2884     0C6F  01A8               	clrf	Lcd_Write_String@i
  2885     0C70  01A9               	clrf	Lcd_Write_String@i+1
  2886     0C71  2C96               	goto	l3196
  2887     0C72                     l3192:
  2888                           
  2889                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
  2890     0C72  0828               	movf	Lcd_Write_String@i,w
  2891     0C73  0723               	addwf	Lcd_Write_String@a,w
  2892     0C74  00A6               	movwf	??_Lcd_Write_String+1
  2893     0C75  0824               	movf	Lcd_Write_String@a+1,w
  2894     0C76  00A5               	movwf	??_Lcd_Write_String
  2895     0C77  1803               	skipnc
  2896     0C78  0AA5               	incf	??_Lcd_Write_String,f
  2897     0C79  1FA8               	btfss	Lcd_Write_String@i,7
  2898     0C7A  2C7C               	goto	u2970
  2899     0C7B  03A5               	decf	??_Lcd_Write_String,f
  2900     0C7C                     u2970:
  2901     0C7C  1283               	bcf	3,5	;RP0=0, select bank0
  2902     0C7D  1303               	bcf	3,6	;RP1=0, select bank0
  2903     0C7E  0825               	movf	??_Lcd_Write_String,w
  2904     0C7F  00A7               	movwf	??_Lcd_Write_String+2
  2905     0C80  0827               	movf	??_Lcd_Write_String+2,w
  2906     0C81  00FF               	movwf	btemp+1
  2907     0C82  0826               	movf	??_Lcd_Write_String+1,w
  2908     0C83  0084               	movwf	4
  2909     0C84  120A  158A  2000  120A  158A  	fcall	stringtab
  2910     0C89  120A  158A  21EB  120A  158A  	fcall	_Lcd_Write_Char
  2911     0C8E                     l3194:
  2912     0C8E  3001               	movlw	1
  2913     0C8F  1283               	bcf	3,5	;RP0=0, select bank0
  2914     0C90  1303               	bcf	3,6	;RP1=0, select bank0
  2915     0C91  07A8               	addwf	Lcd_Write_String@i,f
  2916     0C92  1803               	skipnc
  2917     0C93  0AA9               	incf	Lcd_Write_String@i+1,f
  2918     0C94  3000               	movlw	0
  2919     0C95  07A9               	addwf	Lcd_Write_String@i+1,f
  2920     0C96                     l3196:
  2921     0C96  0828               	movf	Lcd_Write_String@i,w
  2922     0C97  0723               	addwf	Lcd_Write_String@a,w
  2923     0C98  00A6               	movwf	??_Lcd_Write_String+1
  2924     0C99  0824               	movf	Lcd_Write_String@a+1,w
  2925     0C9A  00A5               	movwf	??_Lcd_Write_String
  2926     0C9B  1803               	skipnc
  2927     0C9C  0AA5               	incf	??_Lcd_Write_String,f
  2928     0C9D  1FA8               	btfss	Lcd_Write_String@i,7
  2929     0C9E  2CA0               	goto	u2980
  2930     0C9F  03A5               	decf	??_Lcd_Write_String,f
  2931     0CA0                     u2980:
  2932     0CA0  1283               	bcf	3,5	;RP0=0, select bank0
  2933     0CA1  1303               	bcf	3,6	;RP1=0, select bank0
  2934     0CA2  0825               	movf	??_Lcd_Write_String,w
  2935     0CA3  00A7               	movwf	??_Lcd_Write_String+2
  2936     0CA4  0827               	movf	??_Lcd_Write_String+2,w
  2937     0CA5  00FF               	movwf	btemp+1
  2938     0CA6  0826               	movf	??_Lcd_Write_String+1,w
  2939     0CA7  0084               	movwf	4
  2940     0CA8  120A  158A  2000  120A  158A  	fcall	stringtab
  2941     0CAD  3A00               	xorlw	0
  2942     0CAE  1D03               	skipz
  2943     0CAF  2CB1               	goto	u2991
  2944     0CB0  2CB2               	goto	u2990
  2945     0CB1                     u2991:
  2946     0CB1  2C72               	goto	l3192
  2947     0CB2                     u2990:
  2948     0CB2                     l53:
  2949     0CB2  0008               	return
  2950     0CB3                     __end_of_Lcd_Write_String:
  2951                           
  2952                           	psect	text4
  2953     09EB                     __ptext4:	
  2954 ;; *************** function _Lcd_Write_Char *****************
  2955 ;; Defined at:
  2956 ;;		line 88 in file "lcd.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;  a               1    wreg     unsigned char 
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  a               1    2[BANK0 ] unsigned char 
  2961 ;;  y               1    1[BANK0 ] unsigned char 
  2962 ;;  temp            1    0[BANK0 ] unsigned char 
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      void 
  2965 ;; Registers used:
  2966 ;;		wreg, status,2, status,0, pclath, cstack
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2972 ;;      Params:         0       0       0       0       0
  2973 ;;      Locals:         0       3       0       0       0
  2974 ;;      Temps:          1       0       0       0       0
  2975 ;;      Totals:         1       3       0       0       0
  2976 ;;Total ram usage:        4 bytes
  2977 ;; Hardware stack levels used: 1
  2978 ;; Hardware stack levels required when called: 2
  2979 ;; This function calls:
  2980 ;;		_Lcd_Port
  2981 ;; This function is called by:
  2982 ;;		_Lcd_Write_String
  2983 ;;		_valorLCD
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987     09EB                     _Lcd_Write_Char:	
  2988                           ;psect for function _Lcd_Write_Char
  2989                           
  2990                           
  2991                           ;incstack = 0
  2992                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2993                           ;Lcd_Write_Char@a stored from wreg
  2994     09EB  1283               	bcf	3,5	;RP0=0, select bank0
  2995     09EC  1303               	bcf	3,6	;RP1=0, select bank0
  2996     09ED  00A2               	movwf	Lcd_Write_Char@a
  2997     09EE                     l3060:
  2998                           
  2999                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
  3000     09EE  0822               	movf	Lcd_Write_Char@a,w
  3001     09EF  390F               	andlw	15
  3002     09F0  00A0               	movwf	Lcd_Write_Char@temp
  3003                           
  3004                           ;lcd.c: 92:     y = a&0xF0;
  3005     09F1  0822               	movf	Lcd_Write_Char@a,w
  3006     09F2  39F0               	andlw	240
  3007     09F3  00A1               	movwf	Lcd_Write_Char@y
  3008     09F4                     l3062:
  3009                           
  3010                           ;lcd.c: 93:     PORTDbits.RD2 = 1;
  3011     09F4  1508               	bsf	8,2	;volatile
  3012     09F5                     l3064:
  3013                           
  3014                           ;lcd.c: 94:     Lcd_Port(y>>4);
  3015     09F5  0821               	movf	Lcd_Write_Char@y,w
  3016     09F6  00F5               	movwf	??_Lcd_Write_Char
  3017     09F7  3004               	movlw	4
  3018     09F8                     u2705:
  3019     09F8  1003               	clrc
  3020     09F9  0CF5               	rrf	??_Lcd_Write_Char,f
  3021     09FA  3EFF               	addlw	-1
  3022     09FB  1D03               	skipz
  3023     09FC  29F8               	goto	u2705
  3024     09FD  0875               	movf	??_Lcd_Write_Char,w
  3025     09FE  120A  158A  216D  120A  158A  	fcall	_Lcd_Port
  3026     0A03                     l3066:
  3027                           
  3028                           ;lcd.c: 95:     PORTDbits.RD3 = 1;
  3029     0A03  1283               	bcf	3,5	;RP0=0, select bank0
  3030     0A04  1303               	bcf	3,6	;RP1=0, select bank0
  3031     0A05  1588               	bsf	8,3	;volatile
  3032     0A06                     l3068:
  3033                           
  3034                           ;lcd.c: 96:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3035     0A06  301A               	movlw	26
  3036     0A07  00F5               	movwf	??_Lcd_Write_Char
  3037     0A08                     u3487:
  3038     0A08  0BF5               	decfsz	??_Lcd_Write_Char,f
  3039     0A09  2A08               	goto	u3487
  3040     0A0A  0000               	nop
  3041     0A0B                     l3070:
  3042                           
  3043                           ;lcd.c: 97:     PORTDbits.RD3 = 0;
  3044     0A0B  1283               	bcf	3,5	;RP0=0, select bank0
  3045     0A0C  1303               	bcf	3,6	;RP1=0, select bank0
  3046     0A0D  1188               	bcf	8,3	;volatile
  3047     0A0E                     l3072:
  3048                           
  3049                           ;lcd.c: 98:     Lcd_Port(temp);
  3050     0A0E  0820               	movf	Lcd_Write_Char@temp,w
  3051     0A0F  120A  158A  216D  120A  158A  	fcall	_Lcd_Port
  3052     0A14                     l3074:
  3053                           
  3054                           ;lcd.c: 99:     PORTDbits.RD3 = 1;
  3055     0A14  1283               	bcf	3,5	;RP0=0, select bank0
  3056     0A15  1303               	bcf	3,6	;RP1=0, select bank0
  3057     0A16  1588               	bsf	8,3	;volatile
  3058     0A17                     l3076:
  3059                           
  3060                           ;lcd.c: 100:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3061     0A17  301A               	movlw	26
  3062     0A18  00F5               	movwf	??_Lcd_Write_Char
  3063     0A19                     u3497:
  3064     0A19  0BF5               	decfsz	??_Lcd_Write_Char,f
  3065     0A1A  2A19               	goto	u3497
  3066     0A1B  0000               	nop
  3067     0A1C                     l3078:
  3068                           
  3069                           ;lcd.c: 101:     PORTDbits.RD3 = 0;
  3070     0A1C  1283               	bcf	3,5	;RP0=0, select bank0
  3071     0A1D  1303               	bcf	3,6	;RP1=0, select bank0
  3072     0A1E  1188               	bcf	8,3	;volatile
  3073     0A1F                     l47:
  3074     0A1F  0008               	return
  3075     0A20                     __end_of_Lcd_Write_Char:
  3076                           
  3077                           	psect	text5
  3078     073F                     __ptext5:	
  3079 ;; *************** function _Lcd_Set_Cursor *****************
  3080 ;; Defined at:
  3081 ;;		line 26 in file "lcd.c"
  3082 ;; Parameters:    Size  Location     Type
  3083 ;;  a               1    wreg     unsigned char 
  3084 ;;  b               1    2[BANK0 ] unsigned char 
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;  a               1    4[BANK0 ] unsigned char 
  3087 ;;  temp            1    7[BANK0 ] unsigned char 
  3088 ;;  y               1    6[BANK0 ] unsigned char 
  3089 ;;  z               1    5[BANK0 ] unsigned char 
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  1    wreg      void 
  3092 ;; Registers used:
  3093 ;;		wreg, status,2, status,0, pclath, cstack
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3099 ;;      Params:         0       1       0       0       0
  3100 ;;      Locals:         0       4       0       0       0
  3101 ;;      Temps:          0       1       0       0       0
  3102 ;;      Totals:         0       6       0       0       0
  3103 ;;Total ram usage:        6 bytes
  3104 ;; Hardware stack levels used: 1
  3105 ;; Hardware stack levels required when called: 3
  3106 ;; This function calls:
  3107 ;;		_Lcd_Cmd
  3108 ;; This function is called by:
  3109 ;;		_main
  3110 ;;		_valorLCD
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114     073F                     _Lcd_Set_Cursor:	
  3115                           ;psect for function _Lcd_Set_Cursor
  3116                           
  3117                           
  3118                           ;incstack = 0
  3119                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3120                           ;Lcd_Set_Cursor@a stored from wreg
  3121     073F  1283               	bcf	3,5	;RP0=0, select bank0
  3122     0740  1303               	bcf	3,6	;RP1=0, select bank0
  3123     0741  00A4               	movwf	Lcd_Set_Cursor@a
  3124     0742                     l3150:
  3125                           
  3126                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  3127     0742  0324               	decf	Lcd_Set_Cursor@a,w
  3128     0743  1D03               	btfss	3,2
  3129     0744  2F46               	goto	u2891
  3130     0745  2F47               	goto	u2890
  3131     0746                     u2891:
  3132     0746  2F66               	goto	l3160
  3133     0747                     u2890:
  3134     0747                     l3152:
  3135                           
  3136                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  3137     0747  0822               	movf	Lcd_Set_Cursor@b,w
  3138     0748  3E7F               	addlw	127
  3139     0749  00A7               	movwf	Lcd_Set_Cursor@temp
  3140                           
  3141                           ;lcd.c: 32:         z = temp>>4;
  3142     074A  0827               	movf	Lcd_Set_Cursor@temp,w
  3143     074B  00A3               	movwf	??_Lcd_Set_Cursor
  3144     074C  3004               	movlw	4
  3145     074D                     u2905:
  3146     074D  1003               	clrc
  3147     074E  0CA3               	rrf	??_Lcd_Set_Cursor,f
  3148     074F  3EFF               	addlw	-1
  3149     0750  1D03               	skipz
  3150     0751  2F4D               	goto	u2905
  3151     0752  0823               	movf	??_Lcd_Set_Cursor,w
  3152     0753  00A5               	movwf	Lcd_Set_Cursor@z
  3153     0754                     l3154:
  3154                           
  3155                           ;lcd.c: 33:         y = temp & 0x0F;
  3156     0754  0827               	movf	Lcd_Set_Cursor@temp,w
  3157     0755  390F               	andlw	15
  3158     0756  00A6               	movwf	Lcd_Set_Cursor@y
  3159     0757                     l3156:
  3160                           
  3161                           ;lcd.c: 34:         Lcd_Cmd(z);
  3162     0757  0825               	movf	Lcd_Set_Cursor@z,w
  3163     0758  120A  158A  2113  120A  118A  	fcall	_Lcd_Cmd
  3164     075D                     l3158:
  3165                           
  3166                           ;lcd.c: 35:         Lcd_Cmd(y);
  3167     075D  1283               	bcf	3,5	;RP0=0, select bank0
  3168     075E  1303               	bcf	3,6	;RP1=0, select bank0
  3169     075F  0826               	movf	Lcd_Set_Cursor@y,w
  3170     0760  120A  158A  2113  120A  118A  	fcall	_Lcd_Cmd
  3171                           
  3172                           ;lcd.c: 36:     }
  3173     0765  2FD5               	goto	l41
  3174     0766                     l3160:
  3175     0766  3002               	movlw	2
  3176     0767  0624               	xorwf	Lcd_Set_Cursor@a,w
  3177     0768  1D03               	btfss	3,2
  3178     0769  2F6B               	goto	u2911
  3179     076A  2F6C               	goto	u2910
  3180     076B                     u2911:
  3181     076B  2F8B               	goto	l3170
  3182     076C                     u2910:
  3183     076C                     l3162:
  3184                           
  3185                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  3186     076C  0822               	movf	Lcd_Set_Cursor@b,w
  3187     076D  3EBF               	addlw	191
  3188     076E  00A7               	movwf	Lcd_Set_Cursor@temp
  3189                           
  3190                           ;lcd.c: 40:         z = temp>>4;
  3191     076F  0827               	movf	Lcd_Set_Cursor@temp,w
  3192     0770  00A3               	movwf	??_Lcd_Set_Cursor
  3193     0771  3004               	movlw	4
  3194     0772                     u2925:
  3195     0772  1003               	clrc
  3196     0773  0CA3               	rrf	??_Lcd_Set_Cursor,f
  3197     0774  3EFF               	addlw	-1
  3198     0775  1D03               	skipz
  3199     0776  2F72               	goto	u2925
  3200     0777  0823               	movf	??_Lcd_Set_Cursor,w
  3201     0778  00A5               	movwf	Lcd_Set_Cursor@z
  3202     0779                     l3164:
  3203                           
  3204                           ;lcd.c: 41:         y = temp & 0x0F;
  3205     0779  0827               	movf	Lcd_Set_Cursor@temp,w
  3206     077A  390F               	andlw	15
  3207     077B  00A6               	movwf	Lcd_Set_Cursor@y
  3208     077C                     l3166:
  3209                           
  3210                           ;lcd.c: 42:         Lcd_Cmd(z);
  3211     077C  0825               	movf	Lcd_Set_Cursor@z,w
  3212     077D  120A  158A  2113  120A  118A  	fcall	_Lcd_Cmd
  3213     0782                     l3168:
  3214                           
  3215                           ;lcd.c: 43:         Lcd_Cmd(y);
  3216     0782  1283               	bcf	3,5	;RP0=0, select bank0
  3217     0783  1303               	bcf	3,6	;RP1=0, select bank0
  3218     0784  0826               	movf	Lcd_Set_Cursor@y,w
  3219     0785  120A  158A  2113  120A  118A  	fcall	_Lcd_Cmd
  3220                           
  3221                           ;lcd.c: 44:     }
  3222     078A  2FD5               	goto	l41
  3223     078B                     l3170:
  3224     078B  3003               	movlw	3
  3225     078C  0624               	xorwf	Lcd_Set_Cursor@a,w
  3226     078D  1D03               	btfss	3,2
  3227     078E  2F90               	goto	u2931
  3228     078F  2F91               	goto	u2930
  3229     0790                     u2931:
  3230     0790  2FB0               	goto	l3180
  3231     0791                     u2930:
  3232     0791                     l3172:
  3233                           
  3234                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
  3235     0791  0822               	movf	Lcd_Set_Cursor@b,w
  3236     0792  3E93               	addlw	147
  3237     0793  00A7               	movwf	Lcd_Set_Cursor@temp
  3238                           
  3239                           ;lcd.c: 48:         z = temp>>4;
  3240     0794  0827               	movf	Lcd_Set_Cursor@temp,w
  3241     0795  00A3               	movwf	??_Lcd_Set_Cursor
  3242     0796  3004               	movlw	4
  3243     0797                     u2945:
  3244     0797  1003               	clrc
  3245     0798  0CA3               	rrf	??_Lcd_Set_Cursor,f
  3246     0799  3EFF               	addlw	-1
  3247     079A  1D03               	skipz
  3248     079B  2F97               	goto	u2945
  3249     079C  0823               	movf	??_Lcd_Set_Cursor,w
  3250     079D  00A5               	movwf	Lcd_Set_Cursor@z
  3251     079E                     l3174:
  3252                           
  3253                           ;lcd.c: 49:         y = temp & 0x0F;
  3254     079E  0827               	movf	Lcd_Set_Cursor@temp,w
  3255     079F  390F               	andlw	15
  3256     07A0  00A6               	movwf	Lcd_Set_Cursor@y
  3257     07A1                     l3176:
  3258                           
  3259                           ;lcd.c: 50:         Lcd_Cmd(z);
  3260     07A1  0825               	movf	Lcd_Set_Cursor@z,w
  3261     07A2  120A  158A  2113  120A  118A  	fcall	_Lcd_Cmd
  3262     07A7                     l3178:
  3263                           
  3264                           ;lcd.c: 51:         Lcd_Cmd(y);
  3265     07A7  1283               	bcf	3,5	;RP0=0, select bank0
  3266     07A8  1303               	bcf	3,6	;RP1=0, select bank0
  3267     07A9  0826               	movf	Lcd_Set_Cursor@y,w
  3268     07AA  120A  158A  2113  120A  118A  	fcall	_Lcd_Cmd
  3269                           
  3270                           ;lcd.c: 52:     }
  3271     07AF  2FD5               	goto	l41
  3272     07B0                     l3180:
  3273     07B0  3004               	movlw	4
  3274     07B1  0624               	xorwf	Lcd_Set_Cursor@a,w
  3275     07B2  1D03               	btfss	3,2
  3276     07B3  2FB5               	goto	u2951
  3277     07B4  2FB6               	goto	u2950
  3278     07B5                     u2951:
  3279     07B5  2FD5               	goto	l37
  3280     07B6                     u2950:
  3281     07B6                     l3182:
  3282                           
  3283                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
  3284     07B6  0822               	movf	Lcd_Set_Cursor@b,w
  3285     07B7  3ED3               	addlw	211
  3286     07B8  00A7               	movwf	Lcd_Set_Cursor@temp
  3287                           
  3288                           ;lcd.c: 56:         z = temp>>4;
  3289     07B9  0827               	movf	Lcd_Set_Cursor@temp,w
  3290     07BA  00A3               	movwf	??_Lcd_Set_Cursor
  3291     07BB  3004               	movlw	4
  3292     07BC                     u2965:
  3293     07BC  1003               	clrc
  3294     07BD  0CA3               	rrf	??_Lcd_Set_Cursor,f
  3295     07BE  3EFF               	addlw	-1
  3296     07BF  1D03               	skipz
  3297     07C0  2FBC               	goto	u2965
  3298     07C1  0823               	movf	??_Lcd_Set_Cursor,w
  3299     07C2  00A5               	movwf	Lcd_Set_Cursor@z
  3300     07C3                     l3184:
  3301                           
  3302                           ;lcd.c: 57:         y = temp & 0x0F;
  3303     07C3  0827               	movf	Lcd_Set_Cursor@temp,w
  3304     07C4  390F               	andlw	15
  3305     07C5  00A6               	movwf	Lcd_Set_Cursor@y
  3306     07C6                     l3186:
  3307                           
  3308                           ;lcd.c: 58:         Lcd_Cmd(z);
  3309     07C6  0825               	movf	Lcd_Set_Cursor@z,w
  3310     07C7  120A  158A  2113  120A  118A  	fcall	_Lcd_Cmd
  3311     07CC                     l3188:
  3312                           
  3313                           ;lcd.c: 59:         Lcd_Cmd(y);
  3314     07CC  1283               	bcf	3,5	;RP0=0, select bank0
  3315     07CD  1303               	bcf	3,6	;RP1=0, select bank0
  3316     07CE  0826               	movf	Lcd_Set_Cursor@y,w
  3317     07CF  120A  158A  2113  120A  118A  	fcall	_Lcd_Cmd
  3318     07D4  2FD5               	goto	l41
  3319     07D5                     l37:
  3320     07D5                     l41:
  3321     07D5  0008               	return
  3322     07D6                     __end_of_Lcd_Set_Cursor:
  3323                           
  3324                           	psect	text6
  3325     0DFE                     __ptext6:	
  3326 ;; *************** function _setupINTOSC *****************
  3327 ;; Defined at:
  3328 ;;		line 10 in file "oscilador.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;  IRCF            1    wreg     unsigned char 
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;  IRCF            1    4[COMMON] unsigned char 
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  1    wreg      void 
  3335 ;; Registers used:
  3336 ;;		wreg, status,2, status,0
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3342 ;;      Params:         0       0       0       0       0
  3343 ;;      Locals:         1       0       0       0       0
  3344 ;;      Temps:          0       0       0       0       0
  3345 ;;      Totals:         1       0       0       0       0
  3346 ;;Total ram usage:        1 bytes
  3347 ;; Hardware stack levels used: 1
  3348 ;; Hardware stack levels required when called: 1
  3349 ;; This function calls:
  3350 ;;		Nothing
  3351 ;; This function is called by:
  3352 ;;		_main
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356     0DFE                     _setupINTOSC:	
  3357                           ;psect for function _setupINTOSC
  3358                           
  3359                           
  3360                           ;incstack = 0
  3361                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  3362                           ;setupINTOSC@IRCF stored from wreg
  3363     0DFE  00F4               	movwf	setupINTOSC@IRCF
  3364     0DFF                     l2576:
  3365                           
  3366                           ;oscilador.c: 11:     if (IRCF == 7){
  3367     0DFF  3007               	movlw	7
  3368     0E00  0674               	xorwf	setupINTOSC@IRCF,w
  3369     0E01  1D03               	btfss	3,2
  3370     0E02  2E04               	goto	u2321
  3371     0E03  2E05               	goto	u2320
  3372     0E04                     u2321:
  3373     0E04  2E09               	goto	l73
  3374     0E05                     u2320:
  3375     0E05                     l2578:
  3376                           
  3377                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
  3378     0E05  3070               	movlw	112
  3379     0E06  1683               	bsf	3,5	;RP0=1, select bank1
  3380     0E07  1303               	bcf	3,6	;RP1=0, select bank1
  3381     0E08  048F               	iorwf	15,f	;volatile
  3382     0E09                     l73:	
  3383                           ;oscilador.c: 13:     }
  3384                           
  3385                           
  3386                           ;oscilador.c: 14:     if (IRCF == 6){
  3387     0E09  3006               	movlw	6
  3388     0E0A  0674               	xorwf	setupINTOSC@IRCF,w
  3389     0E0B  1D03               	btfss	3,2
  3390     0E0C  2E0E               	goto	u2331
  3391     0E0D  2E0F               	goto	u2330
  3392     0E0E                     u2331:
  3393     0E0E  2E15               	goto	l74
  3394     0E0F                     u2330:
  3395     0E0F                     l2580:
  3396                           
  3397                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
  3398     0E0F  1683               	bsf	3,5	;RP0=1, select bank1
  3399     0E10  1303               	bcf	3,6	;RP1=0, select bank1
  3400     0E11  080F               	movf	15,w	;volatile
  3401     0E12  398F               	andlw	-113
  3402     0E13  3860               	iorlw	96
  3403     0E14  008F               	movwf	15	;volatile
  3404     0E15                     l74:	
  3405                           ;oscilador.c: 16:     }
  3406                           
  3407                           
  3408                           ;oscilador.c: 17:     if (IRCF == 5){
  3409     0E15  3005               	movlw	5
  3410     0E16  0674               	xorwf	setupINTOSC@IRCF,w
  3411     0E17  1D03               	btfss	3,2
  3412     0E18  2E1A               	goto	u2341
  3413     0E19  2E1B               	goto	u2340
  3414     0E1A                     u2341:
  3415     0E1A  2E21               	goto	l75
  3416     0E1B                     u2340:
  3417     0E1B                     l2582:
  3418                           
  3419                           ;oscilador.c: 18:         OSCCONbits.IRCF = 0b101;
  3420     0E1B  1683               	bsf	3,5	;RP0=1, select bank1
  3421     0E1C  1303               	bcf	3,6	;RP1=0, select bank1
  3422     0E1D  080F               	movf	15,w	;volatile
  3423     0E1E  398F               	andlw	-113
  3424     0E1F  3850               	iorlw	80
  3425     0E20  008F               	movwf	15	;volatile
  3426     0E21                     l75:	
  3427                           ;oscilador.c: 19:     }
  3428                           
  3429                           
  3430                           ;oscilador.c: 20:     if (IRCF == 4){
  3431     0E21  3004               	movlw	4
  3432     0E22  0674               	xorwf	setupINTOSC@IRCF,w
  3433     0E23  1D03               	btfss	3,2
  3434     0E24  2E26               	goto	u2351
  3435     0E25  2E27               	goto	u2350
  3436     0E26                     u2351:
  3437     0E26  2E2D               	goto	l76
  3438     0E27                     u2350:
  3439     0E27                     l2584:
  3440                           
  3441                           ;oscilador.c: 21:         OSCCONbits.IRCF = 0b100;
  3442     0E27  1683               	bsf	3,5	;RP0=1, select bank1
  3443     0E28  1303               	bcf	3,6	;RP1=0, select bank1
  3444     0E29  080F               	movf	15,w	;volatile
  3445     0E2A  398F               	andlw	-113
  3446     0E2B  3840               	iorlw	64
  3447     0E2C  008F               	movwf	15	;volatile
  3448     0E2D                     l76:	
  3449                           ;oscilador.c: 22:     }
  3450                           
  3451                           
  3452                           ;oscilador.c: 23:     if (IRCF == 3){
  3453     0E2D  3003               	movlw	3
  3454     0E2E  0674               	xorwf	setupINTOSC@IRCF,w
  3455     0E2F  1D03               	btfss	3,2
  3456     0E30  2E32               	goto	u2361
  3457     0E31  2E33               	goto	u2360
  3458     0E32                     u2361:
  3459     0E32  2E39               	goto	l77
  3460     0E33                     u2360:
  3461     0E33                     l2586:
  3462                           
  3463                           ;oscilador.c: 24:         OSCCONbits.IRCF = 0b011;
  3464     0E33  1683               	bsf	3,5	;RP0=1, select bank1
  3465     0E34  1303               	bcf	3,6	;RP1=0, select bank1
  3466     0E35  080F               	movf	15,w	;volatile
  3467     0E36  398F               	andlw	-113
  3468     0E37  3830               	iorlw	48
  3469     0E38  008F               	movwf	15	;volatile
  3470     0E39                     l77:	
  3471                           ;oscilador.c: 25:     }
  3472                           
  3473                           
  3474                           ;oscilador.c: 26:     if (IRCF == 2){
  3475     0E39  3002               	movlw	2
  3476     0E3A  0674               	xorwf	setupINTOSC@IRCF,w
  3477     0E3B  1D03               	btfss	3,2
  3478     0E3C  2E3E               	goto	u2371
  3479     0E3D  2E3F               	goto	u2370
  3480     0E3E                     u2371:
  3481     0E3E  2E45               	goto	l78
  3482     0E3F                     u2370:
  3483     0E3F                     l2588:
  3484                           
  3485                           ;oscilador.c: 27:         OSCCONbits.IRCF = 0b010;
  3486     0E3F  1683               	bsf	3,5	;RP0=1, select bank1
  3487     0E40  1303               	bcf	3,6	;RP1=0, select bank1
  3488     0E41  080F               	movf	15,w	;volatile
  3489     0E42  398F               	andlw	-113
  3490     0E43  3820               	iorlw	32
  3491     0E44  008F               	movwf	15	;volatile
  3492     0E45                     l78:	
  3493                           ;oscilador.c: 28:     }
  3494                           
  3495                           
  3496                           ;oscilador.c: 29:     if (IRCF == 1){
  3497     0E45  0374               	decf	setupINTOSC@IRCF,w
  3498     0E46  1D03               	btfss	3,2
  3499     0E47  2E49               	goto	u2381
  3500     0E48  2E4A               	goto	u2380
  3501     0E49                     u2381:
  3502     0E49  2E50               	goto	l79
  3503     0E4A                     u2380:
  3504     0E4A                     l2590:
  3505                           
  3506                           ;oscilador.c: 30:         OSCCONbits.IRCF = 0b001;
  3507     0E4A  1683               	bsf	3,5	;RP0=1, select bank1
  3508     0E4B  1303               	bcf	3,6	;RP1=0, select bank1
  3509     0E4C  080F               	movf	15,w	;volatile
  3510     0E4D  398F               	andlw	-113
  3511     0E4E  3810               	iorlw	16
  3512     0E4F  008F               	movwf	15	;volatile
  3513     0E50                     l79:	
  3514                           ;oscilador.c: 31:     }
  3515                           
  3516                           
  3517                           ;oscilador.c: 32:     if (IRCF == 0){
  3518     0E50  0874               	movf	setupINTOSC@IRCF,w
  3519     0E51  1D03               	btfss	3,2
  3520     0E52  2E54               	goto	u2391
  3521     0E53  2E55               	goto	u2390
  3522     0E54                     u2391:
  3523     0E54  2E59               	goto	l2594
  3524     0E55                     u2390:
  3525     0E55                     l2592:
  3526                           
  3527                           ;oscilador.c: 33:         OSCCONbits.IRCF = 0b000;
  3528     0E55  308F               	movlw	-113
  3529     0E56  1683               	bsf	3,5	;RP0=1, select bank1
  3530     0E57  1303               	bcf	3,6	;RP1=0, select bank1
  3531     0E58  058F               	andwf	15,f	;volatile
  3532     0E59                     l2594:
  3533                           
  3534                           ;oscilador.c: 36:     OSCCONbits.SCS = 1;
  3535     0E59  1683               	bsf	3,5	;RP0=1, select bank1
  3536     0E5A  1303               	bcf	3,6	;RP1=0, select bank1
  3537     0E5B  140F               	bsf	15,0	;volatile
  3538     0E5C                     l81:
  3539     0E5C  0008               	return
  3540     0E5D                     __end_of_setupINTOSC:
  3541                           
  3542                           	psect	text7
  3543     098F                     __ptext7:	
  3544 ;; *************** function _setup *****************
  3545 ;; Defined at:
  3546 ;;		line 184 in file "main.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;		None
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;		None
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  1    wreg      void 
  3553 ;; Registers used:
  3554 ;;		wreg, status,2, status,0, pclath, cstack
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3560 ;;      Params:         0       0       0       0       0
  3561 ;;      Locals:         0       0       0       0       0
  3562 ;;      Temps:          0       0       0       0       0
  3563 ;;      Totals:         0       0       0       0       0
  3564 ;;Total ram usage:        0 bytes
  3565 ;; Hardware stack levels used: 1
  3566 ;; Hardware stack levels required when called: 3
  3567 ;; This function calls:
  3568 ;;		_I2C_Master_Init
  3569 ;; This function is called by:
  3570 ;;		_main
  3571 ;; This function uses a non-reentrant model
  3572 ;;
  3573                           
  3574     098F                     _setup:	
  3575                           ;psect for function _setup
  3576                           
  3577     098F                     l3426:	
  3578                           ;incstack = 0
  3579                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  3580                           
  3581                           
  3582                           ;main.c: 186:     ANSEL = 0;
  3583     098F  1683               	bsf	3,5	;RP0=1, select bank3
  3584     0990  1703               	bsf	3,6	;RP1=1, select bank3
  3585     0991  0188               	clrf	8	;volatile
  3586                           
  3587                           ;main.c: 187:     ANSELH = 0;
  3588     0992  0189               	clrf	9	;volatile
  3589     0993                     l3428:
  3590                           
  3591                           ;main.c: 188:     TRISB = 0b00000111;
  3592     0993  3007               	movlw	7
  3593     0994  1683               	bsf	3,5	;RP0=1, select bank1
  3594     0995  1303               	bcf	3,6	;RP1=0, select bank1
  3595     0996  0086               	movwf	6	;volatile
  3596     0997                     l3430:
  3597                           
  3598                           ;main.c: 189:     TRISA = 0;
  3599     0997  0185               	clrf	5	;volatile
  3600     0998                     l3432:
  3601                           
  3602                           ;main.c: 190:     TRISD = 0;
  3603     0998  0188               	clrf	8	;volatile
  3604     0999                     l3434:
  3605                           
  3606                           ;main.c: 192:     PORTA = 0;
  3607     0999  1283               	bcf	3,5	;RP0=0, select bank0
  3608     099A  1303               	bcf	3,6	;RP1=0, select bank0
  3609     099B  0185               	clrf	5	;volatile
  3610     099C                     l3436:
  3611                           
  3612                           ;main.c: 193:     PORTB = 0;
  3613     099C  0186               	clrf	6	;volatile
  3614     099D                     l3438:
  3615                           
  3616                           ;main.c: 194:     PORTD = 0;
  3617     099D  0188               	clrf	8	;volatile
  3618     099E                     l3440:
  3619                           
  3620                           ;main.c: 195:     PORTE = 0;
  3621     099E  0189               	clrf	9	;volatile
  3622     099F                     l3442:
  3623                           
  3624                           ;main.c: 198:     INTCONbits.RBIE = 1;
  3625     099F  158B               	bsf	11,3	;volatile
  3626     09A0                     l3444:
  3627                           
  3628                           ;main.c: 199:     INTCONbits.RBIF = 0;
  3629     09A0  100B               	bcf	11,0	;volatile
  3630     09A1                     l3446:
  3631                           
  3632                           ;main.c: 200:     INTCONbits.GIE = 1;
  3633     09A1  178B               	bsf	11,7	;volatile
  3634     09A2                     l3448:
  3635                           
  3636                           ;main.c: 202:     WPUBbits.WPUB0 = 1;
  3637     09A2  1683               	bsf	3,5	;RP0=1, select bank1
  3638     09A3  1303               	bcf	3,6	;RP1=0, select bank1
  3639     09A4  1415               	bsf	21,0	;volatile
  3640     09A5                     l3450:
  3641                           
  3642                           ;main.c: 203:     WPUBbits.WPUB1 = 1;
  3643     09A5  1495               	bsf	21,1	;volatile
  3644     09A6                     l3452:
  3645                           
  3646                           ;main.c: 204:     IOCBbits.IOCB0 = 1;
  3647     09A6  1416               	bsf	22,0	;volatile
  3648     09A7                     l3454:
  3649                           
  3650                           ;main.c: 205:     IOCBbits.IOCB1 = 1;
  3651     09A7  1496               	bsf	22,1	;volatile
  3652     09A8                     l3456:
  3653                           
  3654                           ;main.c: 206:     WPUBbits.WPUB2 = 1;
  3655     09A8  1515               	bsf	21,2	;volatile
  3656     09A9                     l3458:
  3657                           
  3658                           ;main.c: 207:     IOCBbits.IOCB2 = 1;
  3659     09A9  1516               	bsf	22,2	;volatile
  3660     09AA                     l3460:
  3661                           
  3662                           ;main.c: 209:     OPTION_REGbits.nRBPU = 0;
  3663     09AA  1381               	bcf	1,7	;volatile
  3664     09AB                     l3462:
  3665                           
  3666                           ;main.c: 211:     I2C_Master_Init(100000);
  3667     09AB  3000               	movlw	0
  3668     09AC  1283               	bcf	3,5	;RP0=0, select bank0
  3669     09AD  1303               	bcf	3,6	;RP1=0, select bank0
  3670     09AE  00B0               	movwf	I2C_Master_Init@c+3
  3671     09AF  3001               	movlw	1
  3672     09B0  00AF               	movwf	I2C_Master_Init@c+2
  3673     09B1  3086               	movlw	134
  3674     09B2  00AE               	movwf	I2C_Master_Init@c+1
  3675     09B3  30A0               	movlw	160
  3676     09B4  00AD               	movwf	I2C_Master_Init@c
  3677     09B5  120A  158A  2220  120A  158A  	fcall	_I2C_Master_Init
  3678     09BA                     l271:
  3679     09BA  0008               	return
  3680     09BB                     __end_of_setup:
  3681                           
  3682                           	psect	text8
  3683     0A20                     __ptext8:	
  3684 ;; *************** function _I2C_Master_Init *****************
  3685 ;; Defined at:
  3686 ;;		line 16 in file "I2C.c"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;  c               4   13[BANK0 ] const unsigned long 
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;		None
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  1    wreg      void 
  3693 ;; Registers used:
  3694 ;;		wreg, status,2, status,0, pclath, cstack
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3700 ;;      Params:         0       4       0       0       0
  3701 ;;      Locals:         0       0       0       0       0
  3702 ;;      Temps:          0       4       0       0       0
  3703 ;;      Totals:         0       8       0       0       0
  3704 ;;Total ram usage:        8 bytes
  3705 ;; Hardware stack levels used: 1
  3706 ;; Hardware stack levels required when called: 2
  3707 ;; This function calls:
  3708 ;;		___lldiv
  3709 ;; This function is called by:
  3710 ;;		_setup
  3711 ;; This function uses a non-reentrant model
  3712 ;;
  3713                           
  3714     0A20                     _I2C_Master_Init:	
  3715                           ;psect for function _I2C_Master_Init
  3716                           
  3717     0A20                     l3226:	
  3718                           ;incstack = 0
  3719                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3720                           
  3721                           
  3722                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  3723     0A20  3028               	movlw	40
  3724     0A21  1283               	bcf	3,5	;RP0=0, select bank0
  3725     0A22  1303               	bcf	3,6	;RP1=0, select bank0
  3726     0A23  0094               	movwf	20	;volatile
  3727     0A24                     l3228:
  3728                           
  3729                           ;I2C.c: 19:     SSPCON2 = 0;
  3730     0A24  1683               	bsf	3,5	;RP0=1, select bank1
  3731     0A25  1303               	bcf	3,6	;RP1=0, select bank1
  3732     0A26  0191               	clrf	17	;volatile
  3733     0A27                     l3230:
  3734                           
  3735                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  3736     0A27  1283               	bcf	3,5	;RP0=0, select bank0
  3737     0A28  1303               	bcf	3,6	;RP1=0, select bank0
  3738     0A29  082D               	movf	I2C_Master_Init@c,w
  3739     0A2A  00B1               	movwf	??_I2C_Master_Init
  3740     0A2B  082E               	movf	I2C_Master_Init@c+1,w
  3741     0A2C  00B2               	movwf	??_I2C_Master_Init+1
  3742     0A2D  082F               	movf	I2C_Master_Init@c+2,w
  3743     0A2E  00B3               	movwf	??_I2C_Master_Init+2
  3744     0A2F  0830               	movf	I2C_Master_Init@c+3,w
  3745     0A30  00B4               	movwf	??_I2C_Master_Init+3
  3746     0A31  3002               	movlw	2
  3747     0A32                     u3015:
  3748     0A32  1003               	clrc
  3749     0A33  0DB1               	rlf	??_I2C_Master_Init,f
  3750     0A34  0DB2               	rlf	??_I2C_Master_Init+1,f
  3751     0A35  0DB3               	rlf	??_I2C_Master_Init+2,f
  3752     0A36  0DB4               	rlf	??_I2C_Master_Init+3,f
  3753     0A37                     u3010:
  3754     0A37  3EFF               	addlw	-1
  3755     0A38  1D03               	skipz
  3756     0A39  2A32               	goto	u3015
  3757     0A3A  0834               	movf	??_I2C_Master_Init+3,w
  3758     0A3B  00A3               	movwf	___lldiv@divisor+3
  3759     0A3C  0833               	movf	??_I2C_Master_Init+2,w
  3760     0A3D  00A2               	movwf	___lldiv@divisor+2
  3761     0A3E  0832               	movf	??_I2C_Master_Init+1,w
  3762     0A3F  00A1               	movwf	___lldiv@divisor+1
  3763     0A40  0831               	movf	??_I2C_Master_Init,w
  3764     0A41  00A0               	movwf	___lldiv@divisor
  3765     0A42  3000               	movlw	0
  3766     0A43  00A7               	movwf	___lldiv@dividend+3
  3767     0A44  307A               	movlw	122
  3768     0A45  00A6               	movwf	___lldiv@dividend+2
  3769     0A46  3012               	movlw	18
  3770     0A47  00A5               	movwf	___lldiv@dividend+1
  3771     0A48  3000               	movlw	0
  3772     0A49  00A4               	movwf	___lldiv@dividend
  3773     0A4A  120A  158A  26C0  120A  158A  	fcall	___lldiv
  3774     0A4F  1283               	bcf	3,5	;RP0=0, select bank0
  3775     0A50  1303               	bcf	3,6	;RP1=0, select bank0
  3776     0A51  0820               	movf	?___lldiv,w
  3777     0A52  3EFF               	addlw	255
  3778     0A53  1683               	bsf	3,5	;RP0=1, select bank1
  3779     0A54  1303               	bcf	3,6	;RP1=0, select bank1
  3780     0A55  0093               	movwf	19	;volatile
  3781     0A56                     l3232:
  3782                           
  3783                           ;I2C.c: 21:     SSPSTAT = 0;
  3784     0A56  0194               	clrf	20	;volatile
  3785     0A57                     l3234:
  3786                           
  3787                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  3788     0A57  1587               	bsf	7,3	;volatile
  3789     0A58                     l3236:
  3790                           
  3791                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  3792     0A58  1607               	bsf	7,4	;volatile
  3793     0A59                     l327:
  3794     0A59  0008               	return
  3795     0A5A                     __end_of_I2C_Master_Init:
  3796                           
  3797                           	psect	text9
  3798     0EC0                     __ptext9:	
  3799 ;; *************** function ___lldiv *****************
  3800 ;; Defined at:
  3801 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  divisor         4    0[BANK0 ] unsigned long 
  3804 ;;  dividend        4    4[BANK0 ] unsigned long 
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;  quotient        4    8[BANK0 ] unsigned long 
  3807 ;;  counter         1   12[BANK0 ] unsigned char 
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  4    0[BANK0 ] unsigned long 
  3810 ;; Registers used:
  3811 ;;		wreg, status,2, status,0
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3817 ;;      Params:         0       8       0       0       0
  3818 ;;      Locals:         0       5       0       0       0
  3819 ;;      Temps:          1       0       0       0       0
  3820 ;;      Totals:         1      13       0       0       0
  3821 ;;Total ram usage:       14 bytes
  3822 ;; Hardware stack levels used: 1
  3823 ;; Hardware stack levels required when called: 1
  3824 ;; This function calls:
  3825 ;;		Nothing
  3826 ;; This function is called by:
  3827 ;;		_I2C_Master_Init
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831     0EC0                     ___lldiv:	
  3832                           ;psect for function ___lldiv
  3833                           
  3834     0EC0                     l3098:	
  3835                           ;incstack = 0
  3836                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3837                           
  3838     0EC0  3000               	movlw	0
  3839     0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  3840     0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  3841     0EC3  00AB               	movwf	___lldiv@quotient+3
  3842     0EC4  3000               	movlw	0
  3843     0EC5  00AA               	movwf	___lldiv@quotient+2
  3844     0EC6  3000               	movlw	0
  3845     0EC7  00A9               	movwf	___lldiv@quotient+1
  3846     0EC8  3000               	movlw	0
  3847     0EC9  00A8               	movwf	___lldiv@quotient
  3848     0ECA  0823               	movf	___lldiv@divisor+3,w
  3849     0ECB  0422               	iorwf	___lldiv@divisor+2,w
  3850     0ECC  0421               	iorwf	___lldiv@divisor+1,w
  3851     0ECD  0420               	iorwf	___lldiv@divisor,w
  3852     0ECE  1903               	skipnz
  3853     0ECF  2ED1               	goto	u2751
  3854     0ED0  2ED2               	goto	u2750
  3855     0ED1                     u2751:
  3856     0ED1  2F1F               	goto	l3118
  3857     0ED2                     u2750:
  3858     0ED2                     l3100:
  3859     0ED2  01AC               	clrf	___lldiv@counter
  3860     0ED3  0AAC               	incf	___lldiv@counter,f
  3861     0ED4  2EE2               	goto	l3104
  3862     0ED5                     l3102:
  3863     0ED5  3001               	movlw	1
  3864     0ED6  00F4               	movwf	??___lldiv
  3865     0ED7                     u2765:
  3866     0ED7  1003               	clrc
  3867     0ED8  0DA0               	rlf	___lldiv@divisor,f
  3868     0ED9  0DA1               	rlf	___lldiv@divisor+1,f
  3869     0EDA  0DA2               	rlf	___lldiv@divisor+2,f
  3870     0EDB  0DA3               	rlf	___lldiv@divisor+3,f
  3871     0EDC  0BF4               	decfsz	??___lldiv,f
  3872     0EDD  2ED7               	goto	u2765
  3873     0EDE  3001               	movlw	1
  3874     0EDF  00F4               	movwf	??___lldiv
  3875     0EE0  0874               	movf	??___lldiv,w
  3876     0EE1  07AC               	addwf	___lldiv@counter,f
  3877     0EE2                     l3104:
  3878     0EE2  1FA3               	btfss	___lldiv@divisor+3,7
  3879     0EE3  2EE5               	goto	u2771
  3880     0EE4  2EE6               	goto	u2770
  3881     0EE5                     u2771:
  3882     0EE5  2ED5               	goto	l3102
  3883     0EE6                     u2770:
  3884     0EE6                     l3106:
  3885     0EE6  3001               	movlw	1
  3886     0EE7  00F4               	movwf	??___lldiv
  3887     0EE8                     u2785:
  3888     0EE8  1003               	clrc
  3889     0EE9  0DA8               	rlf	___lldiv@quotient,f
  3890     0EEA  0DA9               	rlf	___lldiv@quotient+1,f
  3891     0EEB  0DAA               	rlf	___lldiv@quotient+2,f
  3892     0EEC  0DAB               	rlf	___lldiv@quotient+3,f
  3893     0EED  0BF4               	decfsz	??___lldiv,f
  3894     0EEE  2EE8               	goto	u2785
  3895     0EEF                     l3108:
  3896     0EEF  0823               	movf	___lldiv@divisor+3,w
  3897     0EF0  0227               	subwf	___lldiv@dividend+3,w
  3898     0EF1  1D03               	skipz
  3899     0EF2  2EFD               	goto	u2795
  3900     0EF3  0822               	movf	___lldiv@divisor+2,w
  3901     0EF4  0226               	subwf	___lldiv@dividend+2,w
  3902     0EF5  1D03               	skipz
  3903     0EF6  2EFD               	goto	u2795
  3904     0EF7  0821               	movf	___lldiv@divisor+1,w
  3905     0EF8  0225               	subwf	___lldiv@dividend+1,w
  3906     0EF9  1D03               	skipz
  3907     0EFA  2EFD               	goto	u2795
  3908     0EFB  0820               	movf	___lldiv@divisor,w
  3909     0EFC  0224               	subwf	___lldiv@dividend,w
  3910     0EFD                     u2795:
  3911     0EFD  1C03               	skipc
  3912     0EFE  2F00               	goto	u2791
  3913     0EFF  2F01               	goto	u2790
  3914     0F00                     u2791:
  3915     0F00  2F10               	goto	l3114
  3916     0F01                     u2790:
  3917     0F01                     l3110:
  3918     0F01  0820               	movf	___lldiv@divisor,w
  3919     0F02  02A4               	subwf	___lldiv@dividend,f
  3920     0F03  0821               	movf	___lldiv@divisor+1,w
  3921     0F04  1C03               	skipc
  3922     0F05  0F21               	incfsz	___lldiv@divisor+1,w
  3923     0F06  02A5               	subwf	___lldiv@dividend+1,f
  3924     0F07  0822               	movf	___lldiv@divisor+2,w
  3925     0F08  1C03               	skipc
  3926     0F09  0F22               	incfsz	___lldiv@divisor+2,w
  3927     0F0A  02A6               	subwf	___lldiv@dividend+2,f
  3928     0F0B  0823               	movf	___lldiv@divisor+3,w
  3929     0F0C  1C03               	skipc
  3930     0F0D  0F23               	incfsz	___lldiv@divisor+3,w
  3931     0F0E  02A7               	subwf	___lldiv@dividend+3,f
  3932     0F0F                     l3112:
  3933     0F0F  1428               	bsf	___lldiv@quotient,0
  3934     0F10                     l3114:
  3935     0F10  3001               	movlw	1
  3936     0F11                     u2805:
  3937     0F11  1003               	clrc
  3938     0F12  0CA3               	rrf	___lldiv@divisor+3,f
  3939     0F13  0CA2               	rrf	___lldiv@divisor+2,f
  3940     0F14  0CA1               	rrf	___lldiv@divisor+1,f
  3941     0F15  0CA0               	rrf	___lldiv@divisor,f
  3942     0F16  3EFF               	addlw	-1
  3943     0F17  1D03               	skipz
  3944     0F18  2F11               	goto	u2805
  3945     0F19                     l3116:
  3946     0F19  3001               	movlw	1
  3947     0F1A  02AC               	subwf	___lldiv@counter,f
  3948     0F1B  1D03               	btfss	3,2
  3949     0F1C  2F1E               	goto	u2811
  3950     0F1D  2F1F               	goto	u2810
  3951     0F1E                     u2811:
  3952     0F1E  2EE6               	goto	l3106
  3953     0F1F                     u2810:
  3954     0F1F                     l3118:
  3955     0F1F  082B               	movf	___lldiv@quotient+3,w
  3956     0F20  00A3               	movwf	?___lldiv+3
  3957     0F21  082A               	movf	___lldiv@quotient+2,w
  3958     0F22  00A2               	movwf	?___lldiv+2
  3959     0F23  0829               	movf	___lldiv@quotient+1,w
  3960     0F24  00A1               	movwf	?___lldiv+1
  3961     0F25  0828               	movf	___lldiv@quotient,w
  3962     0F26  00A0               	movwf	?___lldiv
  3963     0F27                     l602:
  3964     0F27  0008               	return
  3965     0F28                     __end_of___lldiv:
  3966                           
  3967                           	psect	text10
  3968     0424                     __ptext10:	
  3969 ;; *************** function _modoboton *****************
  3970 ;; Defined at:
  3971 ;;		line 274 in file "main.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;		None
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;		None
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  1    wreg      void 
  3978 ;; Registers used:
  3979 ;;		wreg, status,2, status,0, pclath, cstack
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3985 ;;      Params:         0       0       0       0       0
  3986 ;;      Locals:         0       0       0       0       0
  3987 ;;      Temps:          0       2       0       0       0
  3988 ;;      Totals:         0       2       0       0       0
  3989 ;;Total ram usage:        2 bytes
  3990 ;; Hardware stack levels used: 1
  3991 ;; Hardware stack levels required when called: 3
  3992 ;; This function calls:
  3993 ;;		_I2C_Master_Start
  3994 ;;		_I2C_Master_Stop
  3995 ;;		_I2C_Master_Write
  3996 ;;		_verificacion
  3997 ;; This function is called by:
  3998 ;;		_main
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002     0424                     _modoboton:	
  4003                           ;psect for function _modoboton
  4004                           
  4005     0424                     l3588:	
  4006                           ;incstack = 0
  4007                           ; Regs used in _modoboton: [wreg+status,2+status,0+pclath+cstack]
  4008                           
  4009                           
  4010                           ;main.c: 275:     if (modo == 1){
  4011     0424  1283               	bcf	3,5	;RP0=0, select bank0
  4012     0425  1303               	bcf	3,6	;RP1=0, select bank0
  4013     0426  036F               	decf	_modo,w
  4014     0427  1D03               	btfss	3,2
  4015     0428  2C2A               	goto	u3391
  4016     0429  2C2B               	goto	u3390
  4017     042A                     u3391:
  4018     042A  2C5D               	goto	l3604
  4019     042B                     u3390:
  4020     042B                     l3590:
  4021                           
  4022                           ;main.c: 276:         minutos = cambio;
  4023     042B  0879               	movf	_cambio,w
  4024     042C  00EC               	movwf	_minutos
  4025     042D                     l3592:
  4026                           
  4027                           ;main.c: 277:         verificacion();
  4028     042D  120A  118A  27D6  120A  118A  	fcall	_verificacion
  4029     0432                     l3594:
  4030                           
  4031                           ;main.c: 279:         I2C_Master_Start();
  4032     0432  120A  158A  20C6  120A  118A  	fcall	_I2C_Master_Start
  4033     0437                     l3596:
  4034                           
  4035                           ;main.c: 280:         I2C_Master_Write(0xD0);
  4036     0437  30D0               	movlw	208
  4037     0438  00F4               	movwf	I2C_Master_Write@d
  4038     0439  3000               	movlw	0
  4039     043A  00F5               	movwf	I2C_Master_Write@d+1
  4040     043B  120A  158A  20D8  120A  118A  	fcall	_I2C_Master_Write
  4041     0440                     l3598:
  4042                           
  4043                           ;main.c: 281:         I2C_Master_Write(0x01);
  4044     0440  3001               	movlw	1
  4045     0441  00F4               	movwf	I2C_Master_Write@d
  4046     0442  3000               	movlw	0
  4047     0443  00F5               	movwf	I2C_Master_Write@d+1
  4048     0444  120A  158A  20D8  120A  118A  	fcall	_I2C_Master_Write
  4049     0449                     l3600:
  4050                           
  4051                           ;main.c: 282:         I2C_Master_Write(minutos);
  4052     0449  1283               	bcf	3,5	;RP0=0, select bank0
  4053     044A  1303               	bcf	3,6	;RP1=0, select bank0
  4054     044B  086C               	movf	_minutos,w
  4055     044C  00A0               	movwf	??_modoboton
  4056     044D  01A1               	clrf	??_modoboton+1
  4057     044E  0820               	movf	??_modoboton,w
  4058     044F  00F4               	movwf	I2C_Master_Write@d
  4059     0450  0821               	movf	??_modoboton+1,w
  4060     0451  00F5               	movwf	I2C_Master_Write@d+1
  4061     0452  120A  158A  20D8  120A  118A  	fcall	_I2C_Master_Write
  4062     0457                     l3602:
  4063                           
  4064                           ;main.c: 283:         I2C_Master_Stop();
  4065     0457  120A  158A  20CF  120A  118A  	fcall	_I2C_Master_Stop
  4066                           
  4067                           ;main.c: 284:     }
  4068     045C  2D36               	goto	l288
  4069     045D                     l3604:
  4070     045D  3002               	movlw	2
  4071     045E  066F               	xorwf	_modo,w
  4072     045F  1D03               	btfss	3,2
  4073     0460  2C62               	goto	u3401
  4074     0461  2C63               	goto	u3400
  4075     0462                     u3401:
  4076     0462  2C9A               	goto	l3622
  4077     0463                     u3400:
  4078     0463                     l3606:
  4079                           
  4080                           ;main.c: 286:         horas = cambio;
  4081     0463  0879               	movf	_cambio,w
  4082     0464  00EB               	movwf	_horas
  4083     0465                     l3608:
  4084                           
  4085                           ;main.c: 287:         verificacion();
  4086     0465  120A  118A  27D6  120A  118A  	fcall	_verificacion
  4087     046A                     l3610:
  4088                           
  4089                           ;main.c: 288:         I2C_Master_Start();
  4090     046A  120A  158A  20C6  120A  118A  	fcall	_I2C_Master_Start
  4091     046F                     l3612:
  4092                           
  4093                           ;main.c: 289:         I2C_Master_Write(0xD0);
  4094     046F  30D0               	movlw	208
  4095     0470  00F4               	movwf	I2C_Master_Write@d
  4096     0471  3000               	movlw	0
  4097     0472  00F5               	movwf	I2C_Master_Write@d+1
  4098     0473  120A  158A  20D8  120A  118A  	fcall	_I2C_Master_Write
  4099     0478                     l3614:
  4100                           
  4101                           ;main.c: 290:         I2C_Master_Write(0x02);
  4102     0478  3002               	movlw	2
  4103     0479  00F4               	movwf	I2C_Master_Write@d
  4104     047A  3000               	movlw	0
  4105     047B  00F5               	movwf	I2C_Master_Write@d+1
  4106     047C  120A  158A  20D8  120A  118A  	fcall	_I2C_Master_Write
  4107     0481                     l3616:
  4108                           
  4109                           ;main.c: 291:         I2C_Master_Write(horas);
  4110     0481  1283               	bcf	3,5	;RP0=0, select bank0
  4111     0482  1303               	bcf	3,6	;RP1=0, select bank0
  4112     0483  086B               	movf	_horas,w
  4113     0484  00A0               	movwf	??_modoboton
  4114     0485  01A1               	clrf	??_modoboton+1
  4115     0486  0820               	movf	??_modoboton,w
  4116     0487  00F4               	movwf	I2C_Master_Write@d
  4117     0488  0821               	movf	??_modoboton+1,w
  4118     0489  00F5               	movwf	I2C_Master_Write@d+1
  4119     048A  120A  158A  20D8  120A  118A  	fcall	_I2C_Master_Write
  4120     048F                     l3618:
  4121                           
  4122                           ;main.c: 292:         I2C_Master_Stop();
  4123     048F  120A  158A  20CF  120A  118A  	fcall	_I2C_Master_Stop
  4124     0494                     l3620:
  4125                           
  4126                           ;main.c: 293:         verificacion();
  4127     0494  120A  118A  27D6  120A  118A  	fcall	_verificacion
  4128                           
  4129                           ;main.c: 294:     }
  4130     0499  2D36               	goto	l288
  4131     049A                     l3622:
  4132     049A  3003               	movlw	3
  4133     049B  066F               	xorwf	_modo,w
  4134     049C  1D03               	btfss	3,2
  4135     049D  2C9F               	goto	u3411
  4136     049E  2CA0               	goto	u3410
  4137     049F                     u3411:
  4138     049F  2CCD               	goto	l3638
  4139     04A0                     u3410:
  4140     04A0                     l3624:
  4141                           
  4142                           ;main.c: 296:         dias = cambio;
  4143     04A0  0879               	movf	_cambio,w
  4144     04A1  00EA               	movwf	_dias
  4145     04A2                     l3626:
  4146                           
  4147                           ;main.c: 297:         verificacion();
  4148     04A2  120A  118A  27D6  120A  118A  	fcall	_verificacion
  4149     04A7                     l3628:
  4150                           
  4151                           ;main.c: 298:         I2C_Master_Start();
  4152     04A7  120A  158A  20C6  120A  118A  	fcall	_I2C_Master_Start
  4153     04AC                     l3630:
  4154                           
  4155                           ;main.c: 299:         I2C_Master_Write(0xD0);
  4156     04AC  30D0               	movlw	208
  4157     04AD  00F4               	movwf	I2C_Master_Write@d
  4158     04AE  3000               	movlw	0
  4159     04AF  00F5               	movwf	I2C_Master_Write@d+1
  4160     04B0  120A  158A  20D8  120A  118A  	fcall	_I2C_Master_Write
  4161     04B5                     l3632:
  4162                           
  4163                           ;main.c: 300:         I2C_Master_Write(0x04);
  4164     04B5  3004               	movlw	4
  4165     04B6  00F4               	movwf	I2C_Master_Write@d
  4166     04B7  3000               	movlw	0
  4167     04B8  00F5               	movwf	I2C_Master_Write@d+1
  4168     04B9  120A  158A  20D8  120A  118A  	fcall	_I2C_Master_Write
  4169     04BE                     l3634:
  4170                           
  4171                           ;main.c: 301:         I2C_Master_Write(dias);
  4172     04BE  1283               	bcf	3,5	;RP0=0, select bank0
  4173     04BF  1303               	bcf	3,6	;RP1=0, select bank0
  4174     04C0  086A               	movf	_dias,w
  4175     04C1  00A0               	movwf	??_modoboton
  4176     04C2  01A1               	clrf	??_modoboton+1
  4177     04C3  0820               	movf	??_modoboton,w
  4178     04C4  00F4               	movwf	I2C_Master_Write@d
  4179     04C5  0821               	movf	??_modoboton+1,w
  4180     04C6  00F5               	movwf	I2C_Master_Write@d+1
  4181     04C7  120A  158A  20D8  120A  118A  	fcall	_I2C_Master_Write
  4182     04CC  2C57               	goto	l3602
  4183     04CD                     l3638:
  4184     04CD  3004               	movlw	4
  4185     04CE  066F               	xorwf	_modo,w
  4186     04CF  1D03               	btfss	3,2
  4187     04D0  2CD2               	goto	u3421
  4188     04D1  2CD3               	goto	u3420
  4189     04D2                     u3421:
  4190     04D2  2D00               	goto	l3654
  4191     04D3                     u3420:
  4192     04D3                     l3640:
  4193                           
  4194                           ;main.c: 305:         meses = cambio;
  4195     04D3  0879               	movf	_cambio,w
  4196     04D4  00E9               	movwf	_meses
  4197     04D5                     l3642:
  4198                           
  4199                           ;main.c: 306:         verificacion();
  4200     04D5  120A  118A  27D6  120A  118A  	fcall	_verificacion
  4201     04DA                     l3644:
  4202                           
  4203                           ;main.c: 307:         I2C_Master_Start();
  4204     04DA  120A  158A  20C6  120A  118A  	fcall	_I2C_Master_Start
  4205     04DF                     l3646:
  4206                           
  4207                           ;main.c: 308:         I2C_Master_Write(0xD0);
  4208     04DF  30D0               	movlw	208
  4209     04E0  00F4               	movwf	I2C_Master_Write@d
  4210     04E1  3000               	movlw	0
  4211     04E2  00F5               	movwf	I2C_Master_Write@d+1
  4212     04E3  120A  158A  20D8  120A  118A  	fcall	_I2C_Master_Write
  4213     04E8                     l3648:
  4214                           
  4215                           ;main.c: 309:         I2C_Master_Write(0x05);
  4216     04E8  3005               	movlw	5
  4217     04E9  00F4               	movwf	I2C_Master_Write@d
  4218     04EA  3000               	movlw	0
  4219     04EB  00F5               	movwf	I2C_Master_Write@d+1
  4220     04EC  120A  158A  20D8  120A  118A  	fcall	_I2C_Master_Write
  4221     04F1                     l3650:
  4222                           
  4223                           ;main.c: 310:         I2C_Master_Write(meses);
  4224     04F1  1283               	bcf	3,5	;RP0=0, select bank0
  4225     04F2  1303               	bcf	3,6	;RP1=0, select bank0
  4226     04F3  0869               	movf	_meses,w
  4227     04F4  00A0               	movwf	??_modoboton
  4228     04F5  01A1               	clrf	??_modoboton+1
  4229     04F6  0820               	movf	??_modoboton,w
  4230     04F7  00F4               	movwf	I2C_Master_Write@d
  4231     04F8  0821               	movf	??_modoboton+1,w
  4232     04F9  00F5               	movwf	I2C_Master_Write@d+1
  4233     04FA  120A  158A  20D8  120A  118A  	fcall	_I2C_Master_Write
  4234     04FF  2C57               	goto	l3602
  4235     0500                     l3654:
  4236     0500  3005               	movlw	5
  4237     0501  066F               	xorwf	_modo,w
  4238     0502  1D03               	btfss	3,2
  4239     0503  2D05               	goto	u3431
  4240     0504  2D06               	goto	u3430
  4241     0505                     u3431:
  4242     0505  2D2E               	goto	l3668
  4243     0506                     u3430:
  4244     0506                     l3656:
  4245                           
  4246                           ;main.c: 314:         anos = cambio;
  4247     0506  0879               	movf	_cambio,w
  4248     0507  00E8               	movwf	_anos
  4249     0508                     l3658:
  4250                           
  4251                           ;main.c: 315:         I2C_Master_Start();
  4252     0508  120A  158A  20C6  120A  118A  	fcall	_I2C_Master_Start
  4253     050D                     l3660:
  4254                           
  4255                           ;main.c: 316:         I2C_Master_Write(0xD0);
  4256     050D  30D0               	movlw	208
  4257     050E  00F4               	movwf	I2C_Master_Write@d
  4258     050F  3000               	movlw	0
  4259     0510  00F5               	movwf	I2C_Master_Write@d+1
  4260     0511  120A  158A  20D8  120A  118A  	fcall	_I2C_Master_Write
  4261     0516                     l3662:
  4262                           
  4263                           ;main.c: 317:         I2C_Master_Write(0x06);
  4264     0516  3006               	movlw	6
  4265     0517  00F4               	movwf	I2C_Master_Write@d
  4266     0518  3000               	movlw	0
  4267     0519  00F5               	movwf	I2C_Master_Write@d+1
  4268     051A  120A  158A  20D8  120A  118A  	fcall	_I2C_Master_Write
  4269     051F                     l3664:
  4270                           
  4271                           ;main.c: 318:         I2C_Master_Write(anos);
  4272     051F  1283               	bcf	3,5	;RP0=0, select bank0
  4273     0520  1303               	bcf	3,6	;RP1=0, select bank0
  4274     0521  0868               	movf	_anos,w
  4275     0522  00A0               	movwf	??_modoboton
  4276     0523  01A1               	clrf	??_modoboton+1
  4277     0524  0820               	movf	??_modoboton,w
  4278     0525  00F4               	movwf	I2C_Master_Write@d
  4279     0526  0821               	movf	??_modoboton+1,w
  4280     0527  00F5               	movwf	I2C_Master_Write@d+1
  4281     0528  120A  158A  20D8  120A  118A  	fcall	_I2C_Master_Write
  4282     052D  2C57               	goto	l3602
  4283     052E                     l3668:
  4284     052E  3006               	movlw	6
  4285     052F  026F               	subwf	_modo,w
  4286     0530  1C03               	skipc
  4287     0531  2D33               	goto	u3441
  4288     0532  2D34               	goto	u3440
  4289     0533                     u3441:
  4290     0533  2D36               	goto	l282
  4291     0534                     u3440:
  4292     0534                     l3670:
  4293                           
  4294                           ;main.c: 322:         modo = 0;
  4295     0534  01EF               	clrf	_modo
  4296     0535  2D36               	goto	l288
  4297     0536                     l282:
  4298     0536                     l288:
  4299     0536  0008               	return
  4300     0537                     __end_of_modoboton:
  4301                           
  4302                           	psect	text11
  4303     07D6                     __ptext11:	
  4304 ;; *************** function _verificacion *****************
  4305 ;; Defined at:
  4306 ;;		line 326 in file "main.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;		None
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;		None
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1    wreg      void 
  4313 ;; Registers used:
  4314 ;;		wreg, status,2
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4320 ;;      Params:         0       0       0       0       0
  4321 ;;      Locals:         0       0       0       0       0
  4322 ;;      Temps:          0       0       0       0       0
  4323 ;;      Totals:         0       0       0       0       0
  4324 ;;Total ram usage:        0 bytes
  4325 ;; Hardware stack levels used: 1
  4326 ;; Hardware stack levels required when called: 1
  4327 ;; This function calls:
  4328 ;;		Nothing
  4329 ;; This function is called by:
  4330 ;;		_modoboton
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           
  4334     07D6                     _verificacion:	
  4335                           ;psect for function _verificacion
  4336                           
  4337     07D6                     l2384:	
  4338                           ;incstack = 0
  4339                           ; Regs used in _verificacion: [wreg+status,2]
  4340                           
  4341                           
  4342                           ;main.c: 327:     if (minutos > 59){
  4343     07D6  303C               	movlw	60
  4344     07D7  1283               	bcf	3,5	;RP0=0, select bank0
  4345     07D8  1303               	bcf	3,6	;RP1=0, select bank0
  4346     07D9  026C               	subwf	_minutos,w
  4347     07DA  1C03               	skipc
  4348     07DB  2FDD               	goto	u1891
  4349     07DC  2FDE               	goto	u1890
  4350     07DD                     u1891:
  4351     07DD  2FE1               	goto	l2388
  4352     07DE                     u1890:
  4353     07DE                     l2386:
  4354                           
  4355                           ;main.c: 328:         minutos = 0;
  4356     07DE  01EC               	clrf	_minutos
  4357                           
  4358                           ;main.c: 329:         cambio = 0;
  4359     07DF  01F9               	clrf	_cambio
  4360                           
  4361                           ;main.c: 330:     }
  4362     07E0  2FFC               	goto	l298
  4363     07E1                     l2388:
  4364     07E1  300C               	movlw	12
  4365     07E2  026B               	subwf	_horas,w
  4366     07E3  1C03               	skipc
  4367     07E4  2FE6               	goto	u1901
  4368     07E5  2FE7               	goto	u1900
  4369     07E6                     u1901:
  4370     07E6  2FEA               	goto	l2392
  4371     07E7                     u1900:
  4372     07E7                     l2390:
  4373                           
  4374                           ;main.c: 332:         horas = 0;
  4375     07E7  01EB               	clrf	_horas
  4376                           
  4377                           ;main.c: 333:         cambio = 0;
  4378     07E8  01F9               	clrf	_cambio
  4379                           
  4380                           ;main.c: 334:     }
  4381     07E9  2FFC               	goto	l298
  4382     07EA                     l2392:
  4383     07EA  300D               	movlw	13
  4384     07EB  0269               	subwf	_meses,w
  4385     07EC  1C03               	skipc
  4386     07ED  2FEF               	goto	u1911
  4387     07EE  2FF0               	goto	u1910
  4388     07EF                     u1911:
  4389     07EF  2FF3               	goto	l2396
  4390     07F0                     u1910:
  4391     07F0                     l2394:
  4392                           
  4393                           ;main.c: 336:         meses = 0;
  4394     07F0  01E9               	clrf	_meses
  4395                           
  4396                           ;main.c: 337:         cambio = 0;
  4397     07F1  01F9               	clrf	_cambio
  4398                           
  4399                           ;main.c: 338:     }
  4400     07F2  2FFC               	goto	l298
  4401     07F3                     l2396:
  4402     07F3  3020               	movlw	32
  4403     07F4  026A               	subwf	_dias,w
  4404     07F5  1C03               	skipc
  4405     07F6  2FF8               	goto	u1921
  4406     07F7  2FF9               	goto	u1920
  4407     07F8                     u1921:
  4408     07F8  2FFC               	goto	l294
  4409     07F9                     u1920:
  4410     07F9                     l2398:
  4411                           
  4412                           ;main.c: 340:         dias = 0;
  4413     07F9  01EA               	clrf	_dias
  4414                           
  4415                           ;main.c: 341:         cambio = 0;
  4416     07FA  01F9               	clrf	_cambio
  4417     07FB  2FFC               	goto	l298
  4418     07FC                     l294:
  4419     07FC                     l298:
  4420     07FC  0008               	return
  4421     07FD                     __end_of_verificacion:
  4422                           
  4423                           	psect	text12
  4424     05FA                     __ptext12:	
  4425 ;; *************** function _map *****************
  4426 ;; Defined at:
  4427 ;;		line 10 in file "mapf.c"
  4428 ;; Parameters:    Size  Location     Type
  4429 ;;  x               4   26[BANK0 ] long 
  4430 ;;  eMin            4   30[BANK0 ] long 
  4431 ;;  eMax            4   34[BANK0 ] long 
  4432 ;;  sMin            4   38[BANK0 ] long 
  4433 ;;  sMax            4   42[BANK0 ] long 
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;		None
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  4   26[BANK0 ] long 
  4438 ;; Registers used:
  4439 ;;		wreg, status,2, status,0, pclath, cstack
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4445 ;;      Params:         0      20       0       0       0
  4446 ;;      Locals:         0       0       0       0       0
  4447 ;;      Temps:          0      16       0       0       0
  4448 ;;      Totals:         0      36       0       0       0
  4449 ;;Total ram usage:       36 bytes
  4450 ;; Hardware stack levels used: 1
  4451 ;; Hardware stack levels required when called: 2
  4452 ;; This function calls:
  4453 ;;		___aldiv
  4454 ;;		___lmul
  4455 ;; This function is called by:
  4456 ;;		_main
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460     05FA                     _map:	
  4461                           ;psect for function _map
  4462                           
  4463     05FA                     l3422:	
  4464                           ;incstack = 0
  4465                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  4466                           
  4467                           
  4468                           ;mapf.c: 10: long map(long x, long eMin, long eMax, long sMin, long sMax);mapf.c: 11: {;
      +                          mapf.c: 12:   return(x -eMin)*(sMax-sMin)/(eMax-eMin)+sMin;
  4469     05FA  1283               	bcf	3,5	;RP0=0, select bank0
  4470     05FB  1303               	bcf	3,6	;RP1=0, select bank0
  4471     05FC  0842               	movf	map@eMax,w
  4472     05FD  00CE               	movwf	??_map
  4473     05FE  0843               	movf	map@eMax+1,w
  4474     05FF  00CF               	movwf	??_map+1
  4475     0600  0844               	movf	map@eMax+2,w
  4476     0601  00D0               	movwf	??_map+2
  4477     0602  0845               	movf	map@eMax+3,w
  4478     0603  00D1               	movwf	??_map+3
  4479     0604  083E               	movf	map@eMin,w
  4480     0605  02CE               	subwf	??_map,f
  4481     0606  083F               	movf	map@eMin+1,w
  4482     0607  1C03               	skipc
  4483     0608  0F3F               	incfsz	map@eMin+1,w
  4484     0609  2E0B               	goto	u3331
  4485     060A  2E0C               	goto	u3332
  4486     060B                     u3331:
  4487     060B  02CF               	subwf	??_map+1,f
  4488     060C                     u3332:
  4489     060C  0840               	movf	map@eMin+2,w
  4490     060D  1C03               	skipc
  4491     060E  0F40               	incfsz	map@eMin+2,w
  4492     060F  2E11               	goto	u3333
  4493     0610  2E12               	goto	u3334
  4494     0611                     u3333:
  4495     0611  02D0               	subwf	??_map+2,f
  4496     0612                     u3334:
  4497     0612  0841               	movf	map@eMin+3,w
  4498     0613  1C03               	skipc
  4499     0614  0F41               	incfsz	map@eMin+3,w
  4500     0615  2E17               	goto	u3335
  4501     0616  2E18               	goto	u3336
  4502     0617                     u3335:
  4503     0617  02D1               	subwf	??_map+3,f
  4504     0618                     u3336:
  4505     0618  0851               	movf	??_map+3,w
  4506     0619  00AF               	movwf	___aldiv@divisor+3
  4507     061A  0850               	movf	??_map+2,w
  4508     061B  00AE               	movwf	___aldiv@divisor+2
  4509     061C  084F               	movf	??_map+1,w
  4510     061D  00AD               	movwf	___aldiv@divisor+1
  4511     061E  084E               	movf	??_map,w
  4512     061F  00AC               	movwf	___aldiv@divisor
  4513     0620  083A               	movf	map@x,w
  4514     0621  00D2               	movwf	??_map+4
  4515     0622  083B               	movf	map@x+1,w
  4516     0623  00D3               	movwf	??_map+5
  4517     0624  083C               	movf	map@x+2,w
  4518     0625  00D4               	movwf	??_map+6
  4519     0626  083D               	movf	map@x+3,w
  4520     0627  00D5               	movwf	??_map+7
  4521     0628  083E               	movf	map@eMin,w
  4522     0629  02D2               	subwf	??_map+4,f
  4523     062A  083F               	movf	map@eMin+1,w
  4524     062B  1C03               	skipc
  4525     062C  0F3F               	incfsz	map@eMin+1,w
  4526     062D  2E2F               	goto	u3341
  4527     062E  2E30               	goto	u3342
  4528     062F                     u3341:
  4529     062F  02D3               	subwf	??_map+5,f
  4530     0630                     u3342:
  4531     0630  0840               	movf	map@eMin+2,w
  4532     0631  1C03               	skipc
  4533     0632  0F40               	incfsz	map@eMin+2,w
  4534     0633  2E35               	goto	u3343
  4535     0634  2E36               	goto	u3344
  4536     0635                     u3343:
  4537     0635  02D4               	subwf	??_map+6,f
  4538     0636                     u3344:
  4539     0636  0841               	movf	map@eMin+3,w
  4540     0637  1C03               	skipc
  4541     0638  0F41               	incfsz	map@eMin+3,w
  4542     0639  2E3B               	goto	u3345
  4543     063A  2E3C               	goto	u3346
  4544     063B                     u3345:
  4545     063B  02D5               	subwf	??_map+7,f
  4546     063C                     u3346:
  4547     063C  0855               	movf	??_map+7,w
  4548     063D  00A3               	movwf	___lmul@multiplier+3
  4549     063E  0854               	movf	??_map+6,w
  4550     063F  00A2               	movwf	___lmul@multiplier+2
  4551     0640  0853               	movf	??_map+5,w
  4552     0641  00A1               	movwf	___lmul@multiplier+1
  4553     0642  0852               	movf	??_map+4,w
  4554     0643  00A0               	movwf	___lmul@multiplier
  4555     0644  084A               	movf	map@sMax,w
  4556     0645  00D6               	movwf	??_map+8
  4557     0646  084B               	movf	map@sMax+1,w
  4558     0647  00D7               	movwf	??_map+9
  4559     0648  084C               	movf	map@sMax+2,w
  4560     0649  00D8               	movwf	??_map+10
  4561     064A  084D               	movf	map@sMax+3,w
  4562     064B  00D9               	movwf	??_map+11
  4563     064C  0846               	movf	map@sMin,w
  4564     064D  02D6               	subwf	??_map+8,f
  4565     064E  0847               	movf	map@sMin+1,w
  4566     064F  1C03               	skipc
  4567     0650  0F47               	incfsz	map@sMin+1,w
  4568     0651  2E53               	goto	u3351
  4569     0652  2E54               	goto	u3352
  4570     0653                     u3351:
  4571     0653  02D7               	subwf	??_map+9,f
  4572     0654                     u3352:
  4573     0654  0848               	movf	map@sMin+2,w
  4574     0655  1C03               	skipc
  4575     0656  0F48               	incfsz	map@sMin+2,w
  4576     0657  2E59               	goto	u3353
  4577     0658  2E5A               	goto	u3354
  4578     0659                     u3353:
  4579     0659  02D8               	subwf	??_map+10,f
  4580     065A                     u3354:
  4581     065A  0849               	movf	map@sMin+3,w
  4582     065B  1C03               	skipc
  4583     065C  0F49               	incfsz	map@sMin+3,w
  4584     065D  2E5F               	goto	u3355
  4585     065E  2E60               	goto	u3356
  4586     065F                     u3355:
  4587     065F  02D9               	subwf	??_map+11,f
  4588     0660                     u3356:
  4589     0660  0859               	movf	??_map+11,w
  4590     0661  00A7               	movwf	___lmul@multiplicand+3
  4591     0662  0858               	movf	??_map+10,w
  4592     0663  00A6               	movwf	___lmul@multiplicand+2
  4593     0664  0857               	movf	??_map+9,w
  4594     0665  00A5               	movwf	___lmul@multiplicand+1
  4595     0666  0856               	movf	??_map+8,w
  4596     0667  00A4               	movwf	___lmul@multiplicand
  4597     0668  120A  158A  24B3  120A  118A  	fcall	___lmul
  4598     066D  1283               	bcf	3,5	;RP0=0, select bank0
  4599     066E  1303               	bcf	3,6	;RP1=0, select bank0
  4600     066F  0823               	movf	?___lmul+3,w
  4601     0670  00B3               	movwf	___aldiv@dividend+3
  4602     0671  0822               	movf	?___lmul+2,w
  4603     0672  00B2               	movwf	___aldiv@dividend+2
  4604     0673  0821               	movf	?___lmul+1,w
  4605     0674  00B1               	movwf	___aldiv@dividend+1
  4606     0675  0820               	movf	?___lmul,w
  4607     0676  00B0               	movwf	___aldiv@dividend
  4608     0677  120A  118A  26A2  120A  118A  	fcall	___aldiv
  4609     067C  1283               	bcf	3,5	;RP0=0, select bank0
  4610     067D  1303               	bcf	3,6	;RP1=0, select bank0
  4611     067E  082C               	movf	?___aldiv,w
  4612     067F  0746               	addwf	map@sMin,w
  4613     0680  00DA               	movwf	??_map+12
  4614     0681  3000               	movlw	0
  4615     0682  1803               	skipnc
  4616     0683  3001               	movlw	1
  4617     0684  072D               	addwf	?___aldiv+1,w
  4618     0685  01DC               	clrf	??_map+14
  4619     0686  1803               	skipnc
  4620     0687  0ADC               	incf	??_map+14,f
  4621     0688  0747               	addwf	map@sMin+1,w
  4622     0689  00DB               	movwf	??_map+13
  4623     068A  1803               	skipnc
  4624     068B  0ADC               	incf	??_map+14,f
  4625     068C  082E               	movf	?___aldiv+2,w
  4626     068D  075C               	addwf	??_map+14,w
  4627     068E  01DD               	clrf	??_map+15
  4628     068F  1803               	skipnc
  4629     0690  0ADD               	incf	??_map+15,f
  4630     0691  0748               	addwf	map@sMin+2,w
  4631     0692  00DC               	movwf	??_map+14
  4632     0693  1803               	skipnc
  4633     0694  0ADD               	incf	??_map+15,f
  4634     0695  082F               	movf	?___aldiv+3,w
  4635     0696  075D               	addwf	??_map+15,w
  4636     0697  0749               	addwf	map@sMin+3,w
  4637     0698  00DD               	movwf	??_map+15
  4638     0699  085D               	movf	??_map+15,w
  4639     069A  00BD               	movwf	?_map+3
  4640     069B  085C               	movf	??_map+14,w
  4641     069C  00BC               	movwf	?_map+2
  4642     069D  085B               	movf	??_map+13,w
  4643     069E  00BB               	movwf	?_map+1
  4644     069F  085A               	movf	??_map+12,w
  4645     06A0  00BA               	movwf	?_map
  4646     06A1                     l68:
  4647     06A1  0008               	return
  4648     06A2                     __end_of_map:
  4649                           
  4650                           	psect	text13
  4651     0CB3                     __ptext13:	
  4652 ;; *************** function ___lmul *****************
  4653 ;; Defined at:
  4654 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;  multiplier      4    0[BANK0 ] unsigned long 
  4657 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;  product         4    8[BANK0 ] unsigned long 
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  4    0[BANK0 ] unsigned long 
  4662 ;; Registers used:
  4663 ;;		wreg, status,2, status,0
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4669 ;;      Params:         0       8       0       0       0
  4670 ;;      Locals:         0       4       0       0       0
  4671 ;;      Temps:          1       0       0       0       0
  4672 ;;      Totals:         1      12       0       0       0
  4673 ;;Total ram usage:       13 bytes
  4674 ;; Hardware stack levels used: 1
  4675 ;; Hardware stack levels required when called: 1
  4676 ;; This function calls:
  4677 ;;		Nothing
  4678 ;; This function is called by:
  4679 ;;		_map
  4680 ;; This function uses a non-reentrant model
  4681 ;;
  4682                           
  4683     0CB3                     ___lmul:	
  4684                           ;psect for function ___lmul
  4685                           
  4686     0CB3                     l3314:	
  4687                           ;incstack = 0
  4688                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4689                           
  4690     0CB3  3000               	movlw	0
  4691     0CB4  1283               	bcf	3,5	;RP0=0, select bank0
  4692     0CB5  1303               	bcf	3,6	;RP1=0, select bank0
  4693     0CB6  00AB               	movwf	___lmul@product+3
  4694     0CB7  3000               	movlw	0
  4695     0CB8  00AA               	movwf	___lmul@product+2
  4696     0CB9  3000               	movlw	0
  4697     0CBA  00A9               	movwf	___lmul@product+1
  4698     0CBB  3000               	movlw	0
  4699     0CBC  00A8               	movwf	___lmul@product
  4700     0CBD                     l3316:
  4701     0CBD  1C20               	btfss	___lmul@multiplier,0
  4702     0CBE  2CC0               	goto	u3091
  4703     0CBF  2CC1               	goto	u3090
  4704     0CC0                     u3091:
  4705     0CC0  2CD8               	goto	l3320
  4706     0CC1                     u3090:
  4707     0CC1                     l3318:
  4708     0CC1  0824               	movf	___lmul@multiplicand,w
  4709     0CC2  07A8               	addwf	___lmul@product,f
  4710     0CC3  0825               	movf	___lmul@multiplicand+1,w
  4711     0CC4  1103               	clrz
  4712     0CC5  1803               	skipnc
  4713     0CC6  3E01               	addlw	1
  4714     0CC7  1903               	skipnz
  4715     0CC8  2CCA               	goto	u3101
  4716     0CC9  07A9               	addwf	___lmul@product+1,f
  4717     0CCA                     u3101:
  4718     0CCA  0826               	movf	___lmul@multiplicand+2,w
  4719     0CCB  1103               	clrz
  4720     0CCC  1803               	skipnc
  4721     0CCD  3E01               	addlw	1
  4722     0CCE  1903               	skipnz
  4723     0CCF  2CD1               	goto	u3102
  4724     0CD0  07AA               	addwf	___lmul@product+2,f
  4725     0CD1                     u3102:
  4726     0CD1  0827               	movf	___lmul@multiplicand+3,w
  4727     0CD2  1103               	clrz
  4728     0CD3  1803               	skipnc
  4729     0CD4  3E01               	addlw	1
  4730     0CD5  1903               	skipnz
  4731     0CD6  2CD8               	goto	u3103
  4732     0CD7  07AB               	addwf	___lmul@product+3,f
  4733     0CD8                     u3103:
  4734     0CD8                     l3320:
  4735     0CD8  3001               	movlw	1
  4736     0CD9  00F4               	movwf	??___lmul
  4737     0CDA                     u3115:
  4738     0CDA  1003               	clrc
  4739     0CDB  0DA4               	rlf	___lmul@multiplicand,f
  4740     0CDC  0DA5               	rlf	___lmul@multiplicand+1,f
  4741     0CDD  0DA6               	rlf	___lmul@multiplicand+2,f
  4742     0CDE  0DA7               	rlf	___lmul@multiplicand+3,f
  4743     0CDF  0BF4               	decfsz	??___lmul,f
  4744     0CE0  2CDA               	goto	u3115
  4745     0CE1                     l3322:
  4746     0CE1  3001               	movlw	1
  4747     0CE2                     u3125:
  4748     0CE2  1003               	clrc
  4749     0CE3  0CA3               	rrf	___lmul@multiplier+3,f
  4750     0CE4  0CA2               	rrf	___lmul@multiplier+2,f
  4751     0CE5  0CA1               	rrf	___lmul@multiplier+1,f
  4752     0CE6  0CA0               	rrf	___lmul@multiplier,f
  4753     0CE7  3EFF               	addlw	-1
  4754     0CE8  1D03               	skipz
  4755     0CE9  2CE2               	goto	u3125
  4756     0CEA  0823               	movf	___lmul@multiplier+3,w
  4757     0CEB  0422               	iorwf	___lmul@multiplier+2,w
  4758     0CEC  0421               	iorwf	___lmul@multiplier+1,w
  4759     0CED  0420               	iorwf	___lmul@multiplier,w
  4760     0CEE  1D03               	skipz
  4761     0CEF  2CF1               	goto	u3131
  4762     0CF0  2CF2               	goto	u3130
  4763     0CF1                     u3131:
  4764     0CF1  2CBD               	goto	l3316
  4765     0CF2                     u3130:
  4766     0CF2                     l3324:
  4767     0CF2  082B               	movf	___lmul@product+3,w
  4768     0CF3  00A3               	movwf	?___lmul+3
  4769     0CF4  082A               	movf	___lmul@product+2,w
  4770     0CF5  00A2               	movwf	?___lmul+2
  4771     0CF6  0829               	movf	___lmul@product+1,w
  4772     0CF7  00A1               	movwf	?___lmul+1
  4773     0CF8  0828               	movf	___lmul@product,w
  4774     0CF9  00A0               	movwf	?___lmul
  4775     0CFA                     l580:
  4776     0CFA  0008               	return
  4777     0CFB                     __end_of___lmul:
  4778                           
  4779                           	psect	text14
  4780     06A2                     __ptext14:	
  4781 ;; *************** function ___aldiv *****************
  4782 ;; Defined at:
  4783 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;  divisor         4   12[BANK0 ] long 
  4786 ;;  dividend        4   16[BANK0 ] long 
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;  quotient        4   22[BANK0 ] long 
  4789 ;;  sign            1   21[BANK0 ] unsigned char 
  4790 ;;  counter         1   20[BANK0 ] unsigned char 
  4791 ;; Return value:  Size  Location     Type
  4792 ;;                  4   12[BANK0 ] long 
  4793 ;; Registers used:
  4794 ;;		wreg, status,2, status,0
  4795 ;; Tracked objects:
  4796 ;;		On entry : 0/0
  4797 ;;		On exit  : 0/0
  4798 ;;		Unchanged: 0/0
  4799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4800 ;;      Params:         0       8       0       0       0
  4801 ;;      Locals:         0       6       0       0       0
  4802 ;;      Temps:          1       0       0       0       0
  4803 ;;      Totals:         1      14       0       0       0
  4804 ;;Total ram usage:       15 bytes
  4805 ;; Hardware stack levels used: 1
  4806 ;; Hardware stack levels required when called: 1
  4807 ;; This function calls:
  4808 ;;		Nothing
  4809 ;; This function is called by:
  4810 ;;		_map
  4811 ;; This function uses a non-reentrant model
  4812 ;;
  4813                           
  4814     06A2                     ___aldiv:	
  4815                           ;psect for function ___aldiv
  4816                           
  4817     06A2                     l2438:	
  4818                           ;incstack = 0
  4819                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4820                           
  4821     06A2  1283               	bcf	3,5	;RP0=0, select bank0
  4822     06A3  1303               	bcf	3,6	;RP1=0, select bank0
  4823     06A4  01B5               	clrf	___aldiv@sign
  4824     06A5                     l2440:
  4825     06A5  1FAF               	btfss	___aldiv@divisor+3,7
  4826     06A6  2EA8               	goto	u2001
  4827     06A7  2EA9               	goto	u2000
  4828     06A8                     u2001:
  4829     06A8  2EB6               	goto	l631
  4830     06A9                     u2000:
  4831     06A9                     l2442:
  4832     06A9  09AC               	comf	___aldiv@divisor,f
  4833     06AA  09AD               	comf	___aldiv@divisor+1,f
  4834     06AB  09AE               	comf	___aldiv@divisor+2,f
  4835     06AC  09AF               	comf	___aldiv@divisor+3,f
  4836     06AD  0AAC               	incf	___aldiv@divisor,f
  4837     06AE  1903               	skipnz
  4838     06AF  0AAD               	incf	___aldiv@divisor+1,f
  4839     06B0  1903               	skipnz
  4840     06B1  0AAE               	incf	___aldiv@divisor+2,f
  4841     06B2  1903               	skipnz
  4842     06B3  0AAF               	incf	___aldiv@divisor+3,f
  4843     06B4  01B5               	clrf	___aldiv@sign
  4844     06B5  0AB5               	incf	___aldiv@sign,f
  4845     06B6                     l631:
  4846     06B6  1FB3               	btfss	___aldiv@dividend+3,7
  4847     06B7  2EB9               	goto	u2011
  4848     06B8  2EBA               	goto	u2010
  4849     06B9                     u2011:
  4850     06B9  2EC9               	goto	l2448
  4851     06BA                     u2010:
  4852     06BA                     l2444:
  4853     06BA  09B0               	comf	___aldiv@dividend,f
  4854     06BB  09B1               	comf	___aldiv@dividend+1,f
  4855     06BC  09B2               	comf	___aldiv@dividend+2,f
  4856     06BD  09B3               	comf	___aldiv@dividend+3,f
  4857     06BE  0AB0               	incf	___aldiv@dividend,f
  4858     06BF  1903               	skipnz
  4859     06C0  0AB1               	incf	___aldiv@dividend+1,f
  4860     06C1  1903               	skipnz
  4861     06C2  0AB2               	incf	___aldiv@dividend+2,f
  4862     06C3  1903               	skipnz
  4863     06C4  0AB3               	incf	___aldiv@dividend+3,f
  4864     06C5                     l2446:
  4865     06C5  3001               	movlw	1
  4866     06C6  00F5               	movwf	??___aldiv
  4867     06C7  0875               	movf	??___aldiv,w
  4868     06C8  06B5               	xorwf	___aldiv@sign,f
  4869     06C9                     l2448:
  4870     06C9  3000               	movlw	0
  4871     06CA  00B9               	movwf	___aldiv@quotient+3
  4872     06CB  3000               	movlw	0
  4873     06CC  00B8               	movwf	___aldiv@quotient+2
  4874     06CD  3000               	movlw	0
  4875     06CE  00B7               	movwf	___aldiv@quotient+1
  4876     06CF  3000               	movlw	0
  4877     06D0  00B6               	movwf	___aldiv@quotient
  4878     06D1                     l2450:
  4879     06D1  082F               	movf	___aldiv@divisor+3,w
  4880     06D2  042E               	iorwf	___aldiv@divisor+2,w
  4881     06D3  042D               	iorwf	___aldiv@divisor+1,w
  4882     06D4  042C               	iorwf	___aldiv@divisor,w
  4883     06D5  1903               	skipnz
  4884     06D6  2ED8               	goto	u2021
  4885     06D7  2ED9               	goto	u2020
  4886     06D8                     u2021:
  4887     06D8  2F26               	goto	l2470
  4888     06D9                     u2020:
  4889     06D9                     l2452:
  4890     06D9  01B4               	clrf	___aldiv@counter
  4891     06DA  0AB4               	incf	___aldiv@counter,f
  4892     06DB  2EE9               	goto	l2456
  4893     06DC                     l2454:
  4894     06DC  3001               	movlw	1
  4895     06DD  00F5               	movwf	??___aldiv
  4896     06DE                     u2035:
  4897     06DE  1003               	clrc
  4898     06DF  0DAC               	rlf	___aldiv@divisor,f
  4899     06E0  0DAD               	rlf	___aldiv@divisor+1,f
  4900     06E1  0DAE               	rlf	___aldiv@divisor+2,f
  4901     06E2  0DAF               	rlf	___aldiv@divisor+3,f
  4902     06E3  0BF5               	decfsz	??___aldiv,f
  4903     06E4  2EDE               	goto	u2035
  4904     06E5  3001               	movlw	1
  4905     06E6  00F5               	movwf	??___aldiv
  4906     06E7  0875               	movf	??___aldiv,w
  4907     06E8  07B4               	addwf	___aldiv@counter,f
  4908     06E9                     l2456:
  4909     06E9  1FAF               	btfss	___aldiv@divisor+3,7
  4910     06EA  2EEC               	goto	u2041
  4911     06EB  2EED               	goto	u2040
  4912     06EC                     u2041:
  4913     06EC  2EDC               	goto	l2454
  4914     06ED                     u2040:
  4915     06ED                     l2458:
  4916     06ED  3001               	movlw	1
  4917     06EE  00F5               	movwf	??___aldiv
  4918     06EF                     u2055:
  4919     06EF  1003               	clrc
  4920     06F0  0DB6               	rlf	___aldiv@quotient,f
  4921     06F1  0DB7               	rlf	___aldiv@quotient+1,f
  4922     06F2  0DB8               	rlf	___aldiv@quotient+2,f
  4923     06F3  0DB9               	rlf	___aldiv@quotient+3,f
  4924     06F4  0BF5               	decfsz	??___aldiv,f
  4925     06F5  2EEF               	goto	u2055
  4926     06F6                     l2460:
  4927     06F6  082F               	movf	___aldiv@divisor+3,w
  4928     06F7  0233               	subwf	___aldiv@dividend+3,w
  4929     06F8  1D03               	skipz
  4930     06F9  2F04               	goto	u2065
  4931     06FA  082E               	movf	___aldiv@divisor+2,w
  4932     06FB  0232               	subwf	___aldiv@dividend+2,w
  4933     06FC  1D03               	skipz
  4934     06FD  2F04               	goto	u2065
  4935     06FE  082D               	movf	___aldiv@divisor+1,w
  4936     06FF  0231               	subwf	___aldiv@dividend+1,w
  4937     0700  1D03               	skipz
  4938     0701  2F04               	goto	u2065
  4939     0702  082C               	movf	___aldiv@divisor,w
  4940     0703  0230               	subwf	___aldiv@dividend,w
  4941     0704                     u2065:
  4942     0704  1C03               	skipc
  4943     0705  2F07               	goto	u2061
  4944     0706  2F08               	goto	u2060
  4945     0707                     u2061:
  4946     0707  2F17               	goto	l2466
  4947     0708                     u2060:
  4948     0708                     l2462:
  4949     0708  082C               	movf	___aldiv@divisor,w
  4950     0709  02B0               	subwf	___aldiv@dividend,f
  4951     070A  082D               	movf	___aldiv@divisor+1,w
  4952     070B  1C03               	skipc
  4953     070C  0F2D               	incfsz	___aldiv@divisor+1,w
  4954     070D  02B1               	subwf	___aldiv@dividend+1,f
  4955     070E  082E               	movf	___aldiv@divisor+2,w
  4956     070F  1C03               	skipc
  4957     0710  0F2E               	incfsz	___aldiv@divisor+2,w
  4958     0711  02B2               	subwf	___aldiv@dividend+2,f
  4959     0712  082F               	movf	___aldiv@divisor+3,w
  4960     0713  1C03               	skipc
  4961     0714  0F2F               	incfsz	___aldiv@divisor+3,w
  4962     0715  02B3               	subwf	___aldiv@dividend+3,f
  4963     0716                     l2464:
  4964     0716  1436               	bsf	___aldiv@quotient,0
  4965     0717                     l2466:
  4966     0717  3001               	movlw	1
  4967     0718                     u2075:
  4968     0718  1003               	clrc
  4969     0719  0CAF               	rrf	___aldiv@divisor+3,f
  4970     071A  0CAE               	rrf	___aldiv@divisor+2,f
  4971     071B  0CAD               	rrf	___aldiv@divisor+1,f
  4972     071C  0CAC               	rrf	___aldiv@divisor,f
  4973     071D  3EFF               	addlw	-1
  4974     071E  1D03               	skipz
  4975     071F  2F18               	goto	u2075
  4976     0720                     l2468:
  4977     0720  3001               	movlw	1
  4978     0721  02B4               	subwf	___aldiv@counter,f
  4979     0722  1D03               	btfss	3,2
  4980     0723  2F25               	goto	u2081
  4981     0724  2F26               	goto	u2080
  4982     0725                     u2081:
  4983     0725  2EED               	goto	l2458
  4984     0726                     u2080:
  4985     0726                     l2470:
  4986     0726  0835               	movf	___aldiv@sign,w
  4987     0727  1903               	btfsc	3,2
  4988     0728  2F2A               	goto	u2091
  4989     0729  2F2B               	goto	u2090
  4990     072A                     u2091:
  4991     072A  2F36               	goto	l2474
  4992     072B                     u2090:
  4993     072B                     l2472:
  4994     072B  09B6               	comf	___aldiv@quotient,f
  4995     072C  09B7               	comf	___aldiv@quotient+1,f
  4996     072D  09B8               	comf	___aldiv@quotient+2,f
  4997     072E  09B9               	comf	___aldiv@quotient+3,f
  4998     072F  0AB6               	incf	___aldiv@quotient,f
  4999     0730  1903               	skipnz
  5000     0731  0AB7               	incf	___aldiv@quotient+1,f
  5001     0732  1903               	skipnz
  5002     0733  0AB8               	incf	___aldiv@quotient+2,f
  5003     0734  1903               	skipnz
  5004     0735  0AB9               	incf	___aldiv@quotient+3,f
  5005     0736                     l2474:
  5006     0736  0839               	movf	___aldiv@quotient+3,w
  5007     0737  00AF               	movwf	?___aldiv+3
  5008     0738  0838               	movf	___aldiv@quotient+2,w
  5009     0739  00AE               	movwf	?___aldiv+2
  5010     073A  0837               	movf	___aldiv@quotient+1,w
  5011     073B  00AD               	movwf	?___aldiv+1
  5012     073C  0836               	movf	___aldiv@quotient,w
  5013     073D  00AC               	movwf	?___aldiv
  5014     073E                     l641:
  5015     073E  0008               	return
  5016     073F                     __end_of___aldiv:
  5017                           
  5018                           	psect	text15
  5019     0A96                     __ptext15:	
  5020 ;; *************** function _leer_sec *****************
  5021 ;; Defined at:
  5022 ;;		line 75 in file "RTC.c"
  5023 ;; Parameters:    Size  Location     Type
  5024 ;;		None
  5025 ;; Auto vars:     Size  Location     Type
  5026 ;;		None
  5027 ;; Return value:  Size  Location     Type
  5028 ;;                  1    wreg      unsigned char 
  5029 ;; Registers used:
  5030 ;;		wreg, status,2, status,0, pclath, cstack
  5031 ;; Tracked objects:
  5032 ;;		On entry : 0/0
  5033 ;;		On exit  : 0/0
  5034 ;;		Unchanged: 0/0
  5035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5036 ;;      Params:         0       0       0       0       0
  5037 ;;      Locals:         0       0       0       0       0
  5038 ;;      Temps:          0       0       0       0       0
  5039 ;;      Totals:         0       0       0       0       0
  5040 ;;Total ram usage:        0 bytes
  5041 ;; Hardware stack levels used: 1
  5042 ;; Hardware stack levels required when called: 3
  5043 ;; This function calls:
  5044 ;;		_I2C_Master_Read
  5045 ;;		_I2C_Master_RepeatedStart
  5046 ;;		_I2C_Master_Start
  5047 ;;		_I2C_Master_Stop
  5048 ;;		_I2C_Master_Write
  5049 ;;		_conv
  5050 ;; This function is called by:
  5051 ;;		_main
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055     0A96                     _leer_sec:	
  5056                           ;psect for function _leer_sec
  5057                           
  5058     0A96                     l3528:	
  5059                           ;incstack = 0
  5060                           ; Regs used in _leer_sec: [wreg+status,2+status,0+pclath+cstack]
  5061                           
  5062                           
  5063                           ;RTC.c: 77:     I2C_Master_Start();
  5064     0A96  120A  158A  20C6  120A  158A  	fcall	_I2C_Master_Start
  5065                           
  5066                           ;RTC.c: 78:     I2C_Master_Write(0xD0);
  5067     0A9B  30D0               	movlw	208
  5068     0A9C  00F4               	movwf	I2C_Master_Write@d
  5069     0A9D  3000               	movlw	0
  5070     0A9E  00F5               	movwf	I2C_Master_Write@d+1
  5071     0A9F  120A  158A  20D8  120A  158A  	fcall	_I2C_Master_Write
  5072                           
  5073                           ;RTC.c: 79:     I2C_Master_Write(0x00);
  5074     0AA4  3000               	movlw	0
  5075     0AA5  00F4               	movwf	I2C_Master_Write@d
  5076     0AA6  00F5               	movwf	I2C_Master_Write@d+1
  5077     0AA7  120A  158A  20D8  120A  158A  	fcall	_I2C_Master_Write
  5078                           
  5079                           ;RTC.c: 80:     I2C_Master_RepeatedStart();
  5080     0AAC  120A  158A  20BD  120A  158A  	fcall	_I2C_Master_RepeatedStart
  5081                           
  5082                           ;RTC.c: 81:     I2C_Master_Write(0xD1);
  5083     0AB1  30D1               	movlw	209
  5084     0AB2  00F4               	movwf	I2C_Master_Write@d
  5085     0AB3  3000               	movlw	0
  5086     0AB4  00F5               	movwf	I2C_Master_Write@d+1
  5087     0AB5  120A  158A  20D8  120A  158A  	fcall	_I2C_Master_Write
  5088                           
  5089                           ;RTC.c: 82:     sec = I2C_Master_Read(0);
  5090     0ABA  3000               	movlw	0
  5091     0ABB  00F4               	movwf	I2C_Master_Read@a
  5092     0ABC  00F5               	movwf	I2C_Master_Read@a+1
  5093     0ABD  120A  158A  21BB  120A  158A  	fcall	_I2C_Master_Read
  5094     0AC2  0874               	movf	?_I2C_Master_Read,w
  5095     0AC3  1283               	bcf	3,5	;RP0=0, select bank0
  5096     0AC4  1303               	bcf	3,6	;RP1=0, select bank0
  5097     0AC5  00E3               	movwf	_sec
  5098                           
  5099                           ;RTC.c: 83:     I2C_Master_Stop();
  5100     0AC6  120A  158A  20CF  120A  158A  	fcall	_I2C_Master_Stop
  5101                           
  5102                           ;RTC.c: 85:     sec = conv(sec);
  5103     0ACB  1283               	bcf	3,5	;RP0=0, select bank0
  5104     0ACC  1303               	bcf	3,6	;RP1=0, select bank0
  5105     0ACD  0863               	movf	_sec,w
  5106     0ACE  120A  158A  212F  120A  158A  	fcall	_conv
  5107     0AD3  1283               	bcf	3,5	;RP0=0, select bank0
  5108     0AD4  1303               	bcf	3,6	;RP1=0, select bank0
  5109     0AD5  00E3               	movwf	_sec
  5110     0AD6                     l3530:
  5111                           
  5112                           ;RTC.c: 86:     return sec;
  5113     0AD6  0863               	movf	_sec,w
  5114     0AD7                     l394:
  5115     0AD7  0008               	return
  5116     0AD8                     __end_of_leer_sec:
  5117                           
  5118                           	psect	text16
  5119     0BE4                     __ptext16:	
  5120 ;; *************** function _leer_min *****************
  5121 ;; Defined at:
  5122 ;;		line 60 in file "RTC.c"
  5123 ;; Parameters:    Size  Location     Type
  5124 ;;		None
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;		None
  5127 ;; Return value:  Size  Location     Type
  5128 ;;                  1    wreg      unsigned char 
  5129 ;; Registers used:
  5130 ;;		wreg, status,2, status,0, pclath, cstack
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5136 ;;      Params:         0       0       0       0       0
  5137 ;;      Locals:         0       0       0       0       0
  5138 ;;      Temps:          0       0       0       0       0
  5139 ;;      Totals:         0       0       0       0       0
  5140 ;;Total ram usage:        0 bytes
  5141 ;; Hardware stack levels used: 1
  5142 ;; Hardware stack levels required when called: 3
  5143 ;; This function calls:
  5144 ;;		_I2C_Master_Read
  5145 ;;		_I2C_Master_RepeatedStart
  5146 ;;		_I2C_Master_Start
  5147 ;;		_I2C_Master_Stop
  5148 ;;		_I2C_Master_Write
  5149 ;;		_conv
  5150 ;; This function is called by:
  5151 ;;		_main
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155     0BE4                     _leer_min:	
  5156                           ;psect for function _leer_min
  5157                           
  5158     0BE4                     l3558:	
  5159                           ;incstack = 0
  5160                           ; Regs used in _leer_min: [wreg+status,2+status,0+pclath+cstack]
  5161                           
  5162                           
  5163                           ;RTC.c: 62:     I2C_Master_Start();
  5164     0BE4  120A  158A  20C6  120A  158A  	fcall	_I2C_Master_Start
  5165                           
  5166                           ;RTC.c: 63:     I2C_Master_Write(0xD0);
  5167     0BE9  30D0               	movlw	208
  5168     0BEA  00F4               	movwf	I2C_Master_Write@d
  5169     0BEB  3000               	movlw	0
  5170     0BEC  00F5               	movwf	I2C_Master_Write@d+1
  5171     0BED  120A  158A  20D8  120A  158A  	fcall	_I2C_Master_Write
  5172                           
  5173                           ;RTC.c: 64:     I2C_Master_Write(0x01);
  5174     0BF2  3001               	movlw	1
  5175     0BF3  00F4               	movwf	I2C_Master_Write@d
  5176     0BF4  3000               	movlw	0
  5177     0BF5  00F5               	movwf	I2C_Master_Write@d+1
  5178     0BF6  120A  158A  20D8  120A  158A  	fcall	_I2C_Master_Write
  5179                           
  5180                           ;RTC.c: 65:     I2C_Master_RepeatedStart();
  5181     0BFB  120A  158A  20BD  120A  158A  	fcall	_I2C_Master_RepeatedStart
  5182                           
  5183                           ;RTC.c: 66:     I2C_Master_Write(0xD1);
  5184     0C00  30D1               	movlw	209
  5185     0C01  00F4               	movwf	I2C_Master_Write@d
  5186     0C02  3000               	movlw	0
  5187     0C03  00F5               	movwf	I2C_Master_Write@d+1
  5188     0C04  120A  158A  20D8  120A  158A  	fcall	_I2C_Master_Write
  5189                           
  5190                           ;RTC.c: 68:     min = I2C_Master_Read(0);
  5191     0C09  3000               	movlw	0
  5192     0C0A  00F4               	movwf	I2C_Master_Read@a
  5193     0C0B  00F5               	movwf	I2C_Master_Read@a+1
  5194     0C0C  120A  158A  21BB  120A  158A  	fcall	_I2C_Master_Read
  5195     0C11  0874               	movf	?_I2C_Master_Read,w
  5196     0C12  1283               	bcf	3,5	;RP0=0, select bank0
  5197     0C13  1303               	bcf	3,6	;RP1=0, select bank0
  5198     0C14  00E2               	movwf	_min
  5199                           
  5200                           ;RTC.c: 69:     I2C_Master_Stop();
  5201     0C15  120A  158A  20CF  120A  158A  	fcall	_I2C_Master_Stop
  5202                           
  5203                           ;RTC.c: 71:     min = conv(min);
  5204     0C1A  1283               	bcf	3,5	;RP0=0, select bank0
  5205     0C1B  1303               	bcf	3,6	;RP1=0, select bank0
  5206     0C1C  0862               	movf	_min,w
  5207     0C1D  120A  158A  212F  120A  158A  	fcall	_conv
  5208     0C22  1283               	bcf	3,5	;RP0=0, select bank0
  5209     0C23  1303               	bcf	3,6	;RP1=0, select bank0
  5210     0C24  00E2               	movwf	_min
  5211     0C25                     l3560:
  5212                           
  5213                           ;RTC.c: 72:     return min;
  5214     0C25  0862               	movf	_min,w
  5215     0C26                     l391:
  5216     0C26  0008               	return
  5217     0C27                     __end_of_leer_min:
  5218                           
  5219                           	psect	text17
  5220     0BA1                     __ptext17:	
  5221 ;; *************** function _leer_mes *****************
  5222 ;; Defined at:
  5223 ;;		line 103 in file "RTC.c"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;		None
  5226 ;; Auto vars:     Size  Location     Type
  5227 ;;		None
  5228 ;; Return value:  Size  Location     Type
  5229 ;;                  1    wreg      unsigned char 
  5230 ;; Registers used:
  5231 ;;		wreg, status,2, status,0, pclath, cstack
  5232 ;; Tracked objects:
  5233 ;;		On entry : 0/0
  5234 ;;		On exit  : 0/0
  5235 ;;		Unchanged: 0/0
  5236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5237 ;;      Params:         0       0       0       0       0
  5238 ;;      Locals:         0       0       0       0       0
  5239 ;;      Temps:          0       0       0       0       0
  5240 ;;      Totals:         0       0       0       0       0
  5241 ;;Total ram usage:        0 bytes
  5242 ;; Hardware stack levels used: 1
  5243 ;; Hardware stack levels required when called: 3
  5244 ;; This function calls:
  5245 ;;		_I2C_Master_Read
  5246 ;;		_I2C_Master_RepeatedStart
  5247 ;;		_I2C_Master_Start
  5248 ;;		_I2C_Master_Stop
  5249 ;;		_I2C_Master_Write
  5250 ;;		_convh
  5251 ;; This function is called by:
  5252 ;;		_main
  5253 ;; This function uses a non-reentrant model
  5254 ;;
  5255                           
  5256     0BA1                     _leer_mes:	
  5257                           ;psect for function _leer_mes
  5258                           
  5259     0BA1                     l3576:	
  5260                           ;incstack = 0
  5261                           ; Regs used in _leer_mes: [wreg+status,2+status,0+pclath+cstack]
  5262                           
  5263                           
  5264                           ;RTC.c: 105:     I2C_Master_Start();
  5265     0BA1  120A  158A  20C6  120A  158A  	fcall	_I2C_Master_Start
  5266                           
  5267                           ;RTC.c: 106:     I2C_Master_Write(0xD0);
  5268     0BA6  30D0               	movlw	208
  5269     0BA7  00F4               	movwf	I2C_Master_Write@d
  5270     0BA8  3000               	movlw	0
  5271     0BA9  00F5               	movwf	I2C_Master_Write@d+1
  5272     0BAA  120A  158A  20D8  120A  158A  	fcall	_I2C_Master_Write
  5273                           
  5274                           ;RTC.c: 107:     I2C_Master_Write(0x05);
  5275     0BAF  3005               	movlw	5
  5276     0BB0  00F4               	movwf	I2C_Master_Write@d
  5277     0BB1  3000               	movlw	0
  5278     0BB2  00F5               	movwf	I2C_Master_Write@d+1
  5279     0BB3  120A  158A  20D8  120A  158A  	fcall	_I2C_Master_Write
  5280                           
  5281                           ;RTC.c: 108:     I2C_Master_RepeatedStart();
  5282     0BB8  120A  158A  20BD  120A  158A  	fcall	_I2C_Master_RepeatedStart
  5283                           
  5284                           ;RTC.c: 109:     I2C_Master_Write(0xD1);
  5285     0BBD  30D1               	movlw	209
  5286     0BBE  00F4               	movwf	I2C_Master_Write@d
  5287     0BBF  3000               	movlw	0
  5288     0BC0  00F5               	movwf	I2C_Master_Write@d+1
  5289     0BC1  120A  158A  20D8  120A  158A  	fcall	_I2C_Master_Write
  5290                           
  5291                           ;RTC.c: 110:     mes = I2C_Master_Read(0);
  5292     0BC6  3000               	movlw	0
  5293     0BC7  00F4               	movwf	I2C_Master_Read@a
  5294     0BC8  00F5               	movwf	I2C_Master_Read@a+1
  5295     0BC9  120A  158A  21BB  120A  158A  	fcall	_I2C_Master_Read
  5296     0BCE  0874               	movf	?_I2C_Master_Read,w
  5297     0BCF  1283               	bcf	3,5	;RP0=0, select bank0
  5298     0BD0  1303               	bcf	3,6	;RP1=0, select bank0
  5299     0BD1  00DF               	movwf	_mes
  5300                           
  5301                           ;RTC.c: 111:     I2C_Master_Stop();
  5302     0BD2  120A  158A  20CF  120A  158A  	fcall	_I2C_Master_Stop
  5303                           
  5304                           ;RTC.c: 113:     mes = convh(mes);
  5305     0BD7  1283               	bcf	3,5	;RP0=0, select bank0
  5306     0BD8  1303               	bcf	3,6	;RP1=0, select bank0
  5307     0BD9  085F               	movf	_mes,w
  5308     0BDA  120A  158A  214E  120A  158A  	fcall	_convh
  5309     0BDF  1283               	bcf	3,5	;RP0=0, select bank0
  5310     0BE0  1303               	bcf	3,6	;RP1=0, select bank0
  5311     0BE1  00DF               	movwf	_mes
  5312     0BE2                     l3578:
  5313                           
  5314                           ;RTC.c: 114:     return mes;
  5315     0BE2  085F               	movf	_mes,w
  5316     0BE3                     l400:
  5317     0BE3  0008               	return
  5318     0BE4                     __end_of_leer_mes:
  5319                           
  5320                           	psect	text18
  5321     0B5E                     __ptext18:	
  5322 ;; *************** function _leer_hora *****************
  5323 ;; Defined at:
  5324 ;;		line 46 in file "RTC.c"
  5325 ;; Parameters:    Size  Location     Type
  5326 ;;		None
  5327 ;; Auto vars:     Size  Location     Type
  5328 ;;		None
  5329 ;; Return value:  Size  Location     Type
  5330 ;;                  1    wreg      unsigned char 
  5331 ;; Registers used:
  5332 ;;		wreg, status,2, status,0, pclath, cstack
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5338 ;;      Params:         0       0       0       0       0
  5339 ;;      Locals:         0       0       0       0       0
  5340 ;;      Temps:          0       0       0       0       0
  5341 ;;      Totals:         0       0       0       0       0
  5342 ;;Total ram usage:        0 bytes
  5343 ;; Hardware stack levels used: 1
  5344 ;; Hardware stack levels required when called: 3
  5345 ;; This function calls:
  5346 ;;		_I2C_Master_Read
  5347 ;;		_I2C_Master_RepeatedStart
  5348 ;;		_I2C_Master_Start
  5349 ;;		_I2C_Master_Stop
  5350 ;;		_I2C_Master_Write
  5351 ;;		_convh
  5352 ;; This function is called by:
  5353 ;;		_main
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357     0B5E                     _leer_hora:	
  5358                           ;psect for function _leer_hora
  5359                           
  5360     0B5E                     l3564:	
  5361                           ;incstack = 0
  5362                           ; Regs used in _leer_hora: [wreg+status,2+status,0+pclath+cstack]
  5363                           
  5364                           
  5365                           ;RTC.c: 48:     I2C_Master_Start();
  5366     0B5E  120A  158A  20C6  120A  158A  	fcall	_I2C_Master_Start
  5367                           
  5368                           ;RTC.c: 49:     I2C_Master_Write(0xD0);
  5369     0B63  30D0               	movlw	208
  5370     0B64  00F4               	movwf	I2C_Master_Write@d
  5371     0B65  3000               	movlw	0
  5372     0B66  00F5               	movwf	I2C_Master_Write@d+1
  5373     0B67  120A  158A  20D8  120A  158A  	fcall	_I2C_Master_Write
  5374                           
  5375                           ;RTC.c: 50:     I2C_Master_Write(0x02);
  5376     0B6C  3002               	movlw	2
  5377     0B6D  00F4               	movwf	I2C_Master_Write@d
  5378     0B6E  3000               	movlw	0
  5379     0B6F  00F5               	movwf	I2C_Master_Write@d+1
  5380     0B70  120A  158A  20D8  120A  158A  	fcall	_I2C_Master_Write
  5381                           
  5382                           ;RTC.c: 51:     I2C_Master_RepeatedStart();
  5383     0B75  120A  158A  20BD  120A  158A  	fcall	_I2C_Master_RepeatedStart
  5384                           
  5385                           ;RTC.c: 52:     I2C_Master_Write(0xD1);
  5386     0B7A  30D1               	movlw	209
  5387     0B7B  00F4               	movwf	I2C_Master_Write@d
  5388     0B7C  3000               	movlw	0
  5389     0B7D  00F5               	movwf	I2C_Master_Write@d+1
  5390     0B7E  120A  158A  20D8  120A  158A  	fcall	_I2C_Master_Write
  5391                           
  5392                           ;RTC.c: 53:     hora = I2C_Master_Read(0);
  5393     0B83  3000               	movlw	0
  5394     0B84  00F4               	movwf	I2C_Master_Read@a
  5395     0B85  00F5               	movwf	I2C_Master_Read@a+1
  5396     0B86  120A  158A  21BB  120A  158A  	fcall	_I2C_Master_Read
  5397     0B8B  0874               	movf	?_I2C_Master_Read,w
  5398     0B8C  1283               	bcf	3,5	;RP0=0, select bank0
  5399     0B8D  1303               	bcf	3,6	;RP1=0, select bank0
  5400     0B8E  00E1               	movwf	_hora
  5401                           
  5402                           ;RTC.c: 54:     I2C_Master_Stop();
  5403     0B8F  120A  158A  20CF  120A  158A  	fcall	_I2C_Master_Stop
  5404                           
  5405                           ;RTC.c: 56:     hora = convh(hora);
  5406     0B94  1283               	bcf	3,5	;RP0=0, select bank0
  5407     0B95  1303               	bcf	3,6	;RP1=0, select bank0
  5408     0B96  0861               	movf	_hora,w
  5409     0B97  120A  158A  214E  120A  158A  	fcall	_convh
  5410     0B9C  1283               	bcf	3,5	;RP0=0, select bank0
  5411     0B9D  1303               	bcf	3,6	;RP1=0, select bank0
  5412     0B9E  00E1               	movwf	_hora
  5413     0B9F                     l3566:
  5414                           
  5415                           ;RTC.c: 57:     return hora;
  5416     0B9F  0861               	movf	_hora,w
  5417     0BA0                     l388:
  5418     0BA0  0008               	return
  5419     0BA1                     __end_of_leer_hora:
  5420                           
  5421                           	psect	text19
  5422     094E                     __ptext19:	
  5423 ;; *************** function _convh *****************
  5424 ;; Defined at:
  5425 ;;		line 34 in file "RTC.c"
  5426 ;; Parameters:    Size  Location     Type
  5427 ;;  valor2          1    wreg     unsigned char 
  5428 ;; Auto vars:     Size  Location     Type
  5429 ;;  valor2          1    6[BANK0 ] unsigned char 
  5430 ;;  convertidoho    1    5[BANK0 ] unsigned char 
  5431 ;;  dechora         1    4[BANK0 ] unsigned char 
  5432 ;;  unhora          1    3[BANK0 ] unsigned char 
  5433 ;; Return value:  Size  Location     Type
  5434 ;;                  1    wreg      unsigned char 
  5435 ;; Registers used:
  5436 ;;		wreg, status,2, status,0, pclath, cstack
  5437 ;; Tracked objects:
  5438 ;;		On entry : 0/0
  5439 ;;		On exit  : 0/0
  5440 ;;		Unchanged: 0/0
  5441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5442 ;;      Params:         0       0       0       0       0
  5443 ;;      Locals:         0       4       0       0       0
  5444 ;;      Temps:          0       1       0       0       0
  5445 ;;      Totals:         0       5       0       0       0
  5446 ;;Total ram usage:        5 bytes
  5447 ;; Hardware stack levels used: 1
  5448 ;; Hardware stack levels required when called: 2
  5449 ;; This function calls:
  5450 ;;		___bmul
  5451 ;; This function is called by:
  5452 ;;		_leer_hora
  5453 ;;		_leer_mes
  5454 ;; This function uses a non-reentrant model
  5455 ;;
  5456                           
  5457     094E                     _convh:	
  5458                           ;psect for function _convh
  5459                           
  5460                           
  5461                           ;incstack = 0
  5462                           ; Regs used in _convh: [wreg+status,2+status,0+pclath+cstack]
  5463                           ;convh@valor2 stored from wreg
  5464     094E  1283               	bcf	3,5	;RP0=0, select bank0
  5465     094F  1303               	bcf	3,6	;RP1=0, select bank0
  5466     0950  00A6               	movwf	convh@valor2
  5467     0951                     l3304:
  5468                           
  5469                           ;RTC.c: 36:     uint8_t unhora;;RTC.c: 37:     uint8_t dechora;;RTC.c: 38:     uint8_t c
      +                          onvertidohora;;RTC.c: 39:     unhora = valor2 & 0x0F;
  5470     0951  0826               	movf	convh@valor2,w
  5471     0952  390F               	andlw	15
  5472     0953  00A3               	movwf	convh@unhora
  5473     0954                     l3306:
  5474                           
  5475                           ;RTC.c: 40:     dechora = ((valor2 & 0x10)>>4);
  5476     0954  0826               	movf	convh@valor2,w
  5477     0955  00A2               	movwf	??_convh
  5478     0956  3004               	movlw	4
  5479     0957                     u3085:
  5480     0957  1003               	clrc
  5481     0958  0CA2               	rrf	??_convh,f
  5482     0959  3EFF               	addlw	-1
  5483     095A  1D03               	skipz
  5484     095B  2957               	goto	u3085
  5485     095C  0822               	movf	??_convh,w
  5486     095D  3901               	andlw	1
  5487     095E  00A4               	movwf	convh@dechora
  5488     095F                     l3308:
  5489                           
  5490                           ;RTC.c: 41:     convertidohora = unhora+(dechora*10);
  5491     095F  300A               	movlw	10
  5492     0960  00F4               	movwf	___bmul@multiplicand
  5493     0961  0824               	movf	convh@dechora,w
  5494     0962  120A  158A  20FC  120A  158A  	fcall	___bmul
  5495     0967  1283               	bcf	3,5	;RP0=0, select bank0
  5496     0968  1303               	bcf	3,6	;RP1=0, select bank0
  5497     0969  0723               	addwf	convh@unhora,w
  5498     096A  00A5               	movwf	convh@convertidohora
  5499     096B                     l3310:
  5500                           
  5501                           ;RTC.c: 42:     return convertidohora;
  5502     096B  0825               	movf	convh@convertidohora,w
  5503     096C                     l385:
  5504     096C  0008               	return
  5505     096D                     __end_of_convh:
  5506                           
  5507                           	psect	text20
  5508     0B1B                     __ptext20:	
  5509 ;; *************** function _leer_dia *****************
  5510 ;; Defined at:
  5511 ;;		line 89 in file "RTC.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;		None
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;		None
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  1    wreg      unsigned char 
  5518 ;; Registers used:
  5519 ;;		wreg, status,2, status,0, pclath, cstack
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5525 ;;      Params:         0       0       0       0       0
  5526 ;;      Locals:         0       0       0       0       0
  5527 ;;      Temps:          0       0       0       0       0
  5528 ;;      Totals:         0       0       0       0       0
  5529 ;;Total ram usage:        0 bytes
  5530 ;; Hardware stack levels used: 1
  5531 ;; Hardware stack levels required when called: 3
  5532 ;; This function calls:
  5533 ;;		_I2C_Master_Read
  5534 ;;		_I2C_Master_RepeatedStart
  5535 ;;		_I2C_Master_Start
  5536 ;;		_I2C_Master_Stop
  5537 ;;		_I2C_Master_Write
  5538 ;;		_conv
  5539 ;; This function is called by:
  5540 ;;		_main
  5541 ;; This function uses a non-reentrant model
  5542 ;;
  5543                           
  5544     0B1B                     _leer_dia:	
  5545                           ;psect for function _leer_dia
  5546                           
  5547     0B1B                     l3570:	
  5548                           ;incstack = 0
  5549                           ; Regs used in _leer_dia: [wreg+status,2+status,0+pclath+cstack]
  5550                           
  5551                           
  5552                           ;RTC.c: 91:     I2C_Master_Start();
  5553     0B1B  120A  158A  20C6  120A  158A  	fcall	_I2C_Master_Start
  5554                           
  5555                           ;RTC.c: 92:     I2C_Master_Write(0xD0);
  5556     0B20  30D0               	movlw	208
  5557     0B21  00F4               	movwf	I2C_Master_Write@d
  5558     0B22  3000               	movlw	0
  5559     0B23  00F5               	movwf	I2C_Master_Write@d+1
  5560     0B24  120A  158A  20D8  120A  158A  	fcall	_I2C_Master_Write
  5561                           
  5562                           ;RTC.c: 93:     I2C_Master_Write(0x04);
  5563     0B29  3004               	movlw	4
  5564     0B2A  00F4               	movwf	I2C_Master_Write@d
  5565     0B2B  3000               	movlw	0
  5566     0B2C  00F5               	movwf	I2C_Master_Write@d+1
  5567     0B2D  120A  158A  20D8  120A  158A  	fcall	_I2C_Master_Write
  5568                           
  5569                           ;RTC.c: 94:     I2C_Master_RepeatedStart();
  5570     0B32  120A  158A  20BD  120A  158A  	fcall	_I2C_Master_RepeatedStart
  5571                           
  5572                           ;RTC.c: 95:     I2C_Master_Write(0xD1);
  5573     0B37  30D1               	movlw	209
  5574     0B38  00F4               	movwf	I2C_Master_Write@d
  5575     0B39  3000               	movlw	0
  5576     0B3A  00F5               	movwf	I2C_Master_Write@d+1
  5577     0B3B  120A  158A  20D8  120A  158A  	fcall	_I2C_Master_Write
  5578                           
  5579                           ;RTC.c: 96:     dia = I2C_Master_Read(0);
  5580     0B40  3000               	movlw	0
  5581     0B41  00F4               	movwf	I2C_Master_Read@a
  5582     0B42  00F5               	movwf	I2C_Master_Read@a+1
  5583     0B43  120A  158A  21BB  120A  158A  	fcall	_I2C_Master_Read
  5584     0B48  0874               	movf	?_I2C_Master_Read,w
  5585     0B49  1283               	bcf	3,5	;RP0=0, select bank0
  5586     0B4A  1303               	bcf	3,6	;RP1=0, select bank0
  5587     0B4B  00E0               	movwf	_dia
  5588                           
  5589                           ;RTC.c: 97:     I2C_Master_Stop();
  5590     0B4C  120A  158A  20CF  120A  158A  	fcall	_I2C_Master_Stop
  5591                           
  5592                           ;RTC.c: 99:     dia = conv(dia);
  5593     0B51  1283               	bcf	3,5	;RP0=0, select bank0
  5594     0B52  1303               	bcf	3,6	;RP1=0, select bank0
  5595     0B53  0860               	movf	_dia,w
  5596     0B54  120A  158A  212F  120A  158A  	fcall	_conv
  5597     0B59  1283               	bcf	3,5	;RP0=0, select bank0
  5598     0B5A  1303               	bcf	3,6	;RP1=0, select bank0
  5599     0B5B  00E0               	movwf	_dia
  5600     0B5C                     l3572:
  5601                           
  5602                           ;RTC.c: 100:     return dia;
  5603     0B5C  0860               	movf	_dia,w
  5604     0B5D                     l397:
  5605     0B5D  0008               	return
  5606     0B5E                     __end_of_leer_dia:
  5607                           
  5608                           	psect	text21
  5609     0AD8                     __ptext21:	
  5610 ;; *************** function _leer_ano *****************
  5611 ;; Defined at:
  5612 ;;		line 116 in file "RTC.c"
  5613 ;; Parameters:    Size  Location     Type
  5614 ;;		None
  5615 ;; Auto vars:     Size  Location     Type
  5616 ;;		None
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  1    wreg      unsigned char 
  5619 ;; Registers used:
  5620 ;;		wreg, status,2, status,0, pclath, cstack
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5626 ;;      Params:         0       0       0       0       0
  5627 ;;      Locals:         0       0       0       0       0
  5628 ;;      Temps:          0       0       0       0       0
  5629 ;;      Totals:         0       0       0       0       0
  5630 ;;Total ram usage:        0 bytes
  5631 ;; Hardware stack levels used: 1
  5632 ;; Hardware stack levels required when called: 3
  5633 ;; This function calls:
  5634 ;;		_I2C_Master_Read
  5635 ;;		_I2C_Master_RepeatedStart
  5636 ;;		_I2C_Master_Start
  5637 ;;		_I2C_Master_Stop
  5638 ;;		_I2C_Master_Write
  5639 ;;		_conv
  5640 ;; This function is called by:
  5641 ;;		_main
  5642 ;; This function uses a non-reentrant model
  5643 ;;
  5644                           
  5645     0AD8                     _leer_ano:	
  5646                           ;psect for function _leer_ano
  5647                           
  5648     0AD8                     l3582:	
  5649                           ;incstack = 0
  5650                           ; Regs used in _leer_ano: [wreg+status,2+status,0+pclath+cstack]
  5651                           
  5652                           
  5653                           ;RTC.c: 118:     I2C_Master_Start();
  5654     0AD8  120A  158A  20C6  120A  158A  	fcall	_I2C_Master_Start
  5655                           
  5656                           ;RTC.c: 119:     I2C_Master_Write(0xD0);
  5657     0ADD  30D0               	movlw	208
  5658     0ADE  00F4               	movwf	I2C_Master_Write@d
  5659     0ADF  3000               	movlw	0
  5660     0AE0  00F5               	movwf	I2C_Master_Write@d+1
  5661     0AE1  120A  158A  20D8  120A  158A  	fcall	_I2C_Master_Write
  5662                           
  5663                           ;RTC.c: 120:     I2C_Master_Write(0x06);
  5664     0AE6  3006               	movlw	6
  5665     0AE7  00F4               	movwf	I2C_Master_Write@d
  5666     0AE8  3000               	movlw	0
  5667     0AE9  00F5               	movwf	I2C_Master_Write@d+1
  5668     0AEA  120A  158A  20D8  120A  158A  	fcall	_I2C_Master_Write
  5669                           
  5670                           ;RTC.c: 121:     I2C_Master_RepeatedStart();
  5671     0AEF  120A  158A  20BD  120A  158A  	fcall	_I2C_Master_RepeatedStart
  5672                           
  5673                           ;RTC.c: 122:     I2C_Master_Write(0xD1);
  5674     0AF4  30D1               	movlw	209
  5675     0AF5  00F4               	movwf	I2C_Master_Write@d
  5676     0AF6  3000               	movlw	0
  5677     0AF7  00F5               	movwf	I2C_Master_Write@d+1
  5678     0AF8  120A  158A  20D8  120A  158A  	fcall	_I2C_Master_Write
  5679                           
  5680                           ;RTC.c: 123:     ano = I2C_Master_Read(0);
  5681     0AFD  3000               	movlw	0
  5682     0AFE  00F4               	movwf	I2C_Master_Read@a
  5683     0AFF  00F5               	movwf	I2C_Master_Read@a+1
  5684     0B00  120A  158A  21BB  120A  158A  	fcall	_I2C_Master_Read
  5685     0B05  0874               	movf	?_I2C_Master_Read,w
  5686     0B06  1283               	bcf	3,5	;RP0=0, select bank0
  5687     0B07  1303               	bcf	3,6	;RP1=0, select bank0
  5688     0B08  00DE               	movwf	_ano
  5689                           
  5690                           ;RTC.c: 124:     I2C_Master_Stop();
  5691     0B09  120A  158A  20CF  120A  158A  	fcall	_I2C_Master_Stop
  5692                           
  5693                           ;RTC.c: 126:     ano = conv(ano);
  5694     0B0E  1283               	bcf	3,5	;RP0=0, select bank0
  5695     0B0F  1303               	bcf	3,6	;RP1=0, select bank0
  5696     0B10  085E               	movf	_ano,w
  5697     0B11  120A  158A  212F  120A  158A  	fcall	_conv
  5698     0B16  1283               	bcf	3,5	;RP0=0, select bank0
  5699     0B17  1303               	bcf	3,6	;RP1=0, select bank0
  5700     0B18  00DE               	movwf	_ano
  5701     0B19                     l3584:
  5702                           
  5703                           ;RTC.c: 127:     return ano;
  5704     0B19  085E               	movf	_ano,w
  5705     0B1A                     l403:
  5706     0B1A  0008               	return
  5707     0B1B                     __end_of_leer_ano:
  5708                           
  5709                           	psect	text22
  5710     092F                     __ptext22:	
  5711 ;; *************** function _conv *****************
  5712 ;; Defined at:
  5713 ;;		line 23 in file "RTC.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;  valor           1    wreg     unsigned char 
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;  valor           1    6[BANK0 ] unsigned char 
  5718 ;;  convertido      1    5[BANK0 ] unsigned char 
  5719 ;;  dec             1    4[BANK0 ] unsigned char 
  5720 ;;  un              1    3[BANK0 ] unsigned char 
  5721 ;; Return value:  Size  Location     Type
  5722 ;;                  1    wreg      unsigned char 
  5723 ;; Registers used:
  5724 ;;		wreg, status,2, status,0, pclath, cstack
  5725 ;; Tracked objects:
  5726 ;;		On entry : 0/0
  5727 ;;		On exit  : 0/0
  5728 ;;		Unchanged: 0/0
  5729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5730 ;;      Params:         0       0       0       0       0
  5731 ;;      Locals:         0       4       0       0       0
  5732 ;;      Temps:          0       1       0       0       0
  5733 ;;      Totals:         0       5       0       0       0
  5734 ;;Total ram usage:        5 bytes
  5735 ;; Hardware stack levels used: 1
  5736 ;; Hardware stack levels required when called: 2
  5737 ;; This function calls:
  5738 ;;		___bmul
  5739 ;; This function is called by:
  5740 ;;		_leer_min
  5741 ;;		_leer_sec
  5742 ;;		_leer_dia
  5743 ;;		_leer_ano
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747     092F                     _conv:	
  5748                           ;psect for function _conv
  5749                           
  5750                           
  5751                           ;incstack = 0
  5752                           ; Regs used in _conv: [wreg+status,2+status,0+pclath+cstack]
  5753                           ;conv@valor stored from wreg
  5754     092F  1283               	bcf	3,5	;RP0=0, select bank0
  5755     0930  1303               	bcf	3,6	;RP1=0, select bank0
  5756     0931  00A6               	movwf	conv@valor
  5757     0932                     l3294:
  5758                           
  5759                           ;RTC.c: 25:     uint8_t un;;RTC.c: 26:     uint8_t dec;;RTC.c: 27:     uint8_t convertid
      +                          o;;RTC.c: 28:     un = valor & 0x0F;
  5760     0932  0826               	movf	conv@valor,w
  5761     0933  390F               	andlw	15
  5762     0934  00A3               	movwf	conv@un
  5763     0935                     l3296:
  5764                           
  5765                           ;RTC.c: 29:     dec = ((valor & 0xF0)>>4);
  5766     0935  0826               	movf	conv@valor,w
  5767     0936  00A2               	movwf	??_conv
  5768     0937  3004               	movlw	4
  5769     0938                     u3075:
  5770     0938  1003               	clrc
  5771     0939  0CA2               	rrf	??_conv,f
  5772     093A  3EFF               	addlw	-1
  5773     093B  1D03               	skipz
  5774     093C  2938               	goto	u3075
  5775     093D  0822               	movf	??_conv,w
  5776     093E  390F               	andlw	15
  5777     093F  00A4               	movwf	conv@dec
  5778     0940                     l3298:
  5779                           
  5780                           ;RTC.c: 30:     convertido = un+(dec*10);
  5781     0940  300A               	movlw	10
  5782     0941  00F4               	movwf	___bmul@multiplicand
  5783     0942  0824               	movf	conv@dec,w
  5784     0943  120A  158A  20FC  120A  158A  	fcall	___bmul
  5785     0948  1283               	bcf	3,5	;RP0=0, select bank0
  5786     0949  1303               	bcf	3,6	;RP1=0, select bank0
  5787     094A  0723               	addwf	conv@un,w
  5788     094B  00A5               	movwf	conv@convertido
  5789     094C                     l3300:
  5790                           
  5791                           ;RTC.c: 31:     return convertido;
  5792     094C  0825               	movf	conv@convertido,w
  5793     094D                     l382:
  5794     094D  0008               	return
  5795     094E                     __end_of_conv:
  5796                           
  5797                           	psect	text23
  5798     08FC                     __ptext23:	
  5799 ;; *************** function ___bmul *****************
  5800 ;; Defined at:
  5801 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  5802 ;; Parameters:    Size  Location     Type
  5803 ;;  multiplier      1    wreg     unsigned char 
  5804 ;;  multiplicand    1    4[COMMON] unsigned char 
  5805 ;; Auto vars:     Size  Location     Type
  5806 ;;  multiplier      1    1[BANK0 ] unsigned char 
  5807 ;;  product         1    0[BANK0 ] unsigned char 
  5808 ;; Return value:  Size  Location     Type
  5809 ;;                  1    wreg      unsigned char 
  5810 ;; Registers used:
  5811 ;;		wreg, status,2, status,0
  5812 ;; Tracked objects:
  5813 ;;		On entry : 0/0
  5814 ;;		On exit  : 0/0
  5815 ;;		Unchanged: 0/0
  5816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5817 ;;      Params:         1       0       0       0       0
  5818 ;;      Locals:         0       2       0       0       0
  5819 ;;      Temps:          1       0       0       0       0
  5820 ;;      Totals:         2       2       0       0       0
  5821 ;;Total ram usage:        4 bytes
  5822 ;; Hardware stack levels used: 1
  5823 ;; Hardware stack levels required when called: 1
  5824 ;; This function calls:
  5825 ;;		Nothing
  5826 ;; This function is called by:
  5827 ;;		_conv
  5828 ;;		_convh
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           
  5832     08FC                     ___bmul:	
  5833                           ;psect for function ___bmul
  5834                           
  5835                           
  5836                           ;incstack = 0
  5837                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5838                           ;___bmul@multiplier stored from wreg
  5839     08FC  1283               	bcf	3,5	;RP0=0, select bank0
  5840     08FD  1303               	bcf	3,6	;RP1=0, select bank0
  5841     08FE  00A1               	movwf	___bmul@multiplier
  5842     08FF                     l3084:
  5843     08FF  01A0               	clrf	___bmul@product
  5844     0900                     l3086:
  5845     0900  1C21               	btfss	___bmul@multiplier,0
  5846     0901  2903               	goto	u2731
  5847     0902  2904               	goto	u2730
  5848     0903                     u2731:
  5849     0903  2908               	goto	l3090
  5850     0904                     u2730:
  5851     0904                     l3088:
  5852     0904  0874               	movf	___bmul@multiplicand,w
  5853     0905  00F5               	movwf	??___bmul
  5854     0906  0875               	movf	??___bmul,w
  5855     0907  07A0               	addwf	___bmul@product,f
  5856     0908                     l3090:
  5857     0908  1003               	clrc
  5858     0909  0DF4               	rlf	___bmul@multiplicand,f
  5859     090A                     l3092:
  5860     090A  1003               	clrc
  5861     090B  0CA1               	rrf	___bmul@multiplier,f
  5862     090C  0821               	movf	___bmul@multiplier,w
  5863     090D  1D03               	btfss	3,2
  5864     090E  2910               	goto	u2741
  5865     090F  2911               	goto	u2740
  5866     0910                     u2741:
  5867     0910  2900               	goto	l3086
  5868     0911                     u2740:
  5869     0911                     l3094:
  5870     0911  0820               	movf	___bmul@product,w
  5871     0912                     l592:
  5872     0912  0008               	return
  5873     0913                     __end_of___bmul:
  5874                           
  5875                           	psect	text24
  5876     08D8                     __ptext24:	
  5877 ;; *************** function _I2C_Master_Write *****************
  5878 ;; Defined at:
  5879 ;;		line 65 in file "I2C.c"
  5880 ;; Parameters:    Size  Location     Type
  5881 ;;  d               2    4[COMMON] unsigned int 
  5882 ;; Auto vars:     Size  Location     Type
  5883 ;;		None
  5884 ;; Return value:  Size  Location     Type
  5885 ;;                  1    wreg      void 
  5886 ;; Registers used:
  5887 ;;		wreg, status,2, status,0, pclath, cstack
  5888 ;; Tracked objects:
  5889 ;;		On entry : 0/0
  5890 ;;		On exit  : 0/0
  5891 ;;		Unchanged: 0/0
  5892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5893 ;;      Params:         2       0       0       0       0
  5894 ;;      Locals:         0       0       0       0       0
  5895 ;;      Temps:          0       0       0       0       0
  5896 ;;      Totals:         2       0       0       0       0
  5897 ;;Total ram usage:        2 bytes
  5898 ;; Hardware stack levels used: 1
  5899 ;; Hardware stack levels required when called: 2
  5900 ;; This function calls:
  5901 ;;		_I2C_Master_Wait
  5902 ;; This function is called by:
  5903 ;;		_main
  5904 ;;		_modoboton
  5905 ;;		_leer_hora
  5906 ;;		_leer_min
  5907 ;;		_leer_sec
  5908 ;;		_leer_dia
  5909 ;;		_leer_mes
  5910 ;;		_leer_ano
  5911 ;; This function uses a non-reentrant model
  5912 ;;
  5913                           
  5914     08D8                     _I2C_Master_Write:	
  5915                           ;psect for function _I2C_Master_Write
  5916                           
  5917     08D8                     l3202:	
  5918                           ;incstack = 0
  5919                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  5920                           
  5921                           
  5922                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  5923     08D8  120A  158A  20EF  120A  158A  	fcall	_I2C_Master_Wait
  5924     08DD                     l3204:
  5925                           
  5926                           ;I2C.c: 68:     SSPBUF = d;
  5927     08DD  0874               	movf	I2C_Master_Write@d,w
  5928     08DE  1283               	bcf	3,5	;RP0=0, select bank0
  5929     08DF  1303               	bcf	3,6	;RP1=0, select bank0
  5930     08E0  0093               	movwf	19	;volatile
  5931     08E1                     l345:
  5932     08E1  0008               	return
  5933     08E2                     __end_of_I2C_Master_Write:
  5934                           
  5935                           	psect	text25
  5936     08CF                     __ptext25:	
  5937 ;; *************** function _I2C_Master_Stop *****************
  5938 ;; Defined at:
  5939 ;;		line 55 in file "I2C.c"
  5940 ;; Parameters:    Size  Location     Type
  5941 ;;		None
  5942 ;; Auto vars:     Size  Location     Type
  5943 ;;		None
  5944 ;; Return value:  Size  Location     Type
  5945 ;;                  1    wreg      void 
  5946 ;; Registers used:
  5947 ;;		wreg, status,2, status,0, pclath, cstack
  5948 ;; Tracked objects:
  5949 ;;		On entry : 0/0
  5950 ;;		On exit  : 0/0
  5951 ;;		Unchanged: 0/0
  5952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5953 ;;      Params:         0       0       0       0       0
  5954 ;;      Locals:         0       0       0       0       0
  5955 ;;      Temps:          0       0       0       0       0
  5956 ;;      Totals:         0       0       0       0       0
  5957 ;;Total ram usage:        0 bytes
  5958 ;; Hardware stack levels used: 1
  5959 ;; Hardware stack levels required when called: 2
  5960 ;; This function calls:
  5961 ;;		_I2C_Master_Wait
  5962 ;; This function is called by:
  5963 ;;		_main
  5964 ;;		_modoboton
  5965 ;;		_leer_hora
  5966 ;;		_leer_min
  5967 ;;		_leer_sec
  5968 ;;		_leer_dia
  5969 ;;		_leer_mes
  5970 ;;		_leer_ano
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974     08CF                     _I2C_Master_Stop:	
  5975                           ;psect for function _I2C_Master_Stop
  5976                           
  5977     08CF                     l3222:	
  5978                           ;incstack = 0
  5979                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  5980                           
  5981                           
  5982                           ;I2C.c: 57:     I2C_Master_Wait();
  5983     08CF  120A  158A  20EF  120A  158A  	fcall	_I2C_Master_Wait
  5984     08D4                     l3224:
  5985                           
  5986                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  5987     08D4  1683               	bsf	3,5	;RP0=1, select bank1
  5988     08D5  1303               	bcf	3,6	;RP1=0, select bank1
  5989     08D6  1511               	bsf	17,2	;volatile
  5990     08D7                     l342:
  5991     08D7  0008               	return
  5992     08D8                     __end_of_I2C_Master_Stop:
  5993                           
  5994                           	psect	text26
  5995     08C6                     __ptext26:	
  5996 ;; *************** function _I2C_Master_Start *****************
  5997 ;; Defined at:
  5998 ;;		line 39 in file "I2C.c"
  5999 ;; Parameters:    Size  Location     Type
  6000 ;;		None
  6001 ;; Auto vars:     Size  Location     Type
  6002 ;;		None
  6003 ;; Return value:  Size  Location     Type
  6004 ;;                  1    wreg      void 
  6005 ;; Registers used:
  6006 ;;		wreg, status,2, status,0, pclath, cstack
  6007 ;; Tracked objects:
  6008 ;;		On entry : 0/0
  6009 ;;		On exit  : 0/0
  6010 ;;		Unchanged: 0/0
  6011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6012 ;;      Params:         0       0       0       0       0
  6013 ;;      Locals:         0       0       0       0       0
  6014 ;;      Temps:          0       0       0       0       0
  6015 ;;      Totals:         0       0       0       0       0
  6016 ;;Total ram usage:        0 bytes
  6017 ;; Hardware stack levels used: 1
  6018 ;; Hardware stack levels required when called: 2
  6019 ;; This function calls:
  6020 ;;		_I2C_Master_Wait
  6021 ;; This function is called by:
  6022 ;;		_main
  6023 ;;		_modoboton
  6024 ;;		_leer_hora
  6025 ;;		_leer_min
  6026 ;;		_leer_sec
  6027 ;;		_leer_dia
  6028 ;;		_leer_mes
  6029 ;;		_leer_ano
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032                           
  6033     08C6                     _I2C_Master_Start:	
  6034                           ;psect for function _I2C_Master_Start
  6035                           
  6036     08C6                     l3198:	
  6037                           ;incstack = 0
  6038                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  6039                           
  6040                           
  6041                           ;I2C.c: 41:     I2C_Master_Wait();
  6042     08C6  120A  158A  20EF  120A  158A  	fcall	_I2C_Master_Wait
  6043     08CB                     l3200:
  6044                           
  6045                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  6046     08CB  1683               	bsf	3,5	;RP0=1, select bank1
  6047     08CC  1303               	bcf	3,6	;RP1=0, select bank1
  6048     08CD  1411               	bsf	17,0	;volatile
  6049     08CE                     l336:
  6050     08CE  0008               	return
  6051     08CF                     __end_of_I2C_Master_Start:
  6052                           
  6053                           	psect	text27
  6054     08BD                     __ptext27:	
  6055 ;; *************** function _I2C_Master_RepeatedStart *****************
  6056 ;; Defined at:
  6057 ;;		line 47 in file "I2C.c"
  6058 ;; Parameters:    Size  Location     Type
  6059 ;;		None
  6060 ;; Auto vars:     Size  Location     Type
  6061 ;;		None
  6062 ;; Return value:  Size  Location     Type
  6063 ;;                  1    wreg      void 
  6064 ;; Registers used:
  6065 ;;		wreg, status,2, status,0, pclath, cstack
  6066 ;; Tracked objects:
  6067 ;;		On entry : 0/0
  6068 ;;		On exit  : 0/0
  6069 ;;		Unchanged: 0/0
  6070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6071 ;;      Params:         0       0       0       0       0
  6072 ;;      Locals:         0       0       0       0       0
  6073 ;;      Temps:          0       0       0       0       0
  6074 ;;      Totals:         0       0       0       0       0
  6075 ;;Total ram usage:        0 bytes
  6076 ;; Hardware stack levels used: 1
  6077 ;; Hardware stack levels required when called: 2
  6078 ;; This function calls:
  6079 ;;		_I2C_Master_Wait
  6080 ;; This function is called by:
  6081 ;;		_leer_hora
  6082 ;;		_leer_min
  6083 ;;		_leer_sec
  6084 ;;		_leer_dia
  6085 ;;		_leer_mes
  6086 ;;		_leer_ano
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089                           
  6090     08BD                     _I2C_Master_RepeatedStart:	
  6091                           ;psect for function _I2C_Master_RepeatedStart
  6092                           
  6093     08BD                     l3290:	
  6094                           ;incstack = 0
  6095                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  6096                           
  6097                           
  6098                           ;I2C.c: 49:     I2C_Master_Wait();
  6099     08BD  120A  158A  20EF  120A  158A  	fcall	_I2C_Master_Wait
  6100     08C2                     l3292:
  6101                           
  6102                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  6103     08C2  1683               	bsf	3,5	;RP0=1, select bank1
  6104     08C3  1303               	bcf	3,6	;RP1=0, select bank1
  6105     08C4  1491               	bsf	17,1	;volatile
  6106     08C5                     l339:
  6107     08C5  0008               	return
  6108     08C6                     __end_of_I2C_Master_RepeatedStart:
  6109                           
  6110                           	psect	text28
  6111     09BB                     __ptext28:	
  6112 ;; *************** function _I2C_Master_Read *****************
  6113 ;; Defined at:
  6114 ;;		line 74 in file "I2C.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;  a               2    4[COMMON] unsigned short 
  6117 ;; Auto vars:     Size  Location     Type
  6118 ;;  temp            2    2[BANK0 ] unsigned short 
  6119 ;; Return value:  Size  Location     Type
  6120 ;;                  2    4[COMMON] unsigned short 
  6121 ;; Registers used:
  6122 ;;		wreg, status,2, status,0, pclath, cstack
  6123 ;; Tracked objects:
  6124 ;;		On entry : 0/0
  6125 ;;		On exit  : 0/0
  6126 ;;		Unchanged: 0/0
  6127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6128 ;;      Params:         2       0       0       0       0
  6129 ;;      Locals:         0       2       0       0       0
  6130 ;;      Temps:          0       2       0       0       0
  6131 ;;      Totals:         2       4       0       0       0
  6132 ;;Total ram usage:        6 bytes
  6133 ;; Hardware stack levels used: 1
  6134 ;; Hardware stack levels required when called: 2
  6135 ;; This function calls:
  6136 ;;		_I2C_Master_Wait
  6137 ;; This function is called by:
  6138 ;;		_main
  6139 ;;		_leer_hora
  6140 ;;		_leer_min
  6141 ;;		_leer_sec
  6142 ;;		_leer_dia
  6143 ;;		_leer_mes
  6144 ;;		_leer_ano
  6145 ;; This function uses a non-reentrant model
  6146 ;;
  6147                           
  6148     09BB                     _I2C_Master_Read:	
  6149                           ;psect for function _I2C_Master_Read
  6150                           
  6151     09BB                     l3206:	
  6152                           ;incstack = 0
  6153                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  6154                           
  6155                           
  6156                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  6157     09BB  120A  158A  20EF  120A  158A  	fcall	_I2C_Master_Wait
  6158     09C0                     l3208:
  6159                           
  6160                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  6161     09C0  1683               	bsf	3,5	;RP0=1, select bank1
  6162     09C1  1303               	bcf	3,6	;RP1=0, select bank1
  6163     09C2  1591               	bsf	17,3	;volatile
  6164                           
  6165                           ;I2C.c: 79:     I2C_Master_Wait();
  6166     09C3  120A  158A  20EF  120A  158A  	fcall	_I2C_Master_Wait
  6167     09C8                     l3210:
  6168                           
  6169                           ;I2C.c: 80:     temp = SSPBUF;
  6170     09C8  1283               	bcf	3,5	;RP0=0, select bank0
  6171     09C9  1303               	bcf	3,6	;RP1=0, select bank0
  6172     09CA  0813               	movf	19,w	;volatile
  6173     09CB  00A0               	movwf	??_I2C_Master_Read
  6174     09CC  01A1               	clrf	??_I2C_Master_Read+1
  6175     09CD  0820               	movf	??_I2C_Master_Read,w
  6176     09CE  00A2               	movwf	I2C_Master_Read@temp
  6177     09CF  0821               	movf	??_I2C_Master_Read+1,w
  6178     09D0  00A3               	movwf	I2C_Master_Read@temp+1
  6179     09D1                     l3212:
  6180                           
  6181                           ;I2C.c: 81:     I2C_Master_Wait();
  6182     09D1  120A  158A  20EF  120A  158A  	fcall	_I2C_Master_Wait
  6183     09D6                     l3214:
  6184                           
  6185                           ;I2C.c: 82:     if(a == 1){
  6186     09D6  0374               	decf	I2C_Master_Read@a,w
  6187     09D7  0475               	iorwf	I2C_Master_Read@a+1,w
  6188     09D8  1D03               	btfss	3,2
  6189     09D9  29DB               	goto	u3001
  6190     09DA  29DC               	goto	u3000
  6191     09DB                     u3001:
  6192     09DB  29E0               	goto	l348
  6193     09DC                     u3000:
  6194     09DC                     l3216:
  6195                           
  6196                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  6197     09DC  1683               	bsf	3,5	;RP0=1, select bank1
  6198     09DD  1303               	bcf	3,6	;RP1=0, select bank1
  6199     09DE  1291               	bcf	17,5	;volatile
  6200                           
  6201                           ;I2C.c: 84:     }else{
  6202     09DF  29E3               	goto	l349
  6203     09E0                     l348:
  6204                           
  6205                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  6206     09E0  1683               	bsf	3,5	;RP0=1, select bank1
  6207     09E1  1303               	bcf	3,6	;RP1=0, select bank1
  6208     09E2  1691               	bsf	17,5	;volatile
  6209     09E3                     l349:	
  6210                           ;I2C.c: 86:     }
  6211                           
  6212                           
  6213                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  6214     09E3  1611               	bsf	17,4	;volatile
  6215     09E4                     l3218:
  6216                           
  6217                           ;I2C.c: 88:     return temp;
  6218     09E4  1283               	bcf	3,5	;RP0=0, select bank0
  6219     09E5  1303               	bcf	3,6	;RP1=0, select bank0
  6220     09E6  0823               	movf	I2C_Master_Read@temp+1,w
  6221     09E7  00F5               	movwf	?_I2C_Master_Read+1
  6222     09E8  0822               	movf	I2C_Master_Read@temp,w
  6223     09E9  00F4               	movwf	?_I2C_Master_Read
  6224     09EA                     l350:
  6225     09EA  0008               	return
  6226     09EB                     __end_of_I2C_Master_Read:
  6227                           
  6228                           	psect	text29
  6229     08EF                     __ptext29:	
  6230 ;; *************** function _I2C_Master_Wait *****************
  6231 ;; Defined at:
  6232 ;;		line 32 in file "I2C.c"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;		None
  6235 ;; Auto vars:     Size  Location     Type
  6236 ;;		None
  6237 ;; Return value:  Size  Location     Type
  6238 ;;                  1    wreg      void 
  6239 ;; Registers used:
  6240 ;;		wreg, status,2
  6241 ;; Tracked objects:
  6242 ;;		On entry : 0/0
  6243 ;;		On exit  : 0/0
  6244 ;;		Unchanged: 0/0
  6245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6246 ;;      Params:         0       0       0       0       0
  6247 ;;      Locals:         0       0       0       0       0
  6248 ;;      Temps:          0       0       0       0       0
  6249 ;;      Totals:         0       0       0       0       0
  6250 ;;Total ram usage:        0 bytes
  6251 ;; Hardware stack levels used: 1
  6252 ;; Hardware stack levels required when called: 1
  6253 ;; This function calls:
  6254 ;;		Nothing
  6255 ;; This function is called by:
  6256 ;;		_I2C_Master_Start
  6257 ;;		_I2C_Master_RepeatedStart
  6258 ;;		_I2C_Master_Stop
  6259 ;;		_I2C_Master_Write
  6260 ;;		_I2C_Master_Read
  6261 ;; This function uses a non-reentrant model
  6262 ;;
  6263                           
  6264     08EF                     _I2C_Master_Wait:	
  6265                           ;psect for function _I2C_Master_Wait
  6266                           
  6267     08EF                     l3080:	
  6268                           ;incstack = 0
  6269                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  6270                           
  6271     08EF                     l330:	
  6272                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  6273                           
  6274     08EF  1683               	bsf	3,5	;RP0=1, select bank1
  6275     08F0  1303               	bcf	3,6	;RP1=0, select bank1
  6276     08F1  1914               	btfsc	20,2	;volatile
  6277     08F2  28F4               	goto	u2711
  6278     08F3  28F5               	goto	u2710
  6279     08F4                     u2711:
  6280     08F4  28EF               	goto	l330
  6281     08F5                     u2710:
  6282     08F5                     l3082:
  6283     08F5  0811               	movf	17,w	;volatile
  6284     08F6  391F               	andlw	31
  6285     08F7  1D03               	btfss	3,2
  6286     08F8  28FA               	goto	u2721
  6287     08F9  28FB               	goto	u2720
  6288     08FA                     u2721:
  6289     08FA  28EF               	goto	l330
  6290     08FB                     u2720:
  6291     08FB                     l333:
  6292     08FB  0008               	return
  6293     08FC                     __end_of_I2C_Master_Wait:
  6294                           
  6295                           	psect	text30
  6296     0CFB                     __ptext30:	
  6297 ;; *************** function _inttochar *****************
  6298 ;; Defined at:
  6299 ;;		line 12 in file "conversiones.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;  num             1    wreg     unsigned char 
  6302 ;; Auto vars:     Size  Location     Type
  6303 ;;  num             1    4[COMMON] unsigned char 
  6304 ;; Return value:  Size  Location     Type
  6305 ;;                  1    wreg      unsigned char 
  6306 ;; Registers used:
  6307 ;;		wreg, status,2, status,0
  6308 ;; Tracked objects:
  6309 ;;		On entry : 0/0
  6310 ;;		On exit  : 0/0
  6311 ;;		Unchanged: 0/0
  6312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6313 ;;      Params:         0       0       0       0       0
  6314 ;;      Locals:         1       0       0       0       0
  6315 ;;      Temps:          0       0       0       0       0
  6316 ;;      Totals:         1       0       0       0       0
  6317 ;;Total ram usage:        1 bytes
  6318 ;; Hardware stack levels used: 1
  6319 ;; Hardware stack levels required when called: 1
  6320 ;; This function calls:
  6321 ;;		Nothing
  6322 ;; This function is called by:
  6323 ;;		_main
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327     0CFB                     _inttochar:	
  6328                           ;psect for function _inttochar
  6329                           
  6330                           
  6331                           ;incstack = 0
  6332                           ; Regs used in _inttochar: [wreg+status,2+status,0]
  6333                           ;inttochar@num stored from wreg
  6334     0CFB  00F4               	movwf	inttochar@num
  6335     0CFC                     l2728:
  6336                           
  6337                           ;conversiones.c: 13:     if(num == 0){
  6338     0CFC  0874               	movf	inttochar@num,w
  6339     0CFD  1D03               	btfss	3,2
  6340     0CFE  2D00               	goto	u2431
  6341     0CFF  2D01               	goto	u2430
  6342     0D00                     u2431:
  6343     0D00  2D03               	goto	l2736
  6344     0D01                     u2430:
  6345     0D01                     l2730:
  6346                           
  6347                           ;conversiones.c: 14:         return '0';
  6348     0D01  3030               	movlw	48
  6349     0D02  2D4A               	goto	l407
  6350     0D03                     l2736:
  6351     0D03  0374               	decf	inttochar@num,w
  6352     0D04  1D03               	btfss	3,2
  6353     0D05  2D07               	goto	u2441
  6354     0D06  2D08               	goto	u2440
  6355     0D07                     u2441:
  6356     0D07  2D0A               	goto	l2744
  6357     0D08                     u2440:
  6358     0D08                     l2738:
  6359                           
  6360                           ;conversiones.c: 17:         return '1';
  6361     0D08  3031               	movlw	49
  6362     0D09  2D4A               	goto	l407
  6363     0D0A                     l2744:
  6364     0D0A  3002               	movlw	2
  6365     0D0B  0674               	xorwf	inttochar@num,w
  6366     0D0C  1D03               	btfss	3,2
  6367     0D0D  2D0F               	goto	u2451
  6368     0D0E  2D10               	goto	u2450
  6369     0D0F                     u2451:
  6370     0D0F  2D12               	goto	l2752
  6371     0D10                     u2450:
  6372     0D10                     l2746:
  6373                           
  6374                           ;conversiones.c: 20:         return '2';
  6375     0D10  3032               	movlw	50
  6376     0D11  2D4A               	goto	l407
  6377     0D12                     l2752:
  6378     0D12  3003               	movlw	3
  6379     0D13  0674               	xorwf	inttochar@num,w
  6380     0D14  1D03               	btfss	3,2
  6381     0D15  2D17               	goto	u2461
  6382     0D16  2D18               	goto	u2460
  6383     0D17                     u2461:
  6384     0D17  2D1A               	goto	l2760
  6385     0D18                     u2460:
  6386     0D18                     l2754:
  6387                           
  6388                           ;conversiones.c: 23:         return '3';
  6389     0D18  3033               	movlw	51
  6390     0D19  2D4A               	goto	l407
  6391     0D1A                     l2760:
  6392     0D1A  3004               	movlw	4
  6393     0D1B  0674               	xorwf	inttochar@num,w
  6394     0D1C  1D03               	btfss	3,2
  6395     0D1D  2D1F               	goto	u2471
  6396     0D1E  2D20               	goto	u2470
  6397     0D1F                     u2471:
  6398     0D1F  2D22               	goto	l2768
  6399     0D20                     u2470:
  6400     0D20                     l2762:
  6401                           
  6402                           ;conversiones.c: 26:         return '4';
  6403     0D20  3034               	movlw	52
  6404     0D21  2D4A               	goto	l407
  6405     0D22                     l2768:
  6406     0D22  3005               	movlw	5
  6407     0D23  0674               	xorwf	inttochar@num,w
  6408     0D24  1D03               	btfss	3,2
  6409     0D25  2D27               	goto	u2481
  6410     0D26  2D28               	goto	u2480
  6411     0D27                     u2481:
  6412     0D27  2D2A               	goto	l2776
  6413     0D28                     u2480:
  6414     0D28                     l2770:
  6415                           
  6416                           ;conversiones.c: 29:         return '5';
  6417     0D28  3035               	movlw	53
  6418     0D29  2D4A               	goto	l407
  6419     0D2A                     l2776:
  6420     0D2A  3006               	movlw	6
  6421     0D2B  0674               	xorwf	inttochar@num,w
  6422     0D2C  1D03               	btfss	3,2
  6423     0D2D  2D2F               	goto	u2491
  6424     0D2E  2D30               	goto	u2490
  6425     0D2F                     u2491:
  6426     0D2F  2D32               	goto	l2784
  6427     0D30                     u2490:
  6428     0D30                     l2778:
  6429                           
  6430                           ;conversiones.c: 32:         return '6';
  6431     0D30  3036               	movlw	54
  6432     0D31  2D4A               	goto	l407
  6433     0D32                     l2784:
  6434     0D32  3007               	movlw	7
  6435     0D33  0674               	xorwf	inttochar@num,w
  6436     0D34  1D03               	btfss	3,2
  6437     0D35  2D37               	goto	u2501
  6438     0D36  2D38               	goto	u2500
  6439     0D37                     u2501:
  6440     0D37  2D3A               	goto	l2792
  6441     0D38                     u2500:
  6442     0D38                     l2786:
  6443                           
  6444                           ;conversiones.c: 35:         return '7';
  6445     0D38  3037               	movlw	55
  6446     0D39  2D4A               	goto	l407
  6447     0D3A                     l2792:
  6448     0D3A  3008               	movlw	8
  6449     0D3B  0674               	xorwf	inttochar@num,w
  6450     0D3C  1D03               	btfss	3,2
  6451     0D3D  2D3F               	goto	u2511
  6452     0D3E  2D40               	goto	u2510
  6453     0D3F                     u2511:
  6454     0D3F  2D42               	goto	l2800
  6455     0D40                     u2510:
  6456     0D40                     l2794:
  6457                           
  6458                           ;conversiones.c: 38:         return '8';
  6459     0D40  3038               	movlw	56
  6460     0D41  2D4A               	goto	l407
  6461     0D42                     l2800:
  6462     0D42  3009               	movlw	9
  6463     0D43  0674               	xorwf	inttochar@num,w
  6464     0D44  1D03               	btfss	3,2
  6465     0D45  2D47               	goto	u2521
  6466     0D46  2D48               	goto	u2520
  6467     0D47                     u2521:
  6468     0D47  2D4A               	goto	l420
  6469     0D48                     u2520:
  6470     0D48                     l2802:
  6471                           
  6472                           ;conversiones.c: 41:         return '9';
  6473     0D48  3039               	movlw	57
  6474     0D49  2D4A               	goto	l407
  6475     0D4A                     l420:
  6476     0D4A                     l407:
  6477     0D4A  0008               	return
  6478     0D4B                     __end_of_inttochar:
  6479                           
  6480                           	psect	text31
  6481     0E5D                     __ptext31:	
  6482 ;; *************** function _descomponer *****************
  6483 ;; Defined at:
  6484 ;;		line 45 in file "conversiones.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;  pos             2   12[BANK0 ] int 
  6487 ;;  num             2   14[BANK0 ] unsigned int 
  6488 ;; Auto vars:     Size  Location     Type
  6489 ;;  dec             1   20[BANK0 ] unsigned char 
  6490 ;;  uni             1   19[BANK0 ] unsigned char 
  6491 ;;  cent            1   18[BANK0 ] unsigned char 
  6492 ;; Return value:  Size  Location     Type
  6493 ;;                  1    wreg      unsigned char 
  6494 ;; Registers used:
  6495 ;;		wreg, status,2, status,0, pclath, cstack
  6496 ;; Tracked objects:
  6497 ;;		On entry : 0/0
  6498 ;;		On exit  : 0/0
  6499 ;;		Unchanged: 0/0
  6500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6501 ;;      Params:         0       4       0       0       0
  6502 ;;      Locals:         0       3       0       0       0
  6503 ;;      Temps:          0       2       0       0       0
  6504 ;;      Totals:         0       9       0       0       0
  6505 ;;Total ram usage:        9 bytes
  6506 ;; Hardware stack levels used: 1
  6507 ;; Hardware stack levels required when called: 2
  6508 ;; This function calls:
  6509 ;;		___awdiv
  6510 ;;		___awmod
  6511 ;;		___lwdiv
  6512 ;;		___lwmod
  6513 ;; This function is called by:
  6514 ;;		_main
  6515 ;; This function uses a non-reentrant model
  6516 ;;
  6517                           
  6518     0E5D                     _descomponer:	
  6519                           ;psect for function _descomponer
  6520                           
  6521     0E5D                     l3534:	
  6522                           ;incstack = 0
  6523                           ; Regs used in _descomponer: [wreg+status,2+status,0+pclath+cstack]
  6524                           
  6525                           
  6526                           ;conversiones.c: 46:     uint8_t cent;;conversiones.c: 47:     uint8_t dec;;conversiones
      +                          .c: 48:     uint8_t uni;;conversiones.c: 49:     cent = (num/100);
  6527     0E5D  3064               	movlw	100
  6528     0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  6529     0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  6530     0E60  00A0               	movwf	___lwdiv@divisor
  6531     0E61  3000               	movlw	0
  6532     0E62  00A1               	movwf	___lwdiv@divisor+1
  6533     0E63  082F               	movf	descomponer@num+1,w
  6534     0E64  00A3               	movwf	___lwdiv@dividend+1
  6535     0E65  082E               	movf	descomponer@num,w
  6536     0E66  00A2               	movwf	___lwdiv@dividend
  6537     0E67  120A  158A  2427  120A  158A  	fcall	___lwdiv
  6538     0E6C  1283               	bcf	3,5	;RP0=0, select bank0
  6539     0E6D  1303               	bcf	3,6	;RP1=0, select bank0
  6540     0E6E  0820               	movf	?___lwdiv,w
  6541     0E6F  00B2               	movwf	descomponer@cent
  6542                           
  6543                           ;conversiones.c: 50:     dec = (num%100);
  6544     0E70  3064               	movlw	100
  6545     0E71  00A7               	movwf	___lwmod@divisor
  6546     0E72  3000               	movlw	0
  6547     0E73  00A8               	movwf	___lwmod@divisor+1
  6548     0E74  082F               	movf	descomponer@num+1,w
  6549     0E75  00AA               	movwf	___lwmod@dividend+1
  6550     0E76  082E               	movf	descomponer@num,w
  6551     0E77  00A9               	movwf	___lwmod@dividend
  6552     0E78  120A  158A  225A  120A  158A  	fcall	___lwmod
  6553     0E7D  1283               	bcf	3,5	;RP0=0, select bank0
  6554     0E7E  1303               	bcf	3,6	;RP1=0, select bank0
  6555     0E7F  0827               	movf	?___lwmod,w
  6556     0E80  00B4               	movwf	descomponer@dec
  6557                           
  6558                           ;conversiones.c: 51:     uni = (dec%10);
  6559     0E81  300A               	movlw	10
  6560     0E82  00A0               	movwf	___awmod@divisor
  6561     0E83  3000               	movlw	0
  6562     0E84  00A1               	movwf	___awmod@divisor+1
  6563     0E85  0834               	movf	descomponer@dec,w
  6564     0E86  00B0               	movwf	??_descomponer
  6565     0E87  01B1               	clrf	??_descomponer+1
  6566     0E88  0830               	movf	??_descomponer,w
  6567     0E89  00A2               	movwf	___awmod@dividend
  6568     0E8A  0831               	movf	??_descomponer+1,w
  6569     0E8B  00A3               	movwf	___awmod@dividend+1
  6570     0E8C  120A  158A  25A3  120A  158A  	fcall	___awmod
  6571     0E91  1283               	bcf	3,5	;RP0=0, select bank0
  6572     0E92  1303               	bcf	3,6	;RP1=0, select bank0
  6573     0E93  0820               	movf	?___awmod,w
  6574     0E94  00B3               	movwf	descomponer@uni
  6575     0E95                     l3536:
  6576                           
  6577                           ;conversiones.c: 52:     if(pos == 2){
  6578     0E95  3002               	movlw	2
  6579     0E96  062C               	xorwf	descomponer@pos,w
  6580     0E97  042D               	iorwf	descomponer@pos+1,w
  6581     0E98  1D03               	btfss	3,2
  6582     0E99  2E9B               	goto	u3361
  6583     0E9A  2E9C               	goto	u3360
  6584     0E9B                     u3361:
  6585     0E9B  2E9E               	goto	l3544
  6586     0E9C                     u3360:
  6587     0E9C                     l3538:
  6588                           
  6589                           ;conversiones.c: 53:         return cent;
  6590     0E9C  0832               	movf	descomponer@cent,w
  6591     0E9D  2EBF               	goto	l429
  6592     0E9E                     l3544:
  6593     0E9E  032C               	decf	descomponer@pos,w
  6594     0E9F  042D               	iorwf	descomponer@pos+1,w
  6595     0EA0  1D03               	btfss	3,2
  6596     0EA1  2EA3               	goto	u3371
  6597     0EA2  2EA4               	goto	u3370
  6598     0EA3                     u3371:
  6599     0EA3  2EB8               	goto	l3552
  6600     0EA4                     u3370:
  6601     0EA4                     l3546:
  6602                           
  6603                           ;conversiones.c: 56:         return (dec/10);
  6604     0EA4  300A               	movlw	10
  6605     0EA5  00A0               	movwf	___awdiv@divisor
  6606     0EA6  3000               	movlw	0
  6607     0EA7  00A1               	movwf	___awdiv@divisor+1
  6608     0EA8  0834               	movf	descomponer@dec,w
  6609     0EA9  00B0               	movwf	??_descomponer
  6610     0EAA  01B1               	clrf	??_descomponer+1
  6611     0EAB  0830               	movf	??_descomponer,w
  6612     0EAC  00A2               	movwf	___awdiv@dividend
  6613     0EAD  0831               	movf	??_descomponer+1,w
  6614     0EAE  00A3               	movwf	___awdiv@dividend+1
  6615     0EAF  120A  158A  2728  120A  158A  	fcall	___awdiv
  6616     0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  6617     0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  6618     0EB6  0820               	movf	?___awdiv,w
  6619     0EB7  2EBF               	goto	l429
  6620     0EB8                     l3552:
  6621     0EB8  082C               	movf	descomponer@pos,w
  6622     0EB9  042D               	iorwf	descomponer@pos+1,w
  6623     0EBA  1D03               	btfss	3,2
  6624     0EBB  2EBD               	goto	u3381
  6625     0EBC  2EBE               	goto	u3380
  6626     0EBD                     u3381:
  6627     0EBD  2EBF               	goto	l429
  6628     0EBE                     u3380:
  6629     0EBE                     l3554:
  6630                           
  6631                           ;conversiones.c: 59:         return uni;
  6632     0EBE  0833               	movf	descomponer@uni,w
  6633     0EBF                     l429:
  6634     0EBF  0008               	return
  6635     0EC0                     __end_of_descomponer:
  6636                           
  6637                           	psect	text32
  6638     0A5A                     __ptext32:	
  6639 ;; *************** function ___lwmod *****************
  6640 ;; Defined at:
  6641 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  6642 ;; Parameters:    Size  Location     Type
  6643 ;;  divisor         2    7[BANK0 ] unsigned int 
  6644 ;;  dividend        2    9[BANK0 ] unsigned int 
  6645 ;; Auto vars:     Size  Location     Type
  6646 ;;  counter         1   11[BANK0 ] unsigned char 
  6647 ;; Return value:  Size  Location     Type
  6648 ;;                  2    7[BANK0 ] unsigned int 
  6649 ;; Registers used:
  6650 ;;		wreg, status,2, status,0
  6651 ;; Tracked objects:
  6652 ;;		On entry : 0/0
  6653 ;;		On exit  : 0/0
  6654 ;;		Unchanged: 0/0
  6655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6656 ;;      Params:         0       4       0       0       0
  6657 ;;      Locals:         0       1       0       0       0
  6658 ;;      Temps:          1       0       0       0       0
  6659 ;;      Totals:         1       5       0       0       0
  6660 ;;Total ram usage:        6 bytes
  6661 ;; Hardware stack levels used: 1
  6662 ;; Hardware stack levels required when called: 1
  6663 ;; This function calls:
  6664 ;;		Nothing
  6665 ;; This function is called by:
  6666 ;;		_descomponer
  6667 ;;		_sprintf
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           
  6671     0A5A                     ___lwmod:	
  6672                           ;psect for function ___lwmod
  6673                           
  6674     0A5A                     l2220:	
  6675                           ;incstack = 0
  6676                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6677                           
  6678     0A5A  1283               	bcf	3,5	;RP0=0, select bank0
  6679     0A5B  1303               	bcf	3,6	;RP1=0, select bank0
  6680     0A5C  0827               	movf	___lwmod@divisor,w
  6681     0A5D  0428               	iorwf	___lwmod@divisor+1,w
  6682     0A5E  1903               	btfsc	3,2
  6683     0A5F  2A61               	goto	u1651
  6684     0A60  2A62               	goto	u1650
  6685     0A61                     u1651:
  6686     0A61  2A91               	goto	l2238
  6687     0A62                     u1650:
  6688     0A62                     l2222:
  6689     0A62  01AB               	clrf	___lwmod@counter
  6690     0A63  0AAB               	incf	___lwmod@counter,f
  6691     0A64  2A70               	goto	l2228
  6692     0A65                     l2224:
  6693     0A65  3001               	movlw	1
  6694     0A66                     u1665:
  6695     0A66  1003               	clrc
  6696     0A67  0DA7               	rlf	___lwmod@divisor,f
  6697     0A68  0DA8               	rlf	___lwmod@divisor+1,f
  6698     0A69  3EFF               	addlw	-1
  6699     0A6A  1D03               	skipz
  6700     0A6B  2A66               	goto	u1665
  6701     0A6C                     l2226:
  6702     0A6C  3001               	movlw	1
  6703     0A6D  00F5               	movwf	??___lwmod
  6704     0A6E  0875               	movf	??___lwmod,w
  6705     0A6F  07AB               	addwf	___lwmod@counter,f
  6706     0A70                     l2228:
  6707     0A70  1FA8               	btfss	___lwmod@divisor+1,7
  6708     0A71  2A73               	goto	u1671
  6709     0A72  2A74               	goto	u1670
  6710     0A73                     u1671:
  6711     0A73  2A65               	goto	l2224
  6712     0A74                     u1670:
  6713     0A74                     l2230:
  6714     0A74  0828               	movf	___lwmod@divisor+1,w
  6715     0A75  022A               	subwf	___lwmod@dividend+1,w
  6716     0A76  1D03               	skipz
  6717     0A77  2A7A               	goto	u1685
  6718     0A78  0827               	movf	___lwmod@divisor,w
  6719     0A79  0229               	subwf	___lwmod@dividend,w
  6720     0A7A                     u1685:
  6721     0A7A  1C03               	skipc
  6722     0A7B  2A7D               	goto	u1681
  6723     0A7C  2A7E               	goto	u1680
  6724     0A7D                     u1681:
  6725     0A7D  2A84               	goto	l2234
  6726     0A7E                     u1680:
  6727     0A7E                     l2232:
  6728     0A7E  0827               	movf	___lwmod@divisor,w
  6729     0A7F  02A9               	subwf	___lwmod@dividend,f
  6730     0A80  0828               	movf	___lwmod@divisor+1,w
  6731     0A81  1C03               	skipc
  6732     0A82  03AA               	decf	___lwmod@dividend+1,f
  6733     0A83  02AA               	subwf	___lwmod@dividend+1,f
  6734     0A84                     l2234:
  6735     0A84  3001               	movlw	1
  6736     0A85                     u1695:
  6737     0A85  1003               	clrc
  6738     0A86  0CA8               	rrf	___lwmod@divisor+1,f
  6739     0A87  0CA7               	rrf	___lwmod@divisor,f
  6740     0A88  3EFF               	addlw	-1
  6741     0A89  1D03               	skipz
  6742     0A8A  2A85               	goto	u1695
  6743     0A8B                     l2236:
  6744     0A8B  3001               	movlw	1
  6745     0A8C  02AB               	subwf	___lwmod@counter,f
  6746     0A8D  1D03               	btfss	3,2
  6747     0A8E  2A90               	goto	u1701
  6748     0A8F  2A91               	goto	u1700
  6749     0A90                     u1701:
  6750     0A90  2A74               	goto	l2230
  6751     0A91                     u1700:
  6752     0A91                     l2238:
  6753     0A91  082A               	movf	___lwmod@dividend+1,w
  6754     0A92  00A8               	movwf	?___lwmod+1
  6755     0A93  0829               	movf	___lwmod@dividend,w
  6756     0A94  00A7               	movwf	?___lwmod
  6757     0A95                     l848:
  6758     0A95  0008               	return
  6759     0A96                     __end_of___lwmod:
  6760                           
  6761                           	psect	text33
  6762     0C27                     __ptext33:	
  6763 ;; *************** function ___lwdiv *****************
  6764 ;; Defined at:
  6765 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  6766 ;; Parameters:    Size  Location     Type
  6767 ;;  divisor         2    0[BANK0 ] unsigned int 
  6768 ;;  dividend        2    2[BANK0 ] unsigned int 
  6769 ;; Auto vars:     Size  Location     Type
  6770 ;;  quotient        2    5[BANK0 ] unsigned int 
  6771 ;;  counter         1    4[BANK0 ] unsigned char 
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  2    0[BANK0 ] unsigned int 
  6774 ;; Registers used:
  6775 ;;		wreg, status,2, status,0
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6781 ;;      Params:         0       4       0       0       0
  6782 ;;      Locals:         0       3       0       0       0
  6783 ;;      Temps:          1       0       0       0       0
  6784 ;;      Totals:         1       7       0       0       0
  6785 ;;Total ram usage:        8 bytes
  6786 ;; Hardware stack levels used: 1
  6787 ;; Hardware stack levels required when called: 1
  6788 ;; This function calls:
  6789 ;;		Nothing
  6790 ;; This function is called by:
  6791 ;;		_descomponer
  6792 ;;		_sprintf
  6793 ;; This function uses a non-reentrant model
  6794 ;;
  6795                           
  6796     0C27                     ___lwdiv:	
  6797                           ;psect for function ___lwdiv
  6798                           
  6799     0C27                     l3122:	
  6800                           ;incstack = 0
  6801                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6802                           
  6803     0C27  1283               	bcf	3,5	;RP0=0, select bank0
  6804     0C28  1303               	bcf	3,6	;RP1=0, select bank0
  6805     0C29  01A5               	clrf	___lwdiv@quotient
  6806     0C2A  01A6               	clrf	___lwdiv@quotient+1
  6807     0C2B                     l3124:
  6808     0C2B  0820               	movf	___lwdiv@divisor,w
  6809     0C2C  0421               	iorwf	___lwdiv@divisor+1,w
  6810     0C2D  1903               	btfsc	3,2
  6811     0C2E  2C30               	goto	u2821
  6812     0C2F  2C31               	goto	u2820
  6813     0C30                     u2821:
  6814     0C30  2C68               	goto	l3144
  6815     0C31                     u2820:
  6816     0C31                     l3126:
  6817     0C31  01A4               	clrf	___lwdiv@counter
  6818     0C32  0AA4               	incf	___lwdiv@counter,f
  6819     0C33  2C3F               	goto	l3132
  6820     0C34                     l3128:
  6821     0C34  3001               	movlw	1
  6822     0C35                     u2835:
  6823     0C35  1003               	clrc
  6824     0C36  0DA0               	rlf	___lwdiv@divisor,f
  6825     0C37  0DA1               	rlf	___lwdiv@divisor+1,f
  6826     0C38  3EFF               	addlw	-1
  6827     0C39  1D03               	skipz
  6828     0C3A  2C35               	goto	u2835
  6829     0C3B                     l3130:
  6830     0C3B  3001               	movlw	1
  6831     0C3C  00F4               	movwf	??___lwdiv
  6832     0C3D  0874               	movf	??___lwdiv,w
  6833     0C3E  07A4               	addwf	___lwdiv@counter,f
  6834     0C3F                     l3132:
  6835     0C3F  1FA1               	btfss	___lwdiv@divisor+1,7
  6836     0C40  2C42               	goto	u2841
  6837     0C41  2C43               	goto	u2840
  6838     0C42                     u2841:
  6839     0C42  2C34               	goto	l3128
  6840     0C43                     u2840:
  6841     0C43                     l3134:
  6842     0C43  3001               	movlw	1
  6843     0C44                     u2855:
  6844     0C44  1003               	clrc
  6845     0C45  0DA5               	rlf	___lwdiv@quotient,f
  6846     0C46  0DA6               	rlf	___lwdiv@quotient+1,f
  6847     0C47  3EFF               	addlw	-1
  6848     0C48  1D03               	skipz
  6849     0C49  2C44               	goto	u2855
  6850     0C4A  0821               	movf	___lwdiv@divisor+1,w
  6851     0C4B  0223               	subwf	___lwdiv@dividend+1,w
  6852     0C4C  1D03               	skipz
  6853     0C4D  2C50               	goto	u2865
  6854     0C4E  0820               	movf	___lwdiv@divisor,w
  6855     0C4F  0222               	subwf	___lwdiv@dividend,w
  6856     0C50                     u2865:
  6857     0C50  1C03               	skipc
  6858     0C51  2C53               	goto	u2861
  6859     0C52  2C54               	goto	u2860
  6860     0C53                     u2861:
  6861     0C53  2C5B               	goto	l3140
  6862     0C54                     u2860:
  6863     0C54                     l3136:
  6864     0C54  0820               	movf	___lwdiv@divisor,w
  6865     0C55  02A2               	subwf	___lwdiv@dividend,f
  6866     0C56  0821               	movf	___lwdiv@divisor+1,w
  6867     0C57  1C03               	skipc
  6868     0C58  03A3               	decf	___lwdiv@dividend+1,f
  6869     0C59  02A3               	subwf	___lwdiv@dividend+1,f
  6870     0C5A                     l3138:
  6871     0C5A  1425               	bsf	___lwdiv@quotient,0
  6872     0C5B                     l3140:
  6873     0C5B  3001               	movlw	1
  6874     0C5C                     u2875:
  6875     0C5C  1003               	clrc
  6876     0C5D  0CA1               	rrf	___lwdiv@divisor+1,f
  6877     0C5E  0CA0               	rrf	___lwdiv@divisor,f
  6878     0C5F  3EFF               	addlw	-1
  6879     0C60  1D03               	skipz
  6880     0C61  2C5C               	goto	u2875
  6881     0C62                     l3142:
  6882     0C62  3001               	movlw	1
  6883     0C63  02A4               	subwf	___lwdiv@counter,f
  6884     0C64  1D03               	btfss	3,2
  6885     0C65  2C67               	goto	u2881
  6886     0C66  2C68               	goto	u2880
  6887     0C67                     u2881:
  6888     0C67  2C43               	goto	l3134
  6889     0C68                     u2880:
  6890     0C68                     l3144:
  6891     0C68  0826               	movf	___lwdiv@quotient+1,w
  6892     0C69  00A1               	movwf	?___lwdiv+1
  6893     0C6A  0825               	movf	___lwdiv@quotient,w
  6894     0C6B  00A0               	movwf	?___lwdiv
  6895     0C6C                     l838:
  6896     0C6C  0008               	return
  6897     0C6D                     __end_of___lwdiv:
  6898                           
  6899                           	psect	text34
  6900     0DA3                     __ptext34:	
  6901 ;; *************** function ___awmod *****************
  6902 ;; Defined at:
  6903 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  6904 ;; Parameters:    Size  Location     Type
  6905 ;;  divisor         2    0[BANK0 ] int 
  6906 ;;  dividend        2    2[BANK0 ] int 
  6907 ;; Auto vars:     Size  Location     Type
  6908 ;;  sign            1    5[BANK0 ] unsigned char 
  6909 ;;  counter         1    4[BANK0 ] unsigned char 
  6910 ;; Return value:  Size  Location     Type
  6911 ;;                  2    0[BANK0 ] int 
  6912 ;; Registers used:
  6913 ;;		wreg, status,2, status,0
  6914 ;; Tracked objects:
  6915 ;;		On entry : 0/0
  6916 ;;		On exit  : 0/0
  6917 ;;		Unchanged: 0/0
  6918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6919 ;;      Params:         0       4       0       0       0
  6920 ;;      Locals:         0       2       0       0       0
  6921 ;;      Temps:          1       0       0       0       0
  6922 ;;      Totals:         1       6       0       0       0
  6923 ;;Total ram usage:        7 bytes
  6924 ;; Hardware stack levels used: 1
  6925 ;; Hardware stack levels required when called: 1
  6926 ;; This function calls:
  6927 ;;		Nothing
  6928 ;; This function is called by:
  6929 ;;		_descomponer
  6930 ;; This function uses a non-reentrant model
  6931 ;;
  6932                           
  6933     0DA3                     ___awmod:	
  6934                           ;psect for function ___awmod
  6935                           
  6936     0DA3                     l3372:	
  6937                           ;incstack = 0
  6938                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6939                           
  6940     0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  6941     0DA4  1303               	bcf	3,6	;RP1=0, select bank0
  6942     0DA5  01A5               	clrf	___awmod@sign
  6943     0DA6                     l3374:
  6944     0DA6  1FA3               	btfss	___awmod@dividend+1,7
  6945     0DA7  2DA9               	goto	u3241
  6946     0DA8  2DAA               	goto	u3240
  6947     0DA9                     u3241:
  6948     0DA9  2DB1               	goto	l3380
  6949     0DAA                     u3240:
  6950     0DAA                     l3376:
  6951     0DAA  09A2               	comf	___awmod@dividend,f
  6952     0DAB  09A3               	comf	___awmod@dividend+1,f
  6953     0DAC  0AA2               	incf	___awmod@dividend,f
  6954     0DAD  1903               	skipnz
  6955     0DAE  0AA3               	incf	___awmod@dividend+1,f
  6956     0DAF                     l3378:
  6957     0DAF  01A5               	clrf	___awmod@sign
  6958     0DB0  0AA5               	incf	___awmod@sign,f
  6959     0DB1                     l3380:
  6960     0DB1  1FA1               	btfss	___awmod@divisor+1,7
  6961     0DB2  2DB4               	goto	u3251
  6962     0DB3  2DB5               	goto	u3250
  6963     0DB4                     u3251:
  6964     0DB4  2DBA               	goto	l3384
  6965     0DB5                     u3250:
  6966     0DB5                     l3382:
  6967     0DB5  09A0               	comf	___awmod@divisor,f
  6968     0DB6  09A1               	comf	___awmod@divisor+1,f
  6969     0DB7  0AA0               	incf	___awmod@divisor,f
  6970     0DB8  1903               	skipnz
  6971     0DB9  0AA1               	incf	___awmod@divisor+1,f
  6972     0DBA                     l3384:
  6973     0DBA  0820               	movf	___awmod@divisor,w
  6974     0DBB  0421               	iorwf	___awmod@divisor+1,w
  6975     0DBC  1903               	btfsc	3,2
  6976     0DBD  2DBF               	goto	u3261
  6977     0DBE  2DC0               	goto	u3260
  6978     0DBF                     u3261:
  6979     0DBF  2DEF               	goto	l3402
  6980     0DC0                     u3260:
  6981     0DC0                     l3386:
  6982     0DC0  01A4               	clrf	___awmod@counter
  6983     0DC1  0AA4               	incf	___awmod@counter,f
  6984     0DC2  2DCE               	goto	l3392
  6985     0DC3                     l3388:
  6986     0DC3  3001               	movlw	1
  6987     0DC4                     u3275:
  6988     0DC4  1003               	clrc
  6989     0DC5  0DA0               	rlf	___awmod@divisor,f
  6990     0DC6  0DA1               	rlf	___awmod@divisor+1,f
  6991     0DC7  3EFF               	addlw	-1
  6992     0DC8  1D03               	skipz
  6993     0DC9  2DC4               	goto	u3275
  6994     0DCA                     l3390:
  6995     0DCA  3001               	movlw	1
  6996     0DCB  00F4               	movwf	??___awmod
  6997     0DCC  0874               	movf	??___awmod,w
  6998     0DCD  07A4               	addwf	___awmod@counter,f
  6999     0DCE                     l3392:
  7000     0DCE  1FA1               	btfss	___awmod@divisor+1,7
  7001     0DCF  2DD1               	goto	u3281
  7002     0DD0  2DD2               	goto	u3280
  7003     0DD1                     u3281:
  7004     0DD1  2DC3               	goto	l3388
  7005     0DD2                     u3280:
  7006     0DD2                     l3394:
  7007     0DD2  0821               	movf	___awmod@divisor+1,w
  7008     0DD3  0223               	subwf	___awmod@dividend+1,w
  7009     0DD4  1D03               	skipz
  7010     0DD5  2DD8               	goto	u3295
  7011     0DD6  0820               	movf	___awmod@divisor,w
  7012     0DD7  0222               	subwf	___awmod@dividend,w
  7013     0DD8                     u3295:
  7014     0DD8  1C03               	skipc
  7015     0DD9  2DDB               	goto	u3291
  7016     0DDA  2DDC               	goto	u3290
  7017     0DDB                     u3291:
  7018     0DDB  2DE2               	goto	l3398
  7019     0DDC                     u3290:
  7020     0DDC                     l3396:
  7021     0DDC  0820               	movf	___awmod@divisor,w
  7022     0DDD  02A2               	subwf	___awmod@dividend,f
  7023     0DDE  0821               	movf	___awmod@divisor+1,w
  7024     0DDF  1C03               	skipc
  7025     0DE0  03A3               	decf	___awmod@dividend+1,f
  7026     0DE1  02A3               	subwf	___awmod@dividend+1,f
  7027     0DE2                     l3398:
  7028     0DE2  3001               	movlw	1
  7029     0DE3                     u3305:
  7030     0DE3  1003               	clrc
  7031     0DE4  0CA1               	rrf	___awmod@divisor+1,f
  7032     0DE5  0CA0               	rrf	___awmod@divisor,f
  7033     0DE6  3EFF               	addlw	-1
  7034     0DE7  1D03               	skipz
  7035     0DE8  2DE3               	goto	u3305
  7036     0DE9                     l3400:
  7037     0DE9  3001               	movlw	1
  7038     0DEA  02A4               	subwf	___awmod@counter,f
  7039     0DEB  1D03               	btfss	3,2
  7040     0DEC  2DEE               	goto	u3311
  7041     0DED  2DEF               	goto	u3310
  7042     0DEE                     u3311:
  7043     0DEE  2DD2               	goto	l3394
  7044     0DEF                     u3310:
  7045     0DEF                     l3402:
  7046     0DEF  0825               	movf	___awmod@sign,w
  7047     0DF0  1903               	btfsc	3,2
  7048     0DF1  2DF3               	goto	u3321
  7049     0DF2  2DF4               	goto	u3320
  7050     0DF3                     u3321:
  7051     0DF3  2DF9               	goto	l3406
  7052     0DF4                     u3320:
  7053     0DF4                     l3404:
  7054     0DF4  09A2               	comf	___awmod@dividend,f
  7055     0DF5  09A3               	comf	___awmod@dividend+1,f
  7056     0DF6  0AA2               	incf	___awmod@dividend,f
  7057     0DF7  1903               	skipnz
  7058     0DF8  0AA3               	incf	___awmod@dividend+1,f
  7059     0DF9                     l3406:
  7060     0DF9  0823               	movf	___awmod@dividend+1,w
  7061     0DFA  00A1               	movwf	?___awmod+1
  7062     0DFB  0822               	movf	___awmod@dividend,w
  7063     0DFC  00A0               	movwf	?___awmod
  7064     0DFD                     l732:
  7065     0DFD  0008               	return
  7066     0DFE                     __end_of___awmod:
  7067                           
  7068                           	psect	text35
  7069     0F28                     __ptext35:	
  7070 ;; *************** function ___awdiv *****************
  7071 ;; Defined at:
  7072 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  7073 ;; Parameters:    Size  Location     Type
  7074 ;;  divisor         2    0[BANK0 ] int 
  7075 ;;  dividend        2    2[BANK0 ] int 
  7076 ;; Auto vars:     Size  Location     Type
  7077 ;;  quotient        2    6[BANK0 ] int 
  7078 ;;  sign            1    5[BANK0 ] unsigned char 
  7079 ;;  counter         1    4[BANK0 ] unsigned char 
  7080 ;; Return value:  Size  Location     Type
  7081 ;;                  2    0[BANK0 ] int 
  7082 ;; Registers used:
  7083 ;;		wreg, status,2, status,0
  7084 ;; Tracked objects:
  7085 ;;		On entry : 0/0
  7086 ;;		On exit  : 0/0
  7087 ;;		Unchanged: 0/0
  7088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7089 ;;      Params:         0       4       0       0       0
  7090 ;;      Locals:         0       4       0       0       0
  7091 ;;      Temps:          1       0       0       0       0
  7092 ;;      Totals:         1       8       0       0       0
  7093 ;;Total ram usage:        9 bytes
  7094 ;; Hardware stack levels used: 1
  7095 ;; Hardware stack levels required when called: 1
  7096 ;; This function calls:
  7097 ;;		Nothing
  7098 ;; This function is called by:
  7099 ;;		_descomponer
  7100 ;; This function uses a non-reentrant model
  7101 ;;
  7102                           
  7103     0F28                     ___awdiv:	
  7104                           ;psect for function ___awdiv
  7105                           
  7106     0F28                     l3328:	
  7107                           ;incstack = 0
  7108                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7109                           
  7110     0F28  1283               	bcf	3,5	;RP0=0, select bank0
  7111     0F29  1303               	bcf	3,6	;RP1=0, select bank0
  7112     0F2A  01A5               	clrf	___awdiv@sign
  7113     0F2B                     l3330:
  7114     0F2B  1FA1               	btfss	___awdiv@divisor+1,7
  7115     0F2C  2F2E               	goto	u3141
  7116     0F2D  2F2F               	goto	u3140
  7117     0F2E                     u3141:
  7118     0F2E  2F36               	goto	l3336
  7119     0F2F                     u3140:
  7120     0F2F                     l3332:
  7121     0F2F  09A0               	comf	___awdiv@divisor,f
  7122     0F30  09A1               	comf	___awdiv@divisor+1,f
  7123     0F31  0AA0               	incf	___awdiv@divisor,f
  7124     0F32  1903               	skipnz
  7125     0F33  0AA1               	incf	___awdiv@divisor+1,f
  7126     0F34                     l3334:
  7127     0F34  01A5               	clrf	___awdiv@sign
  7128     0F35  0AA5               	incf	___awdiv@sign,f
  7129     0F36                     l3336:
  7130     0F36  1FA3               	btfss	___awdiv@dividend+1,7
  7131     0F37  2F39               	goto	u3151
  7132     0F38  2F3A               	goto	u3150
  7133     0F39                     u3151:
  7134     0F39  2F43               	goto	l3342
  7135     0F3A                     u3150:
  7136     0F3A                     l3338:
  7137     0F3A  09A2               	comf	___awdiv@dividend,f
  7138     0F3B  09A3               	comf	___awdiv@dividend+1,f
  7139     0F3C  0AA2               	incf	___awdiv@dividend,f
  7140     0F3D  1903               	skipnz
  7141     0F3E  0AA3               	incf	___awdiv@dividend+1,f
  7142     0F3F                     l3340:
  7143     0F3F  3001               	movlw	1
  7144     0F40  00F4               	movwf	??___awdiv
  7145     0F41  0874               	movf	??___awdiv,w
  7146     0F42  06A5               	xorwf	___awdiv@sign,f
  7147     0F43                     l3342:
  7148     0F43  01A6               	clrf	___awdiv@quotient
  7149     0F44  01A7               	clrf	___awdiv@quotient+1
  7150     0F45                     l3344:
  7151     0F45  0820               	movf	___awdiv@divisor,w
  7152     0F46  0421               	iorwf	___awdiv@divisor+1,w
  7153     0F47  1903               	btfsc	3,2
  7154     0F48  2F4A               	goto	u3161
  7155     0F49  2F4B               	goto	u3160
  7156     0F4A                     u3161:
  7157     0F4A  2F82               	goto	l3364
  7158     0F4B                     u3160:
  7159     0F4B                     l3346:
  7160     0F4B  01A4               	clrf	___awdiv@counter
  7161     0F4C  0AA4               	incf	___awdiv@counter,f
  7162     0F4D  2F59               	goto	l3352
  7163     0F4E                     l3348:
  7164     0F4E  3001               	movlw	1
  7165     0F4F                     u3175:
  7166     0F4F  1003               	clrc
  7167     0F50  0DA0               	rlf	___awdiv@divisor,f
  7168     0F51  0DA1               	rlf	___awdiv@divisor+1,f
  7169     0F52  3EFF               	addlw	-1
  7170     0F53  1D03               	skipz
  7171     0F54  2F4F               	goto	u3175
  7172     0F55                     l3350:
  7173     0F55  3001               	movlw	1
  7174     0F56  00F4               	movwf	??___awdiv
  7175     0F57  0874               	movf	??___awdiv,w
  7176     0F58  07A4               	addwf	___awdiv@counter,f
  7177     0F59                     l3352:
  7178     0F59  1FA1               	btfss	___awdiv@divisor+1,7
  7179     0F5A  2F5C               	goto	u3181
  7180     0F5B  2F5D               	goto	u3180
  7181     0F5C                     u3181:
  7182     0F5C  2F4E               	goto	l3348
  7183     0F5D                     u3180:
  7184     0F5D                     l3354:
  7185     0F5D  3001               	movlw	1
  7186     0F5E                     u3195:
  7187     0F5E  1003               	clrc
  7188     0F5F  0DA6               	rlf	___awdiv@quotient,f
  7189     0F60  0DA7               	rlf	___awdiv@quotient+1,f
  7190     0F61  3EFF               	addlw	-1
  7191     0F62  1D03               	skipz
  7192     0F63  2F5E               	goto	u3195
  7193     0F64  0821               	movf	___awdiv@divisor+1,w
  7194     0F65  0223               	subwf	___awdiv@dividend+1,w
  7195     0F66  1D03               	skipz
  7196     0F67  2F6A               	goto	u3205
  7197     0F68  0820               	movf	___awdiv@divisor,w
  7198     0F69  0222               	subwf	___awdiv@dividend,w
  7199     0F6A                     u3205:
  7200     0F6A  1C03               	skipc
  7201     0F6B  2F6D               	goto	u3201
  7202     0F6C  2F6E               	goto	u3200
  7203     0F6D                     u3201:
  7204     0F6D  2F75               	goto	l3360
  7205     0F6E                     u3200:
  7206     0F6E                     l3356:
  7207     0F6E  0820               	movf	___awdiv@divisor,w
  7208     0F6F  02A2               	subwf	___awdiv@dividend,f
  7209     0F70  0821               	movf	___awdiv@divisor+1,w
  7210     0F71  1C03               	skipc
  7211     0F72  03A3               	decf	___awdiv@dividend+1,f
  7212     0F73  02A3               	subwf	___awdiv@dividend+1,f
  7213     0F74                     l3358:
  7214     0F74  1426               	bsf	___awdiv@quotient,0
  7215     0F75                     l3360:
  7216     0F75  3001               	movlw	1
  7217     0F76                     u3215:
  7218     0F76  1003               	clrc
  7219     0F77  0CA1               	rrf	___awdiv@divisor+1,f
  7220     0F78  0CA0               	rrf	___awdiv@divisor,f
  7221     0F79  3EFF               	addlw	-1
  7222     0F7A  1D03               	skipz
  7223     0F7B  2F76               	goto	u3215
  7224     0F7C                     l3362:
  7225     0F7C  3001               	movlw	1
  7226     0F7D  02A4               	subwf	___awdiv@counter,f
  7227     0F7E  1D03               	btfss	3,2
  7228     0F7F  2F81               	goto	u3221
  7229     0F80  2F82               	goto	u3220
  7230     0F81                     u3221:
  7231     0F81  2F5D               	goto	l3354
  7232     0F82                     u3220:
  7233     0F82                     l3364:
  7234     0F82  0825               	movf	___awdiv@sign,w
  7235     0F83  1903               	btfsc	3,2
  7236     0F84  2F86               	goto	u3231
  7237     0F85  2F87               	goto	u3230
  7238     0F86                     u3231:
  7239     0F86  2F8C               	goto	l3368
  7240     0F87                     u3230:
  7241     0F87                     l3366:
  7242     0F87  09A6               	comf	___awdiv@quotient,f
  7243     0F88  09A7               	comf	___awdiv@quotient+1,f
  7244     0F89  0AA6               	incf	___awdiv@quotient,f
  7245     0F8A  1903               	skipnz
  7246     0F8B  0AA7               	incf	___awdiv@quotient+1,f
  7247     0F8C                     l3368:
  7248     0F8C  0827               	movf	___awdiv@quotient+1,w
  7249     0F8D  00A1               	movwf	?___awdiv+1
  7250     0F8E  0826               	movf	___awdiv@quotient,w
  7251     0F8F  00A0               	movwf	?___awdiv
  7252     0F90                     l719:
  7253     0F90  0008               	return
  7254     0F91                     __end_of___awdiv:
  7255                           
  7256                           	psect	text36
  7257     0F91                     __ptext36:	
  7258 ;; *************** function _Lcd_Init *****************
  7259 ;; Defined at:
  7260 ;;		line 63 in file "lcd.c"
  7261 ;; Parameters:    Size  Location     Type
  7262 ;;		None
  7263 ;; Auto vars:     Size  Location     Type
  7264 ;;		None
  7265 ;; Return value:  Size  Location     Type
  7266 ;;                  1    wreg      void 
  7267 ;; Registers used:
  7268 ;;		wreg, status,2, status,0, pclath, cstack
  7269 ;; Tracked objects:
  7270 ;;		On entry : 0/0
  7271 ;;		On exit  : 0/0
  7272 ;;		Unchanged: 0/0
  7273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7274 ;;      Params:         0       0       0       0       0
  7275 ;;      Locals:         0       0       0       0       0
  7276 ;;      Temps:          0       2       0       0       0
  7277 ;;      Totals:         0       2       0       0       0
  7278 ;;Total ram usage:        2 bytes
  7279 ;; Hardware stack levels used: 1
  7280 ;; Hardware stack levels required when called: 4
  7281 ;; This function calls:
  7282 ;;		_Lcd_Clear
  7283 ;;		_Lcd_Cmd
  7284 ;;		_Lcd_Port
  7285 ;; This function is called by:
  7286 ;;		_main
  7287 ;; This function uses a non-reentrant model
  7288 ;;
  7289                           
  7290     0F91                     _Lcd_Init:	
  7291                           ;psect for function _Lcd_Init
  7292                           
  7293     0F91                     l3410:	
  7294                           ;incstack = 0
  7295                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  7296                           
  7297                           
  7298                           ;lcd.c: 65:  TRISDbits.TRISD2 = 0;
  7299     0F91  1683               	bsf	3,5	;RP0=1, select bank1
  7300     0F92  1303               	bcf	3,6	;RP1=0, select bank1
  7301     0F93  1108               	bcf	8,2	;volatile
  7302                           
  7303                           ;lcd.c: 66:  TRISDbits.TRISD3 = 0;
  7304     0F94  1188               	bcf	8,3	;volatile
  7305                           
  7306                           ;lcd.c: 67:  TRISDbits.TRISD4 = 0;
  7307     0F95  1208               	bcf	8,4	;volatile
  7308                           
  7309                           ;lcd.c: 68:  TRISDbits.TRISD5 = 0;
  7310     0F96  1288               	bcf	8,5	;volatile
  7311                           
  7312                           ;lcd.c: 69:  TRISDbits.TRISD6 = 0;
  7313     0F97  1308               	bcf	8,6	;volatile
  7314                           
  7315                           ;lcd.c: 70:  TRISDbits.TRISD7 = 0;
  7316     0F98  1388               	bcf	8,7	;volatile
  7317     0F99                     l3412:
  7318                           
  7319                           ;lcd.c: 71:     Lcd_Port(0x00);
  7320     0F99  3000               	movlw	0
  7321     0F9A  120A  158A  216D  120A  158A  	fcall	_Lcd_Port
  7322     0F9F                     l3414:
  7323                           
  7324                           ;lcd.c: 72:     _delay((unsigned long)((20)*(8000000/4000.0)));
  7325     0F9F  3034               	movlw	52
  7326     0FA0  1283               	bcf	3,5	;RP0=0, select bank0
  7327     0FA1  1303               	bcf	3,6	;RP1=0, select bank0
  7328     0FA2  00A3               	movwf	??_Lcd_Init+1
  7329     0FA3  30F1               	movlw	241
  7330     0FA4  00A2               	movwf	??_Lcd_Init
  7331     0FA5                     u3507:
  7332     0FA5  0BA2               	decfsz	??_Lcd_Init,f
  7333     0FA6  2FA5               	goto	u3507
  7334     0FA7  0BA3               	decfsz	??_Lcd_Init+1,f
  7335     0FA8  2FA5               	goto	u3507
  7336     0FA9                     l3416:
  7337                           
  7338                           ;lcd.c: 73:     Lcd_Cmd(0x03);
  7339     0FA9  3003               	movlw	3
  7340     0FAA  120A  158A  2113  120A  158A  	fcall	_Lcd_Cmd
  7341                           
  7342                           ;lcd.c: 74:     _delay((unsigned long)((5)*(8000000/4000.0)));
  7343     0FAF  300D               	movlw	13
  7344     0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  7345     0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  7346     0FB2  00A3               	movwf	??_Lcd_Init+1
  7347     0FB3  30FB               	movlw	251
  7348     0FB4  00A2               	movwf	??_Lcd_Init
  7349     0FB5                     u3517:
  7350     0FB5  0BA2               	decfsz	??_Lcd_Init,f
  7351     0FB6  2FB5               	goto	u3517
  7352     0FB7  0BA3               	decfsz	??_Lcd_Init+1,f
  7353     0FB8  2FB5               	goto	u3517
  7354     0FB9                     l3418:
  7355                           
  7356                           ;lcd.c: 75:     Lcd_Cmd(0x03);
  7357     0FB9  3003               	movlw	3
  7358     0FBA  120A  158A  2113  120A  158A  	fcall	_Lcd_Cmd
  7359     0FBF                     l3420:
  7360                           
  7361                           ;lcd.c: 76:     _delay((unsigned long)((11)*(8000000/4000.0)));
  7362     0FBF  301D               	movlw	29
  7363     0FC0  1283               	bcf	3,5	;RP0=0, select bank0
  7364     0FC1  1303               	bcf	3,6	;RP1=0, select bank0
  7365     0FC2  00A3               	movwf	??_Lcd_Init+1
  7366     0FC3  3090               	movlw	144
  7367     0FC4  00A2               	movwf	??_Lcd_Init
  7368     0FC5                     u3527:
  7369     0FC5  0BA2               	decfsz	??_Lcd_Init,f
  7370     0FC6  2FC5               	goto	u3527
  7371     0FC7  0BA3               	decfsz	??_Lcd_Init+1,f
  7372     0FC8  2FC5               	goto	u3527
  7373     0FC9  0000               	nop
  7374                           
  7375                           ;lcd.c: 77:     Lcd_Cmd(0x03);
  7376     0FCA  3003               	movlw	3
  7377     0FCB  120A  158A  2113  120A  158A  	fcall	_Lcd_Cmd
  7378                           
  7379                           ;lcd.c: 78:     Lcd_Cmd(0x02);
  7380     0FD0  3002               	movlw	2
  7381     0FD1  120A  158A  2113  120A  158A  	fcall	_Lcd_Cmd
  7382                           
  7383                           ;lcd.c: 79:     Lcd_Cmd(0x02);
  7384     0FD6  3002               	movlw	2
  7385     0FD7  120A  158A  2113  120A  158A  	fcall	_Lcd_Cmd
  7386                           
  7387                           ;lcd.c: 80:     Lcd_Cmd(0x08);
  7388     0FDC  3008               	movlw	8
  7389     0FDD  120A  158A  2113  120A  158A  	fcall	_Lcd_Cmd
  7390                           
  7391                           ;lcd.c: 81:     Lcd_Cmd(0x00);
  7392     0FE2  3000               	movlw	0
  7393     0FE3  120A  158A  2113  120A  158A  	fcall	_Lcd_Cmd
  7394                           
  7395                           ;lcd.c: 82:     Lcd_Cmd(0x0C);
  7396     0FE8  300C               	movlw	12
  7397     0FE9  120A  158A  2113  120A  158A  	fcall	_Lcd_Cmd
  7398                           
  7399                           ;lcd.c: 83:     Lcd_Cmd(0x00);
  7400     0FEE  3000               	movlw	0
  7401     0FEF  120A  158A  2113  120A  158A  	fcall	_Lcd_Cmd
  7402                           
  7403                           ;lcd.c: 84:     Lcd_Cmd(0x06);
  7404     0FF4  3006               	movlw	6
  7405     0FF5  120A  158A  2113  120A  158A  	fcall	_Lcd_Cmd
  7406                           
  7407                           ;lcd.c: 85:     Lcd_Clear();
  7408     0FFA  120A  158A  20E2  120A  158A  	fcall	_Lcd_Clear
  7409     0FFF                     l44:
  7410     0FFF  0008               	return
  7411     1000                     __end_of_Lcd_Init:
  7412                           
  7413                           	psect	text37
  7414     08E2                     __ptext37:	
  7415 ;; *************** function _Lcd_Clear *****************
  7416 ;; Defined at:
  7417 ;;		line 20 in file "lcd.c"
  7418 ;; Parameters:    Size  Location     Type
  7419 ;;		None
  7420 ;; Auto vars:     Size  Location     Type
  7421 ;;		None
  7422 ;; Return value:  Size  Location     Type
  7423 ;;                  1    wreg      void 
  7424 ;; Registers used:
  7425 ;;		wreg, status,2, status,0, pclath, cstack
  7426 ;; Tracked objects:
  7427 ;;		On entry : 0/0
  7428 ;;		On exit  : 0/0
  7429 ;;		Unchanged: 0/0
  7430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7431 ;;      Params:         0       0       0       0       0
  7432 ;;      Locals:         0       0       0       0       0
  7433 ;;      Temps:          0       0       0       0       0
  7434 ;;      Totals:         0       0       0       0       0
  7435 ;;Total ram usage:        0 bytes
  7436 ;; Hardware stack levels used: 1
  7437 ;; Hardware stack levels required when called: 3
  7438 ;; This function calls:
  7439 ;;		_Lcd_Cmd
  7440 ;; This function is called by:
  7441 ;;		_Lcd_Init
  7442 ;;		_main
  7443 ;; This function uses a non-reentrant model
  7444 ;;
  7445                           
  7446     08E2                     _Lcd_Clear:	
  7447                           ;psect for function _Lcd_Clear
  7448                           
  7449     08E2                     l3148:	
  7450                           ;incstack = 0
  7451                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  7452                           
  7453                           
  7454                           ;lcd.c: 22:     Lcd_Cmd(0);
  7455     08E2  3000               	movlw	0
  7456     08E3  120A  158A  2113  120A  158A  	fcall	_Lcd_Cmd
  7457                           
  7458                           ;lcd.c: 23:     Lcd_Cmd(1);
  7459     08E8  3001               	movlw	1
  7460     08E9  120A  158A  2113  120A  158A  	fcall	_Lcd_Cmd
  7461     08EE                     l31:
  7462     08EE  0008               	return
  7463     08EF                     __end_of_Lcd_Clear:
  7464                           
  7465                           	psect	text38
  7466     0913                     __ptext38:	
  7467 ;; *************** function _Lcd_Cmd *****************
  7468 ;; Defined at:
  7469 ;;		line 11 in file "lcd.c"
  7470 ;; Parameters:    Size  Location     Type
  7471 ;;  a               1    wreg     unsigned char 
  7472 ;; Auto vars:     Size  Location     Type
  7473 ;;  a               1    5[COMMON] unsigned char 
  7474 ;; Return value:  Size  Location     Type
  7475 ;;                  1    wreg      void 
  7476 ;; Registers used:
  7477 ;;		wreg, status,2, status,0, pclath, cstack
  7478 ;; Tracked objects:
  7479 ;;		On entry : 0/0
  7480 ;;		On exit  : 0/0
  7481 ;;		Unchanged: 0/0
  7482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7483 ;;      Params:         0       0       0       0       0
  7484 ;;      Locals:         1       0       0       0       0
  7485 ;;      Temps:          0       2       0       0       0
  7486 ;;      Totals:         1       2       0       0       0
  7487 ;;Total ram usage:        3 bytes
  7488 ;; Hardware stack levels used: 1
  7489 ;; Hardware stack levels required when called: 2
  7490 ;; This function calls:
  7491 ;;		_Lcd_Port
  7492 ;; This function is called by:
  7493 ;;		_Lcd_Clear
  7494 ;;		_Lcd_Set_Cursor
  7495 ;;		_Lcd_Init
  7496 ;;		_Lcd_Shift_Right
  7497 ;;		_Lcd_Shift_Left
  7498 ;;		_Lcd_Blink
  7499 ;;		_Lcd_NoBlink
  7500 ;; This function uses a non-reentrant model
  7501 ;;
  7502                           
  7503     0913                     _Lcd_Cmd:	
  7504                           ;psect for function _Lcd_Cmd
  7505                           
  7506                           
  7507                           ;incstack = 0
  7508                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  7509                           ;Lcd_Cmd@a stored from wreg
  7510     0913  00F5               	movwf	Lcd_Cmd@a
  7511     0914                     l3050:
  7512                           
  7513                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     PORTDbits.RD2 = 0;
  7514     0914  1283               	bcf	3,5	;RP0=0, select bank0
  7515     0915  1303               	bcf	3,6	;RP1=0, select bank0
  7516     0916  1108               	bcf	8,2	;volatile
  7517     0917                     l3052:
  7518                           
  7519                           ;lcd.c: 14:     Lcd_Port(a);
  7520     0917  0875               	movf	Lcd_Cmd@a,w
  7521     0918  120A  158A  216D  120A  158A  	fcall	_Lcd_Port
  7522     091D                     l3054:
  7523                           
  7524                           ;lcd.c: 15:     PORTDbits.RD3 = 1;
  7525     091D  1283               	bcf	3,5	;RP0=0, select bank0
  7526     091E  1303               	bcf	3,6	;RP1=0, select bank0
  7527     091F  1588               	bsf	8,3	;volatile
  7528     0920                     l3056:
  7529                           
  7530                           ;lcd.c: 16:     _delay((unsigned long)((4)*(8000000/4000.0)));
  7531     0920  300B               	movlw	11
  7532     0921  1283               	bcf	3,5	;RP0=0, select bank0
  7533     0922  1303               	bcf	3,6	;RP1=0, select bank0
  7534     0923  00A1               	movwf	??_Lcd_Cmd+1
  7535     0924  3061               	movlw	97
  7536     0925  00A0               	movwf	??_Lcd_Cmd
  7537     0926                     u3537:
  7538     0926  0BA0               	decfsz	??_Lcd_Cmd,f
  7539     0927  2926               	goto	u3537
  7540     0928  0BA1               	decfsz	??_Lcd_Cmd+1,f
  7541     0929  2926               	goto	u3537
  7542     092A  292B               	nop2
  7543     092B                     l3058:
  7544                           
  7545                           ;lcd.c: 17:     PORTDbits.RD3 = 0;
  7546     092B  1283               	bcf	3,5	;RP0=0, select bank0
  7547     092C  1303               	bcf	3,6	;RP1=0, select bank0
  7548     092D  1188               	bcf	8,3	;volatile
  7549     092E                     l28:
  7550     092E  0008               	return
  7551     092F                     __end_of_Lcd_Cmd:
  7552                           
  7553                           	psect	text39
  7554     096D                     __ptext39:	
  7555 ;; *************** function _Lcd_Port *****************
  7556 ;; Defined at:
  7557 ;;		line 3 in file "lcd.c"
  7558 ;; Parameters:    Size  Location     Type
  7559 ;;  a               1    wreg     unsigned char 
  7560 ;; Auto vars:     Size  Location     Type
  7561 ;;  a               1    4[COMMON] unsigned char 
  7562 ;; Return value:  Size  Location     Type
  7563 ;;                  1    wreg      void 
  7564 ;; Registers used:
  7565 ;;		wreg
  7566 ;; Tracked objects:
  7567 ;;		On entry : 0/0
  7568 ;;		On exit  : 0/0
  7569 ;;		Unchanged: 0/0
  7570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7571 ;;      Params:         0       0       0       0       0
  7572 ;;      Locals:         1       0       0       0       0
  7573 ;;      Temps:          0       0       0       0       0
  7574 ;;      Totals:         1       0       0       0       0
  7575 ;;Total ram usage:        1 bytes
  7576 ;; Hardware stack levels used: 1
  7577 ;; Hardware stack levels required when called: 1
  7578 ;; This function calls:
  7579 ;;		Nothing
  7580 ;; This function is called by:
  7581 ;;		_Lcd_Cmd
  7582 ;;		_Lcd_Init
  7583 ;;		_Lcd_Write_Char
  7584 ;; This function uses a non-reentrant model
  7585 ;;
  7586                           
  7587     096D                     _Lcd_Port:	
  7588                           ;psect for function _Lcd_Port
  7589                           
  7590                           
  7591                           ;incstack = 0
  7592                           ; Regs used in _Lcd_Port: [wreg]
  7593                           ;Lcd_Port@a stored from wreg
  7594     096D  00F4               	movwf	Lcd_Port@a
  7595     096E                     l3040:
  7596                           
  7597                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (PORTDbits.RD4 = 1)
      +                           : (PORTDbits.RD4 = 0);
  7598     096E  1C74               	btfss	Lcd_Port@a,0
  7599     096F  2971               	goto	u2661
  7600     0970  2972               	goto	u2660
  7601     0971                     u2661:
  7602     0971  2976               	goto	l10
  7603     0972                     u2660:
  7604     0972                     l3042:
  7605     0972  1283               	bcf	3,5	;RP0=0, select bank0
  7606     0973  1303               	bcf	3,6	;RP1=0, select bank0
  7607     0974  1608               	bsf	8,4	;volatile
  7608     0975  2979               	goto	l12
  7609     0976                     l10:
  7610     0976  1283               	bcf	3,5	;RP0=0, select bank0
  7611     0977  1303               	bcf	3,6	;RP1=0, select bank0
  7612     0978  1208               	bcf	8,4	;volatile
  7613     0979                     l12:
  7614                           
  7615                           ;lcd.c: 6:     (a & 2) ? (PORTDbits.RD5 = 1) : (PORTDbits.RD5 = 0);
  7616     0979  1CF4               	btfss	Lcd_Port@a,1
  7617     097A  297C               	goto	u2671
  7618     097B  297D               	goto	u2670
  7619     097C                     u2671:
  7620     097C  297F               	goto	l14
  7621     097D                     u2670:
  7622     097D                     l3044:
  7623     097D  1688               	bsf	8,5	;volatile
  7624     097E  2980               	goto	l16
  7625     097F                     l14:
  7626     097F  1288               	bcf	8,5	;volatile
  7627     0980                     l16:
  7628                           
  7629                           ;lcd.c: 7:     (a & 4) ? (PORTDbits.RD6 = 1) : (PORTDbits.RD6 = 0);
  7630     0980  1D74               	btfss	Lcd_Port@a,2
  7631     0981  2983               	goto	u2681
  7632     0982  2984               	goto	u2680
  7633     0983                     u2681:
  7634     0983  2986               	goto	l18
  7635     0984                     u2680:
  7636     0984                     l3046:
  7637     0984  1708               	bsf	8,6	;volatile
  7638     0985  2987               	goto	l20
  7639     0986                     l18:
  7640     0986  1308               	bcf	8,6	;volatile
  7641     0987                     l20:
  7642                           
  7643                           ;lcd.c: 8:     (a & 8) ? (PORTDbits.RD7 = 1) : (PORTDbits.RD7 = 0);
  7644     0987  1DF4               	btfss	Lcd_Port@a,3
  7645     0988  298A               	goto	u2691
  7646     0989  298B               	goto	u2690
  7647     098A                     u2691:
  7648     098A  298D               	goto	l22
  7649     098B                     u2690:
  7650     098B                     l3048:
  7651     098B  1788               	bsf	8,7	;volatile
  7652     098C  298E               	goto	l25
  7653     098D                     l22:
  7654     098D  1388               	bcf	8,7	;volatile
  7655     098E                     l25:
  7656     098E  0008               	return
  7657     098F                     __end_of_Lcd_Port:
  7658                           
  7659                           	psect	text40
  7660     0D4B                     __ptext40:	
  7661 ;; *************** function _ISR *****************
  7662 ;; Defined at:
  7663 ;;		line 97 in file "main.c"
  7664 ;; Parameters:    Size  Location     Type
  7665 ;;		None
  7666 ;; Auto vars:     Size  Location     Type
  7667 ;;		None
  7668 ;; Return value:  Size  Location     Type
  7669 ;;                  1    wreg      void 
  7670 ;; Registers used:
  7671 ;;		wreg, status,2, status,0
  7672 ;; Tracked objects:
  7673 ;;		On entry : 0/0
  7674 ;;		On exit  : 0/0
  7675 ;;		Unchanged: 0/0
  7676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7677 ;;      Params:         0       0       0       0       0
  7678 ;;      Locals:         0       0       0       0       0
  7679 ;;      Temps:          4       0       0       0       0
  7680 ;;      Totals:         4       0       0       0       0
  7681 ;;Total ram usage:        4 bytes
  7682 ;; Hardware stack levels used: 1
  7683 ;; This function calls:
  7684 ;;		Nothing
  7685 ;; This function is called by:
  7686 ;;		Interrupt level 1
  7687 ;; This function uses a non-reentrant model
  7688 ;;
  7689                           
  7690     0D4B                     _ISR:	
  7691                           ;psect for function _ISR
  7692                           
  7693     0D4B                     i1l2928:
  7694                           
  7695                           ;main.c: 99:  if (RBIF == 1){
  7696     0D4B  1C0B               	btfss	11,0	;volatile
  7697     0D4C  2D4E               	goto	u259_21
  7698     0D4D  2D4F               	goto	u259_20
  7699     0D4E                     u259_21:
  7700     0D4E  2D9C               	goto	i1l260
  7701     0D4F                     u259_20:
  7702     0D4F                     i1l2930:
  7703                           
  7704                           ;main.c: 100:     if (PORTBbits.RB0 == 0)
  7705     0D4F  1283               	bcf	3,5	;RP0=0, select bank0
  7706     0D50  1303               	bcf	3,6	;RP1=0, select bank0
  7707     0D51  1806               	btfsc	6,0	;volatile
  7708     0D52  2D54               	goto	u260_21
  7709     0D53  2D55               	goto	u260_20
  7710     0D54                     u260_21:
  7711     0D54  2D6B               	goto	i1l252
  7712     0D55                     u260_20:
  7713     0D55                     i1l2932:
  7714                           
  7715                           ;main.c: 101:     {;main.c: 102:         _delay((unsigned long)((10)*(8000000/4000.0)));
  7716     0D55  301A               	movlw	26
  7717     0D56  00F1               	movwf	??_ISR+1
  7718     0D57  30F8               	movlw	248
  7719     0D58  00F0               	movwf	??_ISR
  7720     0D59                     u354_27:
  7721     0D59  0BF0               	decfsz	??_ISR,f
  7722     0D5A  2D59               	goto	u354_27
  7723     0D5B  0BF1               	decfsz	??_ISR+1,f
  7724     0D5C  2D59               	goto	u354_27
  7725     0D5D  0000               	nop
  7726     0D5E                     i1l2934:
  7727                           
  7728                           ;main.c: 103:         if (PORTBbits.RB0 == 1){
  7729     0D5E  1283               	bcf	3,5	;RP0=0, select bank0
  7730     0D5F  1303               	bcf	3,6	;RP1=0, select bank0
  7731     0D60  1C06               	btfss	6,0	;volatile
  7732     0D61  2D63               	goto	u261_21
  7733     0D62  2D64               	goto	u261_20
  7734     0D63                     u261_21:
  7735     0D63  2D9C               	goto	i1l260
  7736     0D64                     u261_20:
  7737     0D64                     i1l2936:
  7738                           
  7739                           ;main.c: 104:             modo++;
  7740     0D64  3001               	movlw	1
  7741     0D65  00F0               	movwf	??_ISR
  7742     0D66  0870               	movf	??_ISR,w
  7743     0D67  07EF               	addwf	_modo,f
  7744     0D68                     i1l2938:
  7745                           
  7746                           ;main.c: 105:             cambio = 0;
  7747     0D68  01F9               	clrf	_cambio
  7748     0D69                     i1l2940:
  7749                           
  7750                           ;main.c: 106:             INTCONbits.RBIF = 0;
  7751     0D69  100B               	bcf	11,0	;volatile
  7752     0D6A  2D9C               	goto	i1l260
  7753     0D6B                     i1l252:	
  7754                           ;main.c: 109:     else if (PORTBbits.RB1 == 0){
  7755                           
  7756     0D6B  1886               	btfsc	6,1	;volatile
  7757     0D6C  2D6E               	goto	u262_21
  7758     0D6D  2D6F               	goto	u262_20
  7759     0D6E                     u262_21:
  7760     0D6E  2D84               	goto	i1l255
  7761     0D6F                     u262_20:
  7762     0D6F                     i1l2942:
  7763                           
  7764                           ;main.c: 110:         _delay((unsigned long)((10)*(8000000/4000.0)));
  7765     0D6F  301A               	movlw	26
  7766     0D70  00F1               	movwf	??_ISR+1
  7767     0D71  30F8               	movlw	248
  7768     0D72  00F0               	movwf	??_ISR
  7769     0D73                     u355_27:
  7770     0D73  0BF0               	decfsz	??_ISR,f
  7771     0D74  2D73               	goto	u355_27
  7772     0D75  0BF1               	decfsz	??_ISR+1,f
  7773     0D76  2D73               	goto	u355_27
  7774     0D77  0000               	nop
  7775     0D78                     i1l2944:
  7776                           
  7777                           ;main.c: 111:         if (PORTBbits.RB1 == 1){
  7778     0D78  1283               	bcf	3,5	;RP0=0, select bank0
  7779     0D79  1303               	bcf	3,6	;RP1=0, select bank0
  7780     0D7A  1C86               	btfss	6,1	;volatile
  7781     0D7B  2D7D               	goto	u263_21
  7782     0D7C  2D7E               	goto	u263_20
  7783     0D7D                     u263_21:
  7784     0D7D  2D9C               	goto	i1l260
  7785     0D7E                     u263_20:
  7786     0D7E                     i1l2946:
  7787                           
  7788                           ;main.c: 112:             cambio++;
  7789     0D7E  3001               	movlw	1
  7790     0D7F  00F0               	movwf	??_ISR
  7791     0D80  0870               	movf	??_ISR,w
  7792     0D81  07F9               	addwf	_cambio,f
  7793     0D82                     i1l2948:
  7794                           
  7795                           ;main.c: 113:             INTCONbits.RBIF = 0;
  7796     0D82  100B               	bcf	11,0	;volatile
  7797     0D83  2D9C               	goto	i1l260
  7798     0D84                     i1l255:	
  7799                           ;main.c: 116:     else if (PORTBbits.RB2 == 0){
  7800                           
  7801     0D84  1906               	btfsc	6,2	;volatile
  7802     0D85  2D87               	goto	u264_21
  7803     0D86  2D88               	goto	u264_20
  7804     0D87                     u264_21:
  7805     0D87  2D9C               	goto	i1l254
  7806     0D88                     u264_20:
  7807     0D88                     i1l2950:
  7808                           
  7809                           ;main.c: 117:         _delay((unsigned long)((10)*(8000000/4000.0)));
  7810     0D88  301A               	movlw	26
  7811     0D89  00F1               	movwf	??_ISR+1
  7812     0D8A  30F8               	movlw	248
  7813     0D8B  00F0               	movwf	??_ISR
  7814     0D8C                     u356_27:
  7815     0D8C  0BF0               	decfsz	??_ISR,f
  7816     0D8D  2D8C               	goto	u356_27
  7817     0D8E  0BF1               	decfsz	??_ISR+1,f
  7818     0D8F  2D8C               	goto	u356_27
  7819     0D90  0000               	nop
  7820     0D91                     i1l2952:
  7821                           
  7822                           ;main.c: 118:         if (PORTBbits.RB2 == 1){
  7823     0D91  1283               	bcf	3,5	;RP0=0, select bank0
  7824     0D92  1303               	bcf	3,6	;RP1=0, select bank0
  7825     0D93  1D06               	btfss	6,2	;volatile
  7826     0D94  2D96               	goto	u265_21
  7827     0D95  2D97               	goto	u265_20
  7828     0D96                     u265_21:
  7829     0D96  2D9C               	goto	i1l260
  7830     0D97                     u265_20:
  7831     0D97                     i1l2954:
  7832                           
  7833                           ;main.c: 119:             cambio = cambio + 10;
  7834     0D97  0879               	movf	_cambio,w
  7835     0D98  3E0A               	addlw	10
  7836     0D99  00F9               	movwf	_cambio
  7837     0D9A                     i1l2956:
  7838                           
  7839                           ;main.c: 120:             INTCONbits.RBIF = 0;
  7840     0D9A  100B               	bcf	11,0	;volatile
  7841     0D9B  2D9C               	goto	i1l260
  7842     0D9C                     i1l254:
  7843     0D9C                     i1l260:
  7844     0D9C  0873               	movf	??_ISR+3,w
  7845     0D9D  008A               	movwf	10
  7846     0D9E  0E72               	swapf	??_ISR+2,w
  7847     0D9F  0083               	movwf	3
  7848     0DA0  0EFE               	swapf	btemp,f
  7849     0DA1  0E7E               	swapf	btemp,w
  7850     0DA2  0009               	retfie
  7851     0DA3                     __end_of_ISR:
  7852     007E                     btemp	set	126	;btemp
  7853     007E                     wtemp0	set	126
  7854                           
  7855                           	psect	intentry
  7856     0004                     __pintentry:	
  7857                           ;incstack = 0
  7858                           ; Regs used in _ISR: [wreg+status,2+status,0]
  7859                           
  7860     0004                     interrupt_function:
  7861     007E                     saved_w	set	btemp
  7862     0004  00FE               	movwf	btemp
  7863     0005  0E03               	swapf	3,w
  7864     0006  00F2               	movwf	??_ISR+2
  7865     0007  080A               	movf	10,w
  7866     0008  00F3               	movwf	??_ISR+3
  7867     0009  120A  158A  2D4B   	ljmp	_ISR
  7868                           
  7869                           	psect	idloc
  7870                           
  7871                           ;Config register IDLOC0 @ 0x2000
  7872                           ;	unspecified, using default values
  7873     2000                     	org	8192
  7874     2000  3FFF               	dw	16383
  7875                           
  7876                           ;Config register IDLOC1 @ 0x2001
  7877                           ;	unspecified, using default values
  7878     2001                     	org	8193
  7879     2001  3FFF               	dw	16383
  7880                           
  7881                           ;Config register IDLOC2 @ 0x2002
  7882                           ;	unspecified, using default values
  7883     2002                     	org	8194
  7884     2002  3FFF               	dw	16383
  7885                           
  7886                           ;Config register IDLOC3 @ 0x2003
  7887                           ;	unspecified, using default values
  7888     2003                     	org	8195
  7889     2003  3FFF               	dw	16383
  7890                           
  7891                           	psect	config
  7892                           
  7893                           ;Config register CONFIG1 @ 0x2007
  7894                           ;	Oscillator Selection bits
  7895                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  7896                           ;	Watchdog Timer Enable bit
  7897                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  7898                           ;	Power-up Timer Enable bit
  7899                           ;	PWRTE = OFF, PWRT disabled
  7900                           ;	RE3/MCLR pin function select bit
  7901                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  7902                           ;	Code Protection bit
  7903                           ;	CP = OFF, Program memory code protection is disabled
  7904                           ;	Data Code Protection bit
  7905                           ;	CPD = OFF, Data memory code protection is disabled
  7906                           ;	Brown Out Reset Selection bits
  7907                           ;	BOREN = OFF, BOR disabled
  7908                           ;	Internal External Switchover bit
  7909                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  7910                           ;	Fail-Safe Clock Monitor Enabled bit
  7911                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  7912                           ;	Low Voltage Programming Enable bit
  7913                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  7914                           ;	In-Circuit Debugger Mode bit
  7915                           ;	DEBUG = 0x1, unprogramme  7916     2007                     	org	8199
  7917     2007  20D4               	dw	8404
  7918                           
  7919                           ;Config register CONFIG2 @ 0x2008
  7920                           ;	Brown-out Reset Selection bit
  7921                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  7922                           ;	Flash Program Memory Self Write Enable bits
  7923                           ;	WRT = OFF, Write protection off
  7924     2008                     	org	8200
  7925     2008  3FFF               	dw	16383

Data Sizes:
    Strings     12
    Constant    10
    Data        0
    BSS         56
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     62      80
    BANK1            80      4      38
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_8(CODE[3]), STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), buffer(BANK1[20]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _main->_I2C_Master_Read
    _main->_I2C_Master_Write
    _valorLCD->_Lcd_Write_Char
    _sprintf->___lwmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _modoboton->_I2C_Master_Write
    _map->___aldiv
    ___aldiv->___lmul
    _leer_sec->_I2C_Master_Read
    _leer_sec->_I2C_Master_Write
    _leer_min->_I2C_Master_Read
    _leer_min->_I2C_Master_Write
    _leer_mes->_I2C_Master_Read
    _leer_mes->_I2C_Master_Write
    _leer_hora->_I2C_Master_Read
    _leer_hora->_I2C_Master_Write
    _convh->___bmul
    _leer_dia->_I2C_Master_Read
    _leer_dia->_I2C_Master_Write
    _leer_ano->_I2C_Master_Read
    _leer_ano->_I2C_Master_Write
    _conv->___bmul
    _descomponer->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_map
    _valorLCD->_sprintf
    _sprintf->___lwmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _map->___aldiv
    ___aldiv->___lmul
    _leer_sec->_conv
    _leer_min->_conv
    _leer_mes->_convh
    _leer_hora->_convh
    _convh->___bmul
    _leer_dia->_conv
    _leer_ano->_conv
    _conv->___bmul
    _descomponer->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   49999
                                              0 BANK1      4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _descomponer
                          _inttochar
                           _leer_ano
                           _leer_dia
                          _leer_hora
                           _leer_mes
                           _leer_min
                           _leer_sec
                                _map
                          _modoboton
                              _setup
                        _setupINTOSC
                           _valorLCD
 ---------------------------------------------------------------------------------
 (1) _valorLCD                                             2     2      0    5975
                                             25 BANK0      2     2      0
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1882
                                             12 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2    1104
                                              3 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     254
                                              5 COMMON     1     1      0
                                              0 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1    2735
                                              2 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0     176
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     542
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              4 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _modoboton                                            2     2      0    3091
                                              0 BANK0      2     2      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                       _verificacion
 ---------------------------------------------------------------------------------
 (2) _verificacion                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _map                                                 36    16     20    1435
                                             26 BANK0     36    16     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     316
                                              4 COMMON     1     1      0
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              5 COMMON     1     1      0
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _leer_sec                                             0     0      0    4266
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                               _conv
 ---------------------------------------------------------------------------------
 (1) _leer_min                                             0     0      0    4266
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                               _conv
 ---------------------------------------------------------------------------------
 (1) _leer_mes                                             0     0      0    4266
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                              _convh
 ---------------------------------------------------------------------------------
 (1) _leer_hora                                            0     0      0    4266
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                              _convh
 ---------------------------------------------------------------------------------
 (2) _convh                                                5     5      0     480
                                              2 BANK0      5     5      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _leer_dia                                             0     0      0    4266
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                               _conv
 ---------------------------------------------------------------------------------
 (1) _leer_ano                                             0     0      0    4266
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                               _conv
 ---------------------------------------------------------------------------------
 (2) _conv                                                 5     5      0     480
                                              2 BANK0      5     5      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     316
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    3091
                                              4 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     695
                                              4 COMMON     2     0      2
                                              0 BANK0      4     4      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inttochar                                            1     1      0     220
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _descomponer                                          9     5      4    4750
                                             12 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     463
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     601
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     613
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     625
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     434
                                              2 BANK0      2     2      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     155
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     124
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _descomponer
     ___awdiv
     ___awmod
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _inttochar
   _leer_ano
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _conv
       ___bmul
   _leer_dia
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _conv
   _leer_hora
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _convh
       ___bmul
   _leer_mes
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _convh
   _leer_min
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _conv
   _leer_sec
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _conv
   _map
     ___aldiv
       ___lmul (ARG)
     ___lmul
   _modoboton
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _verificacion
   _setup
     _I2C_Master_Init
       ___lldiv
   _setupINTOSC
   _valorLCD
     _Lcd_Set_Cursor
     _Lcd_Write_Char
     _Lcd_Write_String
     _sprintf
       ___lwdiv
       ___lwmod

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      80       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3E      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      4      26       7       47.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      80      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Feb 13 11:47:58 2023

                               pc 0002                    ___bmul@product 0020                                l10 0976  
                              l20 0987                                l12 0979                                l22 098D  
                              l14 097F                                l31 08EE                                l16 0980  
                              l25 098E                                l41 07D5                                l18 0986  
                              l28 092E                                l44 0FFF                                l37 07D5  
                              l53 0CB2                                l47 0A1F                                l81 0E5C  
                              l73 0E09                                l74 0E15                                l75 0E21  
                              l68 06A1                                l76 0E2D                                l77 0E39  
                              l78 0E45                                l79 0E50                                _V1 006E  
                              _d1 00A0                      ___awdiv@sign 0025                                _u1 00A2  
                              fsr 0004                               l400 0BE3                               l330 08EF  
                             l403 0B1A                               l420 0D4A                               l333 08FB  
                             l350 09EA                               l342 08D7                               l407 0D4A  
                             l327 0A59                               l271 09BA                               l336 08CE  
                             l345 08E1                               l282 0536                               l602 0F27  
                             l274 0423                               l339 08C5                               l348 09E0  
                             l429 0EBF                               l349 09E3                               l382 094D  
                             l294 07FC                               l391 0C26                               l631 06B6  
                             l288 0536                               l385 096C                               l641 073E  
                             l394 0AD7                               l298 07FC                               l562 05F9  
                             l732 0DFD                               l388 0BA0                               l580 0CFA  
                             l397 0B5D                               l719 0F90                               l592 0912  
                             l838 0C6C                               l848 0A95                               _GIE 005F  
                             _ISR 0D4B                               _dia 0060                               _ano 005E  
                             _map 05FA                               _mes 005F                               _min 0062  
                             _sec 0063                               fsr0 0004                               indf 0000  
                    ___awmod@sign 0025                              ?_ISR 0070                              l2220 0A5A  
                            l3100 0ED2                              l2230 0A74                              l2222 0A62  
                            l3110 0F01                              l3102 0ED5                              l3040 096E  
                            l2232 0A7E                              l2224 0A65                              l3200 08CB  
                            l3112 0F0F                              l3104 0EE2                              l3042 0972  
                            l3050 0914                              l3130 0C3B                              l3122 0C27  
                            l2234 0A84                              l2226 0A6C                              l3210 09C8  
                            l3202 08D8                              l3114 0F10                              l3106 0EE6  
                            l3044 097D                              l3052 0917                              l3140 0C5B  
                            l3132 0C3F                              l3124 0C2B                              l2236 0A8B  
                            l2228 0A70                              l3212 09D1                              l3204 08DD  
                            l3300 094C                              l3116 0F19                              l3108 0EEF  
                            l3060 09EE                              l3046 0984                              l3054 091D  
                            l3142 0C62                              l3134 0C43                              l3126 0C31  
                            l2238 0A91                              l3214 09D6                              l3206 09BB  
                            l3222 08CF                              l3310 096B                              l3118 0F1F  
                            l3230 0A27                              l3150 0742                              l3070 0A0B  
                            l3062 09F4                              l3048 098B                              l3056 0920  
                            l3400 0DE9                              l3136 0C54                              l3128 0C34  
                            l3144 0C68                              l3080 08EF                              l3216 09DC  
                            l3208 09C0                              l3224 08D4                              l3304 0951  
                            l2440 06A5                              l3320 0CD8                              l3232 0A56  
                            l3152 0747                              l3160 0766                              l3072 0A0E  
                            l3064 09F5                              l3240 053D                              l3058 092B  
                            l3410 0F91                              l3330 0F2B                              l3402 0DEF  
                            l3138 0C5A                              l3082 08F5                              l3218 09E4  
                            l3090 0908                              l3306 0954                              l2450 06D1  
                            l2442 06A9                              l3322 0CE1                              l3314 0CB3  
                            l3234 0A57                              l3226 0A20                              l3162 076C  
                            l3170 078B                              l3154 0754                              l3074 0A14  
                            l3066 0A03                              l3242 0543                              l3148 08E2  
                            l3420 0FBF                              l3412 0F99                              l3340 0F3F  
                            l3332 0F2F                              l3404 0DF4                              l3092 090A  
                            l3084 08FF                              l3308 095F                              l2460 06F6  
                            l2452 06D9                              l2444 06BA                              l3324 0CF2  
                            l3316 0CBD                              l3236 0A58                              l3228 0A24  
                            l3172 0791                              l3180 07B0                              l3164 0779  
                            l3156 0757                              l3076 0A17                              l3068 0A06  
                            l3252 0554                              l3244 0548                              l3500 038E  
                            l3414 0F9F                              l3350 0F55                              l3342 0F43  
                            l3334 0F34                              l3406 0DF9                              l3094 0911  
                            l3086 0900                              l2462 0708                              l2454 06DC  
                            l2470 0726                              l2446 06C5                              l2438 06A2  
                            l3318 0CC1                              l3422 05FA                              l2390 07E7  
                            l3430 0997                              l3182 07B6                              l3174 079E  
                            l3166 077C                              l3158 075D                              l3078 0A1C  
                            l3190 0C6D                              l3270 05A2                              l3254 056E  
                            l3246 054D                              l3238 053A                              l3510 03C7  
                            l3502 0398                              l3416 0FA9                              l3360 0F75  
                            l3352 0F59                              l3344 0F45                              l3336 0F36  
                            l3328 0F28                              l2800 0D42                              l3088 0904  
                            l2472 072B                              l2464 0716                              l2456 06E9  
                            l2448 06C9                              l2392 07EA                              l2384 07D6  
                            l3600 0449                              l3440 099E                              l3432 0998  
                            l3184 07C3                              l3176 07A1                              l3168 0782  
                            l3192 0C72                              l3272 05A5                              l3264 057C  
                            l3256 0576                              l3248 054F                              l3280 05E5  
                            l3520 03F5                              l3512 03D1                              l3504 03A0  
                            l3418 0FB9                              l3362 0F7C                              l3354 0F5D  
                            l3346 0F4B                              l3338 0F3A                              l2802 0D48  
                            l2730 0D01                              l3290 08BD                              l3530 0AD6  
                            l2474 0736                              l2466 0717                              l2458 06ED  
                            l2394 07F0                              l2386 07DE                              l3610 046A  
                            l3602 0457                              l3098 0EC0                              l3450 09A5  
                            l3442 099F                              l3434 0999                              l3426 098F  
                            l3186 07C6                              l3178 07A7                              l3194 0C8E  
                            l3274 05D3                              l3258 057A                              l3282 05F5  
                            l3522 03FD                              l3514 03D9                              l3506 03B5  
                            l3356 0F6E                              l3348 0F4E                              l3364 0F82  
                            l3380 0DB1                              l3372 0DA3                              l3292 08C2  
                            l2468 0720                              l2396 07F3                              l2388 07E1  
                            l3620 0494                              l3612 046F                              l3604 045D  
                            l3460 09AA                              l3452 09A6                              l3444 09A0  
                            l3436 099C                              l3428 0993                              l2580 0E0F  
                            l3188 07CC                              l3196 0C96                              l3276 05D8  
                            l3268 0598                              l3524 0407                              l3516 03E3  
                            l3508 03BF                              l3700 0082                              l3366 0F87  
                            l3358 0F74                              l3390 0DCA                              l3382 0DB5  
                            l3374 0DA6                              l3534 0E5D                              l3198 08C6  
                            l3294 0932                              l2398 07F9                              l3630 04AC  
                            l3614 0478                              l3606 0463                              l3622 049A  
                            l3462 09AB                              l3454 09A7                              l3446 09A1  
                            l3438 099D                              l2590 0E4A                              l2582 0E1B  
                            l3278 05DC                              l3526 0418                              l3518 03EB  
                            l3470 02CC                              l3710 0126                              l3702 00D7  
                            l3368 0F8C                              l3392 0DCE                              l3384 0DBA  
                            l3376 0DAA                              l3552 0EB8                              l3544 0E9E  
                            l3536 0E95                              l2760 0D1A                              l2752 0D12  
                            l2744 0D0A                              l2736 0D03                              l2728 0CFC  
                            l3296 0935                              l3560 0C25                              l3528 0A96  
                            l3640 04D3                              l3632 04B5                              l3624 04A0  
                            l3616 0481                              l3608 0465                              l3456 09A8  
                            l3448 09A2                              l2592 0E55                              l2584 0E27  
                            l2576 0DFF                              l3480 02FB                              l3472 02D7  
                            l3464 0297                              l3720 01AA                              l3712 0145  
                            l3704 00DF                              l3394 0DD2                              l3386 0DC0  
                            l3378 0DAF                              l3554 0EBE                              l3546 0EA4  
                            l3538 0E9C                              l2770 0D28                              l2762 0D20  
                            l2754 0D18                              l2746 0D10                              l2738 0D08  
                            l3298 0940                              l3570 0B1B                              l3650 04F1  
                            l3642 04D5                              l3634 04BE                              l3626 04A2  
                            l3618 048F                              l3458 09A9                              l2594 0E59  
                            l2586 0E33                              l2578 0E05                              l3490 0334  
                            l3482 0310                              l3474 02E1                              l3466 02A1  
                            l3730 0218                              l3722 01B2                              l3714 0165  
                            l3706 00FE                              l3396 0DDC                              l3388 0DC3  
                            l3572 0B5C                              l3564 0B5E                              l3660 050D  
                            l3644 04DA                              l3628 04A7                              l2588 0E3F  
                            l3492 033E                              l3484 031A                              l3476 02E9  
                            l3468 02B7                              l3740 0288                              l3732 023A  
                            l3724 01CF                              l3716 016D                              l3708 011E  
                            l3398 0DE2                              l3582 0AD8                              l3566 0B9F  
                            l3558 0BE4                              l3670 0534                              l3662 0516  
                            l3646 04DF                              l3654 0500                              l3638 04CD  
                            l3590 042B                              l3494 0373                              l3486 0322  
                            l3478 02F3                              l3734 0242                              l3726 01F1  
                            l3718 018A                              ?_map 003A                              l2792 0D3A  
                            l2784 0D32                              l2776 0D2A                              l2768 0D22  
                            l3584 0B19                              l3576 0BA1                              l3664 051F  
                            l3656 0506                              l3648 04E8                              l3592 042D  
                            l3496 037E                              l3488 032C                              l3736 0261  
                            l3728 01F9                              l3680 0028                              l2794 0D40  
                            l2786 0D38                              l2778 0D30                              l3578 0BE2  
                            l3658 0508                              l3594 0432                              l3762 0566  
                            l3498 0388                              l3738 0283                              l3690 0059  
                            l3682 0038                              l3668 052E                              l3596 0437  
                            l3588 0424                              l3692 005E                              l3684 003F  
                            l3598 0440                              l3694 0067                              l3686 0044  
                            l3696 0073                              l3688 004E                              l3698 0078  
                            _ADIF 0066                              STR_1 081A                              STR_2 081D  
                            STR_3 0824                              STR_4 0822                              STR_5 0822  
                            STR_6 0820                              STR_7 0820                              STR_8 081D  
                            u2000 06A9                              u2001 06A8                              u2010 06BA  
                            u2011 06B9                              u2020 06D9                              u2021 06D8  
                            u3000 09DC                              u2040 06ED                              u3001 09DB  
                            u2041 06EC                              u3010 0A37                              u2035 06DE  
                            u2060 0708                              u3020 0543                              u2061 0707  
                            u3101 0CCA                              u3021 0542                              u3102 0CD1  
                            u3030 0597                              u2055 06EF                              u3103 0CD8  
                            u3015 0A32                              u3031 0596                              u3200 0F6E  
                            u2080 0726                              u2320 0E05                              u3040 05A2  
                            u3201 0F6D                              u2081 0725                              u2065 0704  
                            u2321 0E04                              u3041 05A1                              u2090 072B  
                            u3130 0CF2                              u2330 0E0F                              u3050 05E5  
                            u2091 072A                              u2075 0718                              u3131 0CF1  
                            u3115 0CDA                              u2331 0E0E                              u3051 05E4  
                            u3035 0593                              u3220 0F82                              u3140 0F2F  
                            u1700 0A91                              u2500 0D38                              u2340 0E1B  
                            u3060 05F5                              u3221 0F81                              u3205 0F6A  
                            u3141 0F2E                              u1701 0A90                              u2501 0D37  
                            u3125 0CE2                              u2341 0E1A                              u3061 05F4  
                            u3230 0F87                              u3150 0F3A                              u3310 0DEF  
                            u2510 0D40                              u2430 0D01                              u2350 0E27  
                            u3231 0F86                              u3215 0F76                              u3151 0F39  
                            u3311 0DEE                              u2511 0D3F                              u2431 0D00  
                            u2351 0E26                              u3160 0F4B                              u3320 0DF4  
                            u3240 0DAA                              u2520 0D48                              u2440 0D08  
                            u3400 0463                              u2360 0E33                              u3161 0F4A  
                            u3321 0DF3                              u3305 0DE3                              u3241 0DA9  
                            u2521 0D47                              u2441 0D07                              u3401 0462  
                            u2361 0E32                              u3250 0DB5                              u1650 0A62  
                            u2450 0D10                              u3090 0CC1                              u3410 04A0  
                            u2370 0E3F                              u3251 0DB4                              u1651 0A61  
                            u2451 0D0F                              u3075 0938                              u3091 0CC0  
                            u3331 060B                              u3411 049F                              u2371 0E3E  
                            u3180 0F5D                              u3260 0DC0                              u2460 0D18  
                            u3332 060C                              u1900 07E7                              u3420 04D3  
                            u2380 0E4A                              u3181 0F5C                              u3261 0DBF  
                            u2461 0D17                              u3085 0957                              u3341 062F  
                            u3333 0611                              u1901 07E6                              u3421 04D2  
                            u2381 0E49                              u1670 0A74                              u2470 0D20  
                            u2710 08F5                              u3342 0630                              u3334 0612  
                            u1910 07F0                              u3430 0506                              u2390 0E55  
                            u3175 0F4F                              u1671 0A73                              u2471 0D1F  
                            u2711 08F4                              u3351 0653                              u3343 0635  
                            u3335 0617                              u1911 07EF                              u3431 0505  
                            u2391 0E54                              u3280 0DD2                              u1680 0A7E  
                            u3360 0E9C                              u2480 0D28                              u2720 08FB  
                            u3352 0654                              u3344 0636                              u3336 0618  
                            u1920 07F9                              u3440 0534                              u3281 0DD1  
                            u1681 0A7D                              u1665 0A66                              u3361 0E9B  
                            u2481 0D27                              u2721 08FA                              u3353 0659  
                            u3345 063B                              u1921 07F8                              u3441 0533  
                            u2705 09F8                              u3290 0DDC                              u3370 0EA4  
                            u2490 0D30                              u2730 0904                              u3354 065A  
                            u3346 063C                              u2810 0F1F                              u3507 0FA5  
                            u3195 0F5E                              u3291 0DDB                              u3275 0DC4  
                            u3371 0EA3                              u2491 0D2F                              u2731 0903  
                            u3355 065F                              u2811 0F1E                              u2660 0972  
                            u2820 0C31                              u3380 0EBE                              u2740 0911  
                            u3356 0660                              u2661 0971                              u3517 0FB5  
                            u2821 0C30                              u1685 0A7A                              u3381 0EBD  
                            u2741 0910                              u2805 0F11                              u2670 097D  
                            u3390 042B                              u2750 0ED2                              u2910 076C  
                            u2671 097C                              u3527 0FC5                              u3295 0DD8  
                            u1695 0A85                              u3391 042A                              u2751 0ED1  
                            u2911 076B                              u2680 0984                              u2840 0C43  
                            u2681 0983                              u3537 0926                              u2841 0C42  
                            u2905 074D                              u3457 003C                              u2690 098B  
                            u1890 07DE                              u2770 0EE6                              u2930 0791  
                            u2691 098A                              u2835 0C35                              u1891 07DD  
                            u2771 0EE5                              u2931 0790                              u3467 007E  
                            _PEIE 005E                              u2860 0C54                              u2861 0C53  
                            u2765 0ED7                              u2925 0772                              u3477 028E  
                            u2790 0F01                              u2950 07B6                              u2855 0C44  
                            u2791 0F00                              u2951 07B5                              u3487 0A08  
                            u2880 0C68                              _RBIF 0058                              u2881 0C67  
                            u2865 0C50                              u2785 0EE8                              u2945 0797  
                            u3497 0A19                              u2890 0747                              u2970 0C7C  
                            u2875 0C5C                              u2795 0EFD                              u2891 0746  
                            u2980 0CA0                              u2965 07BC                              u2990 0CB2  
                            u2991 0CB1                              _ddia 00AC                              _dano 00A8  
               ?_Lcd_Write_String 0023                              _dias 006A                              _dmes 00AA  
                            _anos 0068                              _dmin 0064  __end_of_I2C_Master_RepeatedStart 08C6  
                            _dseg 0066                              _conv 092F                              _main 0028  
                            _hora 0061                              _modo 006F                              _udia 0076  
                            _uano 00A9                              _umes 00AB                              _umin 0065  
                            map@x 003A                              _useg 0067                              btemp 007E  
                            start 000C                ??_Lcd_Write_String 0025                   __end_of_Lcd_Cmd 092F  
                     convh@valor2 0026                 ___bmul@multiplier 0021                       convh@unhora 0023  
                           ??_ISR 0070                             ??_map 004E                  ?_I2C_Master_Init 002D  
                ?_I2C_Master_Read 0074                  ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070  
                 __end_of___aldiv 073F                             ?_conv 0070                             ?_main 0070  
                 __end_of___awdiv 0F91                   __end_of___awmod 0DFE                             _ANSEL 0188  
                 __end_of___lldiv 0F28                   ___awdiv@divisor 0020                   __end_of___lwdiv 0C6D  
                           i1l252 0D6B                             i1l260 0D9C                             i1l254 0D9C  
                           i1l255 0D84                   __end_of___lwmod 0A96                   ___awdiv@counter 0024  
                           _PORTA 0005                             _PORTB 0006                             _PORTD 0008  
                           _PORTE 0009                             _TRISA 0085                             _TRISB 0086  
                           _TRISD 0088                             _SSPIE 0463                             _SSPIF 0063  
                           _VOLT1 00A4               ___lmul@multiplicand 0024                             _dhora 0077  
                 __end_of_dpowers 081A                             _convh 094E                             _horas 006B  
                           _meses 0069                             _valor 00A7                             _setup 098F  
                           _uhora 0078                      convh@dechora 0024                             pclath 000A  
                           status 0003                             wtemp0 007E                   __end_of_sprintf 05FA  
                __end_of_Lcd_Init 1000                  __end_of_Lcd_Port 098F                   __initialization 000F  
                    __end_of_conv 094E                      __end_of_main 0297                    conv@convertido 0025  
                          ??_conv 0022                            ??_main 00C2                 ?_I2C_Master_Start 0070  
               ?_I2C_Master_Write 0074                ??_I2C_Master_Start 0074                ??_I2C_Master_Write 0076  
                          ?_convh 0070                            _ADRESH 001E                  ___awdiv@dividend 0022  
                          ?_setup 0070                            _ANSELH 0189                            i1l2930 0D4F  
                          i1l2940 0D69                            i1l2932 0D55                            i1l2950 0D88  
                          i1l2942 0D6F                            i1l2934 0D5E                            i1l2952 0D91  
                          i1l2944 0D78                            i1l2936 0D64                            i1l2928 0D4B  
                          i1l2954 0D97                            i1l2946 0D7E                            i1l2938 0D68  
                          i1l2956 0D9A                            i1l2948 0D82                            u260_20 0D55  
                          u260_21 0D54                            u261_20 0D64                            u261_21 0D63  
                          u262_20 0D6F                            u262_21 0D6E                            u263_20 0D7E  
                          u263_21 0D7D                            u264_20 0D88                            u264_21 0D87  
                          u265_20 0D97                            u265_21 0D96                            u354_27 0D59  
                          u259_20 0D4F                            u259_21 0D4E                            u355_27 0D73  
                          u356_27 0D8C                         ??_Lcd_Cmd 0020                            _SSPADD 0093  
                          _TRISC3 043B                            _TRISC4 043C                            _SSPCON 0014  
                          _SSPBUF 0013          _I2C_Master_RepeatedStart 08BD                            ___bmul 08FC  
                          ___lmul 0CB3                         ??___aldiv 0075                            _cambio 0079  
                       ??___awdiv 0074                            _lecADC 00AD                  __end_of_leer_dia 0B5E  
                       ??___awmod 0074                  __end_of_leer_ano 0B1B                  __end_of_leer_mes 0BE4  
                __end_of_leer_min 0C27                  __end_of_leer_sec 0AD8                         ??___lldiv 0074  
                       ??___lwdiv 0074                         ??___lwmod 0075                            _buffer 00AE  
                ___awdiv@quotient 0026                   ___awmod@divisor 0020                            _valor2 00A6  
                 ___awmod@counter 0024                            conv@un 0023                      ?_setupINTOSC 0070  
                __end_of_valorLCD 0424                            saved_w 007E                         ??_sprintf 002F  
                 Lcd_Set_Cursor@a 0024                   Lcd_Set_Cursor@b 0022                   Lcd_Set_Cursor@y 0026  
                 Lcd_Set_Cursor@z 0025           __end_of__initialization 0024                 __end_of_Lcd_Clear 08EF  
             ___bmul@multiplicand 0074                   descomponer@cent 0032                    __pcstackCOMMON 0070  
                   __end_of_convh 096D                     __end_of_setup 09BB                    _Lcd_Set_Cursor 073F  
                  _OPTION_REGbits 0081                         ?_Lcd_Init 0070                         ?_Lcd_Port 0070  
                         ??_convh 0022                           ??_setup 0075                        __pbssBANK0 005E  
                      __pbssBANK1 00A0               convh@convertidohora 0025                        __pmaintext 0028  
                         ?___bmul 0074                           ?___lmul 0020                        __pintentry 0004  
                  ___lmul@product 0028            __end_of_Lcd_Set_Cursor 07D6                        ??_Lcd_Init 0022  
                      ??_Lcd_Port 0074                           _SSPCON2 0091                           _SSPSTAT 0094  
                      __stringtab 0800                         ?_leer_dia 0070                         ?_leer_ano 0070  
                       ?_leer_mes 0070                         ?_leer_min 0070                         ?_leer_sec 0070  
                  _Lcd_Write_Char 09EB                           _Lcd_Cmd 0913                         ?_valorLCD 0070  
                         ___aldiv 06A2                           ___awdiv 0F28                           ___awmod 0DA3  
                         ___lldiv 0EC0                           ___lwdiv 0C27                           ___lwmod 0A5A  
               __end_of_leer_hora 0BA1                         _ANSELbits 0188                   ?_Lcd_Set_Cursor 0022  
                         __ptext1 0297                           __ptext2 0537                           __ptext3 0C6D  
                         __ptext4 09EB                           __ptext5 073F                           __ptext6 0DFE  
                         __ptext7 098F                           __ptext8 0A20                           __ptext9 0EC0  
                         _dpowers 0810                  ___awmod@dividend 0022                  ___aldiv@dividend 0030  
                         _minutos 006C                           map@eMax 0042                           map@eMin 003E  
                         map@sMax 004A                           map@sMin 0046                           conv@dec 0024  
                         _sprintf 0537                 __end_of_modoboton 0537                           clrloop0 08B6  
               __end_of_inttochar 0D4B            __end_of_Lcd_Write_Char 0A20              end_of_initialization 0024  
      ??_I2C_Master_RepeatedStart 0074                        ??_leer_dia 0076                        ??_leer_ano 0076  
                      ??_leer_mes 0076                        ??_leer_min 0076                        ??_leer_sec 0076  
                 ___lldiv@divisor 0020                   ___lldiv@counter 002C                        ??_valorLCD 0039  
                ___aldiv@quotient 0036                  I2C_Master_Init@c 002D                  I2C_Master_Read@a 0074  
                       Lcd_Port@a 0074                         _PORTAbits 0005                         _PORTBbits 0006  
                       _PORTDbits 0008                     ??_descomponer 0030                         _TRISAbits 0085  
                       _TRISCbits 0087                         _TRISDbits 0088                   ?_Lcd_Write_Char 0070  
                   ?_verificacion 0070                 Lcd_Write_String@a 0023                 Lcd_Write_String@i 0028  
                       _Lcd_Clear 08E2                    __end_of___bmul 0913                    __end_of___lmul 0CFB  
                _Lcd_Write_String 0C6D               start_initialization 000F                       __end_of_ISR 0DA3  
                     __end_of_map 06A2                    ??_verificacion 0074               __end_of_descomponer 0EC0  
               ??_I2C_Master_Init 0031                 ??_I2C_Master_Read 0020                 ??_I2C_Master_Wait 0074  
               ??_I2C_Master_Stop 0074                        ?_Lcd_Clear 0070                          ??___bmul 0075  
                        ??___lmul 0074                   Lcd_Write_Char@a 0022                   Lcd_Write_Char@y 0021  
                     __pbssCOMMON 0076                         ___latbits 0002                    descomponer@dec 0034  
                   __pcstackBANK0 0020                     __pcstackBANK1 00C2                    descomponer@num 002E  
                  descomponer@pos 002C                    descomponer@uni 0033                   setupINTOSC@IRCF 0074  
                        ?_Lcd_Cmd 0070                       sprintf@flag 0032                       sprintf@prec 0036  
                _I2C_Master_Start 08C6                  _I2C_Master_Write 08D8                  ___lwdiv@dividend 0022  
                ??_Lcd_Set_Cursor 0023                          ?___aldiv 002C                      inttochar@num 0074  
                        ?___awdiv 0020                          ?___awmod 0020                          ?___lldiv 0020  
                        ?___lwdiv 0020                          ?___lwmod 0027                         __pstrings 0800  
                     _descomponer 0E5D                         _leer_hora 0B5E                  ___lwdiv@quotient 0025  
                        ?_sprintf 002C                   ___aldiv@divisor 002C                 interrupt_function 0004  
                 ___aldiv@counter 0034                         _modoboton 0424                          _IOCBbits 0096  
                       _inttochar 0CFB                         clear_ram0 08B5                          Lcd_Cmd@a 0075  
                     ??_Lcd_Clear 0076              __end_of_verificacion 07FD                        _ADCON0bits 001F  
                     __stringbase 080F                        _ADCON1bits 009F                     ??_setupINTOSC 0074  
                       conv@valor 0026                          _WPUBbits 0095                  ??_Lcd_Write_Char 0075  
                      ?_leer_hora 0070                          _Lcd_Init 0F91                          _Lcd_Port 096D  
             I2C_Master_Read@temp 0022                 ___lmul@multiplier 0020          __end_of_Lcd_Write_String 0CB3  
                      ?_modoboton 0070                        ?_inttochar 0070         ?_I2C_Master_RepeatedStart 0070  
              __end_of__stringtab 0810                        sprintf@val 0034                   _I2C_Master_Init 0A20  
                 _I2C_Master_Read 09BB                   _I2C_Master_Wait 08EF                   _I2C_Master_Stop 08CF  
                 ___lwdiv@divisor 0020                   ___lwdiv@counter 0024                          __ptext10 0424  
                        __ptext11 07D6                          __ptext20 0B1B                          __ptext12 05FA  
                        __ptext21 0AD8                          __ptext13 0CB3                          __ptext30 0CFB  
                        __ptext22 092F                          __ptext14 06A2                          __ptext31 0E5D  
                        __ptext23 08FC                          __ptext15 0A96                          __ptext40 0D4B  
                        __ptext32 0A5A                          __ptext24 08D8                          __ptext16 0BE4  
                        __ptext33 0C27                          __ptext25 08CF                          __ptext17 0BA1  
                        __ptext34 0DA3                          __ptext26 08C6                          __ptext18 0B5E  
                        __ptext35 0F28                          __ptext27 08BD                          __ptext19 094E  
                        __ptext36 0F91                          __ptext28 09BB                          __ptext37 08E2  
                        __ptext29 08EF                          __ptext38 0913                          __ptext39 096D  
             __end_of_setupINTOSC 0E5D                          _leer_dia 0B1B                          _leer_ano 0AD8  
                        _leer_mes 0BA1                          _leer_min 0BE4                          _leer_sec 0A96  
                        _valorLCD 0297                          _segundos 006D          __end_of_I2C_Master_Start 08CF  
        __end_of_I2C_Master_Write 08E2                        _INTCONbits 000B                       ??_leer_hora 0076  
              Lcd_Write_Char@temp 0020                          intlevel1 0000                         sprintf@ap 0033  
                       sprintf@sp 0037                  ___lwmod@dividend 0029                       ??_modoboton 0020  
                ___lldiv@dividend 0024                       ??_inttochar 0074                         stringcode 080A  
                      _OSCCONbits 008F           __end_of_I2C_Master_Init 0A5A           __end_of_I2C_Master_Read 09EB  
         __end_of_I2C_Master_Wait 08FC           __end_of_I2C_Master_Stop 08D8                Lcd_Set_Cursor@temp 0027  
                     _setupINTOSC 0DFE                          sprintf@c 0038                          sprintf@f 002C  
                    ?_descomponer 002C                  ___lldiv@quotient 0028                 I2C_Master_Write@d 0074  
                 ___lwmod@divisor 0027                   ___lwmod@counter 002B                          stringdir 080A  
                        stringtab 0800                      ___aldiv@sign 0035                       _SSPCON2bits 0091  
                    _verificacion 07D6  
